"use strict";
(wx["webpackJsonp"] = wx["webpackJsonp"] || []).push([["vendors-node_modules_taro_weapp_prebundle_ahooks_js"],{

/***/ "./node_modules/.taro/weapp/prebundle/ahooks.js":
/*!******************************************************!*\
  !*** ./node_modules/.taro/weapp/prebundle/ahooks.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "clearCache": function() { return /* binding */ clearCache; },
/* harmony export */   "configResponsive": function() { return /* binding */ configResponsive; },
/* harmony export */   "createUpdateEffect": function() { return /* binding */ createUpdateEffect; },
/* harmony export */   "useAntdTable": function() { return /* binding */ useAntdTable_default; },
/* harmony export */   "useAsyncEffect": function() { return /* binding */ useAsyncEffect_default; },
/* harmony export */   "useBoolean": function() { return /* binding */ useBoolean; },
/* harmony export */   "useClickAway": function() { return /* binding */ useClickAway; },
/* harmony export */   "useControllableValue": function() { return /* binding */ useControllableValue_default; },
/* harmony export */   "useCookieState": function() { return /* binding */ useCookieState_default; },
/* harmony export */   "useCountDown": function() { return /* binding */ useCountDown_default; },
/* harmony export */   "useCounter": function() { return /* binding */ useCounter_default; },
/* harmony export */   "useCreation": function() { return /* binding */ useCreation; },
/* harmony export */   "useDebounce": function() { return /* binding */ useDebounce_default; },
/* harmony export */   "useDebounceEffect": function() { return /* binding */ useDebounceEffect_default; },
/* harmony export */   "useDebounceFn": function() { return /* binding */ useDebounceFn_default; },
/* harmony export */   "useDeepCompareEffect": function() { return /* binding */ useDeepCompareEffect_default; },
/* harmony export */   "useDeepCompareLayoutEffect": function() { return /* binding */ useDeepCompareLayoutEffect_default; },
/* harmony export */   "useDocumentVisibility": function() { return /* binding */ useDocumentVisibility_default; },
/* harmony export */   "useDrag": function() { return /* binding */ useDrag_default; },
/* harmony export */   "useDrop": function() { return /* binding */ useDrop_default; },
/* harmony export */   "useDynamicList": function() { return /* binding */ useDynamicList_default; },
/* harmony export */   "useEventEmitter": function() { return /* binding */ useEventEmitter; },
/* harmony export */   "useEventListener": function() { return /* binding */ useEventListener_default; },
/* harmony export */   "useEventTarget": function() { return /* binding */ useEventTarget_default; },
/* harmony export */   "useExternal": function() { return /* binding */ useExternal_default; },
/* harmony export */   "useFavicon": function() { return /* binding */ useFavicon_default; },
/* harmony export */   "useFocusWithin": function() { return /* binding */ useFocusWithin; },
/* harmony export */   "useFullscreen": function() { return /* binding */ useFullscreen_default; },
/* harmony export */   "useFusionTable": function() { return /* binding */ useFusionTable_default; },
/* harmony export */   "useGetState": function() { return /* binding */ useGetState_default; },
/* harmony export */   "useHistoryTravel": function() { return /* binding */ useHistoryTravel; },
/* harmony export */   "useHover": function() { return /* binding */ useHover_default; },
/* harmony export */   "useInViewport": function() { return /* binding */ useInViewport_default; },
/* harmony export */   "useInfiniteScroll": function() { return /* binding */ useInfiniteScroll_default; },
/* harmony export */   "useInterval": function() { return /* binding */ useInterval_default; },
/* harmony export */   "useIsomorphicLayoutEffect": function() { return /* binding */ useIsomorphicLayoutEffect_default; },
/* harmony export */   "useKeyPress": function() { return /* binding */ useKeyPress_default; },
/* harmony export */   "useLatest": function() { return /* binding */ useLatest_default; },
/* harmony export */   "useLocalStorageState": function() { return /* binding */ useLocalStorageState_default; },
/* harmony export */   "useLockFn": function() { return /* binding */ useLockFn_default; },
/* harmony export */   "useLongPress": function() { return /* binding */ useLongPress_default; },
/* harmony export */   "useMap": function() { return /* binding */ useMap_default; },
/* harmony export */   "useMemoizedFn": function() { return /* binding */ useMemoizedFn_default; },
/* harmony export */   "useMount": function() { return /* binding */ useMount_default; },
/* harmony export */   "useMouse": function() { return /* binding */ useMouse_default; },
/* harmony export */   "useMutationObserver": function() { return /* binding */ useMutationObserver_default; },
/* harmony export */   "useNetwork": function() { return /* binding */ useNetwork_default; },
/* harmony export */   "usePagination": function() { return /* binding */ usePagination_default; },
/* harmony export */   "usePrevious": function() { return /* binding */ usePrevious_default; },
/* harmony export */   "useRafInterval": function() { return /* binding */ useRafInterval_default; },
/* harmony export */   "useRafState": function() { return /* binding */ useRafState_default; },
/* harmony export */   "useRafTimeout": function() { return /* binding */ useRafTimeout_default; },
/* harmony export */   "useReactive": function() { return /* binding */ useReactive_default; },
/* harmony export */   "useRequest": function() { return /* binding */ useRequest_default2; },
/* harmony export */   "useResetState": function() { return /* binding */ useResetState_default; },
/* harmony export */   "useResponsive": function() { return /* binding */ useResponsive; },
/* harmony export */   "useSafeState": function() { return /* binding */ useSafeState_default; },
/* harmony export */   "useScroll": function() { return /* binding */ useScroll_default; },
/* harmony export */   "useSelections": function() { return /* binding */ useSelections; },
/* harmony export */   "useSessionStorageState": function() { return /* binding */ useSessionStorageState_default; },
/* harmony export */   "useSet": function() { return /* binding */ useSet_default; },
/* harmony export */   "useSetState": function() { return /* binding */ useSetState_default; },
/* harmony export */   "useSize": function() { return /* binding */ useSize_default; },
/* harmony export */   "useTextSelection": function() { return /* binding */ useTextSelection_default; },
/* harmony export */   "useThrottle": function() { return /* binding */ useThrottle_default; },
/* harmony export */   "useThrottleEffect": function() { return /* binding */ useThrottleEffect_default; },
/* harmony export */   "useThrottleFn": function() { return /* binding */ useThrottleFn_default; },
/* harmony export */   "useTimeout": function() { return /* binding */ useTimeout_default; },
/* harmony export */   "useTitle": function() { return /* binding */ useTitle_default; },
/* harmony export */   "useToggle": function() { return /* binding */ useToggle_default; },
/* harmony export */   "useTrackedEffect": function() { return /* binding */ useTrackedEffect_default; },
/* harmony export */   "useUnmount": function() { return /* binding */ useUnmount_default; },
/* harmony export */   "useUnmountedRef": function() { return /* binding */ useUnmountedRef_default; },
/* harmony export */   "useUpdate": function() { return /* binding */ useUpdate_default; },
/* harmony export */   "useUpdateEffect": function() { return /* binding */ useUpdateEffect_default; },
/* harmony export */   "useUpdateLayoutEffect": function() { return /* binding */ useUpdateLayoutEffect_default; },
/* harmony export */   "useVirtualList": function() { return /* binding */ useVirtualList_default; },
/* harmony export */   "useWebSocket": function() { return /* binding */ useWebSocket; },
/* harmony export */   "useWhyDidYouUpdate": function() { return /* binding */ useWhyDidYouUpdate; }
/* harmony export */ });
/* harmony import */ var _chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-GKRHZ5RF.js */ "./node_modules/.taro/weapp/prebundle/chunk-GKRHZ5RF.js");
/* harmony import */ var _chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-3RWA6CQF.js */ "./node_modules/.taro/weapp/prebundle/chunk-3RWA6CQF.js");
/* provided dependency */ var window = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js */ "./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js")["window$1"];
/* provided dependency */ var document = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js */ "./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js")["document$1"];
/* provided dependency */ var navigator = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js */ "./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js")["nav"];
/* provided dependency */ var cancelAnimationFrame = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js */ "./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js")["_caf"];
/* provided dependency */ var requestAnimationFrame = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js */ "./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js")["_raf"];
/* provided dependency */ var MutationObserver = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js */ "./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js")["MutationObserver"];
/* provided dependency */ var Element = __webpack_require__(/*! ./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js */ "./node_modules/.taro/weapp/prebundle/chunk-2DTUEZ3M.js")["TaroElement"];


// node_modules/lodash/isObject.js
var require_isObject = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/isObject.js" (exports, module) {
        function isObject2(value) {
            var type = typeof value;
            return value != null && (type == "object" || type == "function");
        }
        module.exports = isObject2;
    }
});
// node_modules/lodash/_freeGlobal.js
var require_freeGlobal = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_freeGlobal.js" (exports, module) {
        var freeGlobal = typeof __webpack_require__.g == "object" && __webpack_require__.g && __webpack_require__.g.Object === Object && __webpack_require__.g;
        module.exports = freeGlobal;
    }
});
// node_modules/lodash/_root.js
var require_root = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_root.js" (exports, module) {
        var freeGlobal = require_freeGlobal();
        var freeSelf = typeof self == "object" && self && self.Object === Object && self;
        var root = freeGlobal || freeSelf || Function("return this")();
        module.exports = root;
    }
});
// node_modules/lodash/now.js
var require_now = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/now.js" (exports, module) {
        var root = require_root();
        var now = function() {
            return root.Date.now();
        };
        module.exports = now;
    }
});
// node_modules/lodash/_trimmedEndIndex.js
var require_trimmedEndIndex = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_trimmedEndIndex.js" (exports, module) {
        var reWhitespace = /\s/;
        function trimmedEndIndex(string) {
            var index2 = string.length;
            while(index2-- && reWhitespace.test(string.charAt(index2))){}
            return index2;
        }
        module.exports = trimmedEndIndex;
    }
});
// node_modules/lodash/_baseTrim.js
var require_baseTrim = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_baseTrim.js" (exports, module) {
        var trimmedEndIndex = require_trimmedEndIndex();
        var reTrimStart = /^\s+/;
        function baseTrim(string) {
            return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, "") : string;
        }
        module.exports = baseTrim;
    }
});
// node_modules/lodash/_Symbol.js
var require_Symbol = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_Symbol.js" (exports, module) {
        var root = require_root();
        var Symbol2 = root.Symbol;
        module.exports = Symbol2;
    }
});
// node_modules/lodash/_getRawTag.js
var require_getRawTag = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_getRawTag.js" (exports, module) {
        var Symbol2 = require_Symbol();
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var nativeObjectToString = objectProto.toString;
        var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
        function getRawTag(value) {
            var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
            try {
                value[symToStringTag] = void 0;
                var unmasked = true;
            } catch (e) {}
            var result = nativeObjectToString.call(value);
            if (unmasked) {
                if (isOwn) {
                    value[symToStringTag] = tag;
                } else {
                    delete value[symToStringTag];
                }
            }
            return result;
        }
        module.exports = getRawTag;
    }
});
// node_modules/lodash/_objectToString.js
var require_objectToString = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_objectToString.js" (exports, module) {
        var objectProto = Object.prototype;
        var nativeObjectToString = objectProto.toString;
        function objectToString(value) {
            return nativeObjectToString.call(value);
        }
        module.exports = objectToString;
    }
});
// node_modules/lodash/_baseGetTag.js
var require_baseGetTag = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_baseGetTag.js" (exports, module) {
        var Symbol2 = require_Symbol();
        var getRawTag = require_getRawTag();
        var objectToString = require_objectToString();
        var nullTag = "[object Null]";
        var undefinedTag = "[object Undefined]";
        var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
        function baseGetTag(value) {
            if (value == null) {
                return value === void 0 ? undefinedTag : nullTag;
            }
            return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
        }
        module.exports = baseGetTag;
    }
});
// node_modules/lodash/isObjectLike.js
var require_isObjectLike = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/isObjectLike.js" (exports, module) {
        function isObjectLike(value) {
            return value != null && typeof value == "object";
        }
        module.exports = isObjectLike;
    }
});
// node_modules/lodash/isSymbol.js
var require_isSymbol = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/isSymbol.js" (exports, module) {
        var baseGetTag = require_baseGetTag();
        var isObjectLike = require_isObjectLike();
        var symbolTag = "[object Symbol]";
        function isSymbol(value) {
            return typeof value == "symbol" || isObjectLike(value) && baseGetTag(value) == symbolTag;
        }
        module.exports = isSymbol;
    }
});
// node_modules/lodash/toNumber.js
var require_toNumber = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/toNumber.js" (exports, module) {
        var baseTrim = require_baseTrim();
        var isObject2 = require_isObject();
        var isSymbol = require_isSymbol();
        var NAN = 0 / 0;
        var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
        var reIsBinary = /^0b[01]+$/i;
        var reIsOctal = /^0o[0-7]+$/i;
        var freeParseInt = parseInt;
        function toNumber(value) {
            if (typeof value == "number") {
                return value;
            }
            if (isSymbol(value)) {
                return NAN;
            }
            if (isObject2(value)) {
                var other = typeof value.valueOf == "function" ? value.valueOf() : value;
                value = isObject2(other) ? other + "" : other;
            }
            if (typeof value != "string") {
                return value === 0 ? value : +value;
            }
            value = baseTrim(value);
            var isBinary = reIsBinary.test(value);
            return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
        }
        module.exports = toNumber;
    }
});
// node_modules/lodash/debounce.js
var require_debounce = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/debounce.js" (exports, module) {
        var isObject2 = require_isObject();
        var now = require_now();
        var toNumber = require_toNumber();
        var FUNC_ERROR_TEXT = "Expected a function";
        var nativeMax = Math.max;
        var nativeMin = Math.min;
        function debounce3(func, wait, options) {
            var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
            if (typeof func != "function") {
                throw new TypeError(FUNC_ERROR_TEXT);
            }
            wait = toNumber(wait) || 0;
            if (isObject2(options)) {
                leading = !!options.leading;
                maxing = "maxWait" in options;
                maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
                trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            function invokeFunc(time) {
                var args = lastArgs, thisArg = lastThis;
                lastArgs = lastThis = void 0;
                lastInvokeTime = time;
                result = func.apply(thisArg, args);
                return result;
            }
            function leadingEdge(time) {
                lastInvokeTime = time;
                timerId = setTimeout(timerExpired, wait);
                return leading ? invokeFunc(time) : result;
            }
            function remainingWait(time) {
                var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, timeWaiting = wait - timeSinceLastCall;
                return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;
            }
            function shouldInvoke(time) {
                var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
                return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
            }
            function timerExpired() {
                var time = now();
                if (shouldInvoke(time)) {
                    return trailingEdge(time);
                }
                timerId = setTimeout(timerExpired, remainingWait(time));
            }
            function trailingEdge(time) {
                timerId = void 0;
                if (trailing && lastArgs) {
                    return invokeFunc(time);
                }
                lastArgs = lastThis = void 0;
                return result;
            }
            function cancel() {
                if (timerId !== void 0) {
                    clearTimeout(timerId);
                }
                lastInvokeTime = 0;
                lastArgs = lastCallTime = lastThis = timerId = void 0;
            }
            function flush() {
                return timerId === void 0 ? result : trailingEdge(now());
            }
            function debounced() {
                var time = now(), isInvoking = shouldInvoke(time);
                lastArgs = arguments;
                lastThis = this;
                lastCallTime = time;
                if (isInvoking) {
                    if (timerId === void 0) {
                        return leadingEdge(lastCallTime);
                    }
                    if (maxing) {
                        clearTimeout(timerId);
                        timerId = setTimeout(timerExpired, wait);
                        return invokeFunc(lastCallTime);
                    }
                }
                if (timerId === void 0) {
                    timerId = setTimeout(timerExpired, wait);
                }
                return result;
            }
            debounced.cancel = cancel;
            debounced.flush = flush;
            return debounced;
        }
        module.exports = debounce3;
    }
});
// node_modules/lodash/throttle.js
var require_throttle = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/throttle.js" (exports, module) {
        var debounce3 = require_debounce();
        var isObject2 = require_isObject();
        var FUNC_ERROR_TEXT = "Expected a function";
        function throttle4(func, wait, options) {
            var leading = true, trailing = true;
            if (typeof func != "function") {
                throw new TypeError(FUNC_ERROR_TEXT);
            }
            if (isObject2(options)) {
                leading = "leading" in options ? !!options.leading : leading;
                trailing = "trailing" in options ? !!options.trailing : trailing;
            }
            return debounce3(func, wait, {
                "leading": leading,
                "maxWait": wait,
                "trailing": trailing
            });
        }
        module.exports = throttle4;
    }
});
// node_modules/js-cookie/src/js.cookie.js
var require_js_cookie = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/js-cookie/src/js.cookie.js" (exports, module) {
        (function(factory) {
            var registeredInModuleLoader;
            if (false) {}
            if (typeof exports === "object") {
                module.exports = factory();
                registeredInModuleLoader = true;
            }
            if (!registeredInModuleLoader) {
                var OldCookies = window.Cookies;
                var api = window.Cookies = factory();
                api.noConflict = function() {
                    window.Cookies = OldCookies;
                    return api;
                };
            }
        })(function() {
            function extend() {
                var i = 0;
                var result = {};
                for(; i < arguments.length; i++){
                    var attributes = arguments[i];
                    for(var key in attributes){
                        result[key] = attributes[key];
                    }
                }
                return result;
            }
            function decode(s) {
                return s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);
            }
            function init(converter) {
                function api() {}
                function set(key, value, attributes) {
                    if (typeof document === "undefined") {
                        return;
                    }
                    attributes = extend({
                        path: "/"
                    }, api.defaults, attributes);
                    if (typeof attributes.expires === "number") {
                        attributes.expires = new Date(/* @__PURE__ */ new Date() * 1 + attributes.expires * 864e5);
                    }
                    attributes.expires = attributes.expires ? attributes.expires.toUTCString() : "";
                    try {
                        var result = JSON.stringify(value);
                        if (/^[\{\[]/.test(result)) {
                            value = result;
                        }
                    } catch (e) {}
                    value = converter.write ? converter.write(value, key) : encodeURIComponent(String(value)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
                    key = encodeURIComponent(String(key)).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent).replace(/[\(\)]/g, escape);
                    var stringifiedAttributes = "";
                    for(var attributeName in attributes){
                        if (!attributes[attributeName]) {
                            continue;
                        }
                        stringifiedAttributes += "; " + attributeName;
                        if (attributes[attributeName] === true) {
                            continue;
                        }
                        stringifiedAttributes += "=" + attributes[attributeName].split(";")[0];
                    }
                    return document.cookie = key + "=" + value + stringifiedAttributes;
                }
                function get(key, json) {
                    if (typeof document === "undefined") {
                        return;
                    }
                    var jar = {};
                    var cookies = document.cookie ? document.cookie.split("; ") : [];
                    var i = 0;
                    for(; i < cookies.length; i++){
                        var parts = cookies[i].split("=");
                        var cookie = parts.slice(1).join("=");
                        if (!json && cookie.charAt(0) === '"') {
                            cookie = cookie.slice(1, -1);
                        }
                        try {
                            var name = decode(parts[0]);
                            cookie = (converter.read || converter)(cookie, name) || decode(cookie);
                            if (json) {
                                try {
                                    cookie = JSON.parse(cookie);
                                } catch (e) {}
                            }
                            jar[name] = cookie;
                            if (key === name) {
                                break;
                            }
                        } catch (e) {}
                    }
                    return key ? jar[key] : jar;
                }
                api.set = set;
                api.get = function(key) {
                    return get(key, false);
                };
                api.getJSON = function(key) {
                    return get(key, true);
                };
                api.remove = function(key, attributes) {
                    set(key, "", extend(attributes, {
                        expires: -1
                    }));
                };
                api.defaults = {};
                api.withConverter = init;
                return api;
            }
            return init(function() {});
        });
    }
});
// node_modules/dayjs/dayjs.min.js
var require_dayjs_min = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/dayjs/dayjs.min.js" (exports, module) {
        !function(t, e) {
            "object" == typeof exports && "undefined" != typeof module ? module.exports = e() :  false ? 0 : (t = "undefined" != typeof globalThis ? globalThis : t || self).dayjs = e();
        }(exports, function() {
            "use strict";
            var t = 1e3, e = 6e4, n = 36e5, r = "millisecond", i = "second", s = "minute", u = "hour", a = "day", o = "week", c = "month", f = "quarter", h = "year", d = "date", l = "Invalid Date", $ = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M = {
                name: "en",
                weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
                months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
                ordinal: function(t2) {
                    var e2 = [
                        "th",
                        "st",
                        "nd",
                        "rd"
                    ], n2 = t2 % 100;
                    return "[" + t2 + (e2[(n2 - 20) % 10] || e2[n2] || e2[0]) + "]";
                }
            }, m = function(t2, e2, n2) {
                var r2 = String(t2);
                return !r2 || r2.length >= e2 ? t2 : "" + Array(e2 + 1 - r2.length).join(n2) + t2;
            }, v = {
                s: m,
                z: function(t2) {
                    var e2 = -t2.utcOffset(), n2 = Math.abs(e2), r2 = Math.floor(n2 / 60), i2 = n2 % 60;
                    return (e2 <= 0 ? "+" : "-") + m(r2, 2, "0") + ":" + m(i2, 2, "0");
                },
                m: function t2(e2, n2) {
                    if (e2.date() < n2.date()) return -t2(n2, e2);
                    var r2 = 12 * (n2.year() - e2.year()) + (n2.month() - e2.month()), i2 = e2.clone().add(r2, c), s2 = n2 - i2 < 0, u2 = e2.clone().add(r2 + (s2 ? -1 : 1), c);
                    return +(-(r2 + (n2 - i2) / (s2 ? i2 - u2 : u2 - i2)) || 0);
                },
                a: function(t2) {
                    return t2 < 0 ? Math.ceil(t2) || 0 : Math.floor(t2);
                },
                p: function(t2) {
                    return ({
                        M: c,
                        y: h,
                        w: o,
                        d: a,
                        D: d,
                        h: u,
                        m: s,
                        s: i,
                        ms: r,
                        Q: f
                    })[t2] || String(t2 || "").toLowerCase().replace(/s$/, "");
                },
                u: function(t2) {
                    return void 0 === t2;
                }
            }, g = "en", D = {};
            D[g] = M;
            var p = "$isDayjsObject", S = function(t2) {
                return t2 instanceof _ || !(!t2 || !t2[p]);
            }, w = function t2(e2, n2, r2) {
                var i2;
                if (!e2) return g;
                if ("string" == typeof e2) {
                    var s2 = e2.toLowerCase();
                    D[s2] && (i2 = s2), n2 && (D[s2] = n2, i2 = s2);
                    var u2 = e2.split("-");
                    if (!i2 && u2.length > 1) return t2(u2[0]);
                } else {
                    var a2 = e2.name;
                    D[a2] = e2, i2 = a2;
                }
                return !r2 && i2 && (g = i2), i2 || !r2 && g;
            }, O = function(t2, e2) {
                if (S(t2)) return t2.clone();
                var n2 = "object" == typeof e2 ? e2 : {};
                return n2.date = t2, n2.args = arguments, new _(n2);
            }, b = v;
            b.l = w, b.i = S, b.w = function(t2, e2) {
                return O(t2, {
                    locale: e2.$L,
                    utc: e2.$u,
                    x: e2.$x,
                    $offset: e2.$offset
                });
            };
            var _ = function() {
                function M2(t2) {
                    this.$L = w(t2.locale, null, true), this.parse(t2), this.$x = this.$x || t2.x || {}, this[p] = true;
                }
                var m2 = M2.prototype;
                return m2.parse = function(t2) {
                    this.$d = function(t3) {
                        var e2 = t3.date, n2 = t3.utc;
                        if (null === e2) return /* @__PURE__ */ new Date(NaN);
                        if (b.u(e2)) return /* @__PURE__ */ new Date();
                        if (e2 instanceof Date) return new Date(e2);
                        if ("string" == typeof e2 && !/Z$/i.test(e2)) {
                            var r2 = e2.match($);
                            if (r2) {
                                var i2 = r2[2] - 1 || 0, s2 = (r2[7] || "0").substring(0, 3);
                                return n2 ? new Date(Date.UTC(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2)) : new Date(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2);
                            }
                        }
                        return new Date(e2);
                    }(t2), this.init();
                }, m2.init = function() {
                    var t2 = this.$d;
                    this.$y = t2.getFullYear(), this.$M = t2.getMonth(), this.$D = t2.getDate(), this.$W = t2.getDay(), this.$H = t2.getHours(), this.$m = t2.getMinutes(), this.$s = t2.getSeconds(), this.$ms = t2.getMilliseconds();
                }, m2.$utils = function() {
                    return b;
                }, m2.isValid = function() {
                    return !(this.$d.toString() === l);
                }, m2.isSame = function(t2, e2) {
                    var n2 = O(t2);
                    return this.startOf(e2) <= n2 && n2 <= this.endOf(e2);
                }, m2.isAfter = function(t2, e2) {
                    return O(t2) < this.startOf(e2);
                }, m2.isBefore = function(t2, e2) {
                    return this.endOf(e2) < O(t2);
                }, m2.$g = function(t2, e2, n2) {
                    return b.u(t2) ? this[e2] : this.set(n2, t2);
                }, m2.unix = function() {
                    return Math.floor(this.valueOf() / 1e3);
                }, m2.valueOf = function() {
                    return this.$d.getTime();
                }, m2.startOf = function(t2, e2) {
                    var n2 = this, r2 = !!b.u(e2) || e2, f2 = b.p(t2), l2 = function(t3, e3) {
                        var i2 = b.w(n2.$u ? Date.UTC(n2.$y, e3, t3) : new Date(n2.$y, e3, t3), n2);
                        return r2 ? i2 : i2.endOf(a);
                    }, $2 = function(t3, e3) {
                        return b.w(n2.toDate()[t3].apply(n2.toDate("s"), (r2 ? [
                            0,
                            0,
                            0,
                            0
                        ] : [
                            23,
                            59,
                            59,
                            999
                        ]).slice(e3)), n2);
                    }, y2 = this.$W, M3 = this.$M, m3 = this.$D, v2 = "set" + (this.$u ? "UTC" : "");
                    switch(f2){
                        case h:
                            return r2 ? l2(1, 0) : l2(31, 11);
                        case c:
                            return r2 ? l2(1, M3) : l2(0, M3 + 1);
                        case o:
                            var g2 = this.$locale().weekStart || 0, D2 = (y2 < g2 ? y2 + 7 : y2) - g2;
                            return l2(r2 ? m3 - D2 : m3 + (6 - D2), M3);
                        case a:
                        case d:
                            return $2(v2 + "Hours", 0);
                        case u:
                            return $2(v2 + "Minutes", 1);
                        case s:
                            return $2(v2 + "Seconds", 2);
                        case i:
                            return $2(v2 + "Milliseconds", 3);
                        default:
                            return this.clone();
                    }
                }, m2.endOf = function(t2) {
                    return this.startOf(t2, false);
                }, m2.$set = function(t2, e2) {
                    var n2, o2 = b.p(t2), f2 = "set" + (this.$u ? "UTC" : ""), l2 = (n2 = {}, n2[a] = f2 + "Date", n2[d] = f2 + "Date", n2[c] = f2 + "Month", n2[h] = f2 + "FullYear", n2[u] = f2 + "Hours", n2[s] = f2 + "Minutes", n2[i] = f2 + "Seconds", n2[r] = f2 + "Milliseconds", n2)[o2], $2 = o2 === a ? this.$D + (e2 - this.$W) : e2;
                    if (o2 === c || o2 === h) {
                        var y2 = this.clone().set(d, 1);
                        y2.$d[l2]($2), y2.init(), this.$d = y2.set(d, Math.min(this.$D, y2.daysInMonth())).$d;
                    } else l2 && this.$d[l2]($2);
                    return this.init(), this;
                }, m2.set = function(t2, e2) {
                    return this.clone().$set(t2, e2);
                }, m2.get = function(t2) {
                    return this[b.p(t2)]();
                }, m2.add = function(r2, f2) {
                    var d2, l2 = this;
                    r2 = Number(r2);
                    var $2 = b.p(f2), y2 = function(t2) {
                        var e2 = O(l2);
                        return b.w(e2.date(e2.date() + Math.round(t2 * r2)), l2);
                    };
                    if ($2 === c) return this.set(c, this.$M + r2);
                    if ($2 === h) return this.set(h, this.$y + r2);
                    if ($2 === a) return y2(1);
                    if ($2 === o) return y2(7);
                    var M3 = (d2 = {}, d2[s] = e, d2[u] = n, d2[i] = t, d2)[$2] || 1, m3 = this.$d.getTime() + r2 * M3;
                    return b.w(m3, this);
                }, m2.subtract = function(t2, e2) {
                    return this.add(-1 * t2, e2);
                }, m2.format = function(t2) {
                    var e2 = this, n2 = this.$locale();
                    if (!this.isValid()) return n2.invalidDate || l;
                    var r2 = t2 || "YYYY-MM-DDTHH:mm:ssZ", i2 = b.z(this), s2 = this.$H, u2 = this.$m, a2 = this.$M, o2 = n2.weekdays, c2 = n2.months, f2 = n2.meridiem, h2 = function(t3, n3, i3, s3) {
                        return t3 && (t3[n3] || t3(e2, r2)) || i3[n3].slice(0, s3);
                    }, d2 = function(t3) {
                        return b.s(s2 % 12 || 12, t3, "0");
                    }, $2 = f2 || function(t3, e3, n3) {
                        var r3 = t3 < 12 ? "AM" : "PM";
                        return n3 ? r3.toLowerCase() : r3;
                    };
                    return r2.replace(y, function(t3, r3) {
                        return r3 || function(t4) {
                            switch(t4){
                                case "YY":
                                    return String(e2.$y).slice(-2);
                                case "YYYY":
                                    return b.s(e2.$y, 4, "0");
                                case "M":
                                    return a2 + 1;
                                case "MM":
                                    return b.s(a2 + 1, 2, "0");
                                case "MMM":
                                    return h2(n2.monthsShort, a2, c2, 3);
                                case "MMMM":
                                    return h2(c2, a2);
                                case "D":
                                    return e2.$D;
                                case "DD":
                                    return b.s(e2.$D, 2, "0");
                                case "d":
                                    return String(e2.$W);
                                case "dd":
                                    return h2(n2.weekdaysMin, e2.$W, o2, 2);
                                case "ddd":
                                    return h2(n2.weekdaysShort, e2.$W, o2, 3);
                                case "dddd":
                                    return o2[e2.$W];
                                case "H":
                                    return String(s2);
                                case "HH":
                                    return b.s(s2, 2, "0");
                                case "h":
                                    return d2(1);
                                case "hh":
                                    return d2(2);
                                case "a":
                                    return $2(s2, u2, true);
                                case "A":
                                    return $2(s2, u2, false);
                                case "m":
                                    return String(u2);
                                case "mm":
                                    return b.s(u2, 2, "0");
                                case "s":
                                    return String(e2.$s);
                                case "ss":
                                    return b.s(e2.$s, 2, "0");
                                case "SSS":
                                    return b.s(e2.$ms, 3, "0");
                                case "Z":
                                    return i2;
                            }
                            return null;
                        }(t3) || i2.replace(":", "");
                    });
                }, m2.utcOffset = function() {
                    return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
                }, m2.diff = function(r2, d2, l2) {
                    var $2, y2 = this, M3 = b.p(d2), m3 = O(r2), v2 = (m3.utcOffset() - this.utcOffset()) * e, g2 = this - m3, D2 = function() {
                        return b.m(y2, m3);
                    };
                    switch(M3){
                        case h:
                            $2 = D2() / 12;
                            break;
                        case c:
                            $2 = D2();
                            break;
                        case f:
                            $2 = D2() / 3;
                            break;
                        case o:
                            $2 = (g2 - v2) / 6048e5;
                            break;
                        case a:
                            $2 = (g2 - v2) / 864e5;
                            break;
                        case u:
                            $2 = g2 / n;
                            break;
                        case s:
                            $2 = g2 / e;
                            break;
                        case i:
                            $2 = g2 / t;
                            break;
                        default:
                            $2 = g2;
                    }
                    return l2 ? $2 : b.a($2);
                }, m2.daysInMonth = function() {
                    return this.endOf(c).$D;
                }, m2.$locale = function() {
                    return D[this.$L];
                }, m2.locale = function(t2, e2) {
                    if (!t2) return this.$L;
                    var n2 = this.clone(), r2 = w(t2, e2, true);
                    return r2 && (n2.$L = r2), n2;
                }, m2.clone = function() {
                    return b.w(this.$d, this);
                }, m2.toDate = function() {
                    return new Date(this.valueOf());
                }, m2.toJSON = function() {
                    return this.isValid() ? this.toISOString() : null;
                }, m2.toISOString = function() {
                    return this.$d.toISOString();
                }, m2.toString = function() {
                    return this.$d.toUTCString();
                }, M2;
            }(), k = _.prototype;
            return O.prototype = k, [
                [
                    "$ms",
                    r
                ],
                [
                    "$s",
                    i
                ],
                [
                    "$m",
                    s
                ],
                [
                    "$H",
                    u
                ],
                [
                    "$W",
                    a
                ],
                [
                    "$M",
                    c
                ],
                [
                    "$y",
                    h
                ],
                [
                    "$D",
                    d
                ]
            ].forEach(function(t2) {
                k[t2[1]] = function(e2) {
                    return this.$g(e2, t2[0], t2[1]);
                };
            }), O.extend = function(t2, e2) {
                return t2.$i || (t2(e2, _, O), t2.$i = true), O;
            }, O.locale = w, O.isDayjs = S, O.unix = function(t2) {
                return O(1e3 * t2);
            }, O.en = D[g], O.Ls = D, O.p = {}, O;
        });
    }
});
// node_modules/lodash/_listCacheClear.js
var require_listCacheClear = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_listCacheClear.js" (exports, module) {
        function listCacheClear() {
            this.__data__ = [];
            this.size = 0;
        }
        module.exports = listCacheClear;
    }
});
// node_modules/lodash/eq.js
var require_eq = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/eq.js" (exports, module) {
        function eq(value, other) {
            return value === other || value !== value && other !== other;
        }
        module.exports = eq;
    }
});
// node_modules/lodash/_assocIndexOf.js
var require_assocIndexOf = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_assocIndexOf.js" (exports, module) {
        var eq = require_eq();
        function assocIndexOf(array, key) {
            var length = array.length;
            while(length--){
                if (eq(array[length][0], key)) {
                    return length;
                }
            }
            return -1;
        }
        module.exports = assocIndexOf;
    }
});
// node_modules/lodash/_listCacheDelete.js
var require_listCacheDelete = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_listCacheDelete.js" (exports, module) {
        var assocIndexOf = require_assocIndexOf();
        var arrayProto = Array.prototype;
        var splice = arrayProto.splice;
        function listCacheDelete(key) {
            var data = this.__data__, index2 = assocIndexOf(data, key);
            if (index2 < 0) {
                return false;
            }
            var lastIndex = data.length - 1;
            if (index2 == lastIndex) {
                data.pop();
            } else {
                splice.call(data, index2, 1);
            }
            --this.size;
            return true;
        }
        module.exports = listCacheDelete;
    }
});
// node_modules/lodash/_listCacheGet.js
var require_listCacheGet = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_listCacheGet.js" (exports, module) {
        var assocIndexOf = require_assocIndexOf();
        function listCacheGet(key) {
            var data = this.__data__, index2 = assocIndexOf(data, key);
            return index2 < 0 ? void 0 : data[index2][1];
        }
        module.exports = listCacheGet;
    }
});
// node_modules/lodash/_listCacheHas.js
var require_listCacheHas = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_listCacheHas.js" (exports, module) {
        var assocIndexOf = require_assocIndexOf();
        function listCacheHas(key) {
            return assocIndexOf(this.__data__, key) > -1;
        }
        module.exports = listCacheHas;
    }
});
// node_modules/lodash/_listCacheSet.js
var require_listCacheSet = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_listCacheSet.js" (exports, module) {
        var assocIndexOf = require_assocIndexOf();
        function listCacheSet(key, value) {
            var data = this.__data__, index2 = assocIndexOf(data, key);
            if (index2 < 0) {
                ++this.size;
                data.push([
                    key,
                    value
                ]);
            } else {
                data[index2][1] = value;
            }
            return this;
        }
        module.exports = listCacheSet;
    }
});
// node_modules/lodash/_ListCache.js
var require_ListCache = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_ListCache.js" (exports, module) {
        var listCacheClear = require_listCacheClear();
        var listCacheDelete = require_listCacheDelete();
        var listCacheGet = require_listCacheGet();
        var listCacheHas = require_listCacheHas();
        var listCacheSet = require_listCacheSet();
        function ListCache(entries) {
            var index2 = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while(++index2 < length){
                var entry = entries[index2];
                this.set(entry[0], entry[1]);
            }
        }
        ListCache.prototype.clear = listCacheClear;
        ListCache.prototype["delete"] = listCacheDelete;
        ListCache.prototype.get = listCacheGet;
        ListCache.prototype.has = listCacheHas;
        ListCache.prototype.set = listCacheSet;
        module.exports = ListCache;
    }
});
// node_modules/lodash/_stackClear.js
var require_stackClear = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_stackClear.js" (exports, module) {
        var ListCache = require_ListCache();
        function stackClear() {
            this.__data__ = new ListCache();
            this.size = 0;
        }
        module.exports = stackClear;
    }
});
// node_modules/lodash/_stackDelete.js
var require_stackDelete = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_stackDelete.js" (exports, module) {
        function stackDelete(key) {
            var data = this.__data__, result = data["delete"](key);
            this.size = data.size;
            return result;
        }
        module.exports = stackDelete;
    }
});
// node_modules/lodash/_stackGet.js
var require_stackGet = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_stackGet.js" (exports, module) {
        function stackGet(key) {
            return this.__data__.get(key);
        }
        module.exports = stackGet;
    }
});
// node_modules/lodash/_stackHas.js
var require_stackHas = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_stackHas.js" (exports, module) {
        function stackHas(key) {
            return this.__data__.has(key);
        }
        module.exports = stackHas;
    }
});
// node_modules/lodash/isFunction.js
var require_isFunction = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/isFunction.js" (exports, module) {
        var baseGetTag = require_baseGetTag();
        var isObject2 = require_isObject();
        var asyncTag = "[object AsyncFunction]";
        var funcTag = "[object Function]";
        var genTag = "[object GeneratorFunction]";
        var proxyTag = "[object Proxy]";
        function isFunction2(value) {
            if (!isObject2(value)) {
                return false;
            }
            var tag = baseGetTag(value);
            return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
        }
        module.exports = isFunction2;
    }
});
// node_modules/lodash/_coreJsData.js
var require_coreJsData = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_coreJsData.js" (exports, module) {
        var root = require_root();
        var coreJsData = root["__core-js_shared__"];
        module.exports = coreJsData;
    }
});
// node_modules/lodash/_isMasked.js
var require_isMasked = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_isMasked.js" (exports, module) {
        var coreJsData = require_coreJsData();
        var maskSrcKey = function() {
            var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
            return uid ? "Symbol(src)_1." + uid : "";
        }();
        function isMasked(func) {
            return !!maskSrcKey && maskSrcKey in func;
        }
        module.exports = isMasked;
    }
});
// node_modules/lodash/_toSource.js
var require_toSource = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_toSource.js" (exports, module) {
        var funcProto = Function.prototype;
        var funcToString = funcProto.toString;
        function toSource(func) {
            if (func != null) {
                try {
                    return funcToString.call(func);
                } catch (e) {}
                try {
                    return func + "";
                } catch (e) {}
            }
            return "";
        }
        module.exports = toSource;
    }
});
// node_modules/lodash/_baseIsNative.js
var require_baseIsNative = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_baseIsNative.js" (exports, module) {
        var isFunction2 = require_isFunction();
        var isMasked = require_isMasked();
        var isObject2 = require_isObject();
        var toSource = require_toSource();
        var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
        var reIsHostCtor = /^\[object .+?Constructor\]$/;
        var funcProto = Function.prototype;
        var objectProto = Object.prototype;
        var funcToString = funcProto.toString;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var reIsNative = RegExp("^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$");
        function baseIsNative(value) {
            if (!isObject2(value) || isMasked(value)) {
                return false;
            }
            var pattern = isFunction2(value) ? reIsNative : reIsHostCtor;
            return pattern.test(toSource(value));
        }
        module.exports = baseIsNative;
    }
});
// node_modules/lodash/_getValue.js
var require_getValue = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_getValue.js" (exports, module) {
        function getValue(object, key) {
            return object == null ? void 0 : object[key];
        }
        module.exports = getValue;
    }
});
// node_modules/lodash/_getNative.js
var require_getNative = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_getNative.js" (exports, module) {
        var baseIsNative = require_baseIsNative();
        var getValue = require_getValue();
        function getNative(object, key) {
            var value = getValue(object, key);
            return baseIsNative(value) ? value : void 0;
        }
        module.exports = getNative;
    }
});
// node_modules/lodash/_Map.js
var require_Map = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_Map.js" (exports, module) {
        var getNative = require_getNative();
        var root = require_root();
        var Map2 = getNative(root, "Map");
        module.exports = Map2;
    }
});
// node_modules/lodash/_nativeCreate.js
var require_nativeCreate = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_nativeCreate.js" (exports, module) {
        var getNative = require_getNative();
        var nativeCreate = getNative(Object, "create");
        module.exports = nativeCreate;
    }
});
// node_modules/lodash/_hashClear.js
var require_hashClear = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_hashClear.js" (exports, module) {
        var nativeCreate = require_nativeCreate();
        function hashClear() {
            this.__data__ = nativeCreate ? nativeCreate(null) : {};
            this.size = 0;
        }
        module.exports = hashClear;
    }
});
// node_modules/lodash/_hashDelete.js
var require_hashDelete = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_hashDelete.js" (exports, module) {
        function hashDelete(key) {
            var result = this.has(key) && delete this.__data__[key];
            this.size -= result ? 1 : 0;
            return result;
        }
        module.exports = hashDelete;
    }
});
// node_modules/lodash/_hashGet.js
var require_hashGet = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_hashGet.js" (exports, module) {
        var nativeCreate = require_nativeCreate();
        var HASH_UNDEFINED = "__lodash_hash_undefined__";
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        function hashGet(key) {
            var data = this.__data__;
            if (nativeCreate) {
                var result = data[key];
                return result === HASH_UNDEFINED ? void 0 : result;
            }
            return hasOwnProperty.call(data, key) ? data[key] : void 0;
        }
        module.exports = hashGet;
    }
});
// node_modules/lodash/_hashHas.js
var require_hashHas = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_hashHas.js" (exports, module) {
        var nativeCreate = require_nativeCreate();
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        function hashHas(key) {
            var data = this.__data__;
            return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
        }
        module.exports = hashHas;
    }
});
// node_modules/lodash/_hashSet.js
var require_hashSet = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_hashSet.js" (exports, module) {
        var nativeCreate = require_nativeCreate();
        var HASH_UNDEFINED = "__lodash_hash_undefined__";
        function hashSet(key, value) {
            var data = this.__data__;
            this.size += this.has(key) ? 0 : 1;
            data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
            return this;
        }
        module.exports = hashSet;
    }
});
// node_modules/lodash/_Hash.js
var require_Hash = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_Hash.js" (exports, module) {
        var hashClear = require_hashClear();
        var hashDelete = require_hashDelete();
        var hashGet = require_hashGet();
        var hashHas = require_hashHas();
        var hashSet = require_hashSet();
        function Hash(entries) {
            var index2 = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while(++index2 < length){
                var entry = entries[index2];
                this.set(entry[0], entry[1]);
            }
        }
        Hash.prototype.clear = hashClear;
        Hash.prototype["delete"] = hashDelete;
        Hash.prototype.get = hashGet;
        Hash.prototype.has = hashHas;
        Hash.prototype.set = hashSet;
        module.exports = Hash;
    }
});
// node_modules/lodash/_mapCacheClear.js
var require_mapCacheClear = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_mapCacheClear.js" (exports, module) {
        var Hash = require_Hash();
        var ListCache = require_ListCache();
        var Map2 = require_Map();
        function mapCacheClear() {
            this.size = 0;
            this.__data__ = {
                "hash": new Hash(),
                "map": new (Map2 || ListCache)(),
                "string": new Hash()
            };
        }
        module.exports = mapCacheClear;
    }
});
// node_modules/lodash/_isKeyable.js
var require_isKeyable = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_isKeyable.js" (exports, module) {
        function isKeyable(value) {
            var type = typeof value;
            return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
        }
        module.exports = isKeyable;
    }
});
// node_modules/lodash/_getMapData.js
var require_getMapData = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_getMapData.js" (exports, module) {
        var isKeyable = require_isKeyable();
        function getMapData(map, key) {
            var data = map.__data__;
            return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
        }
        module.exports = getMapData;
    }
});
// node_modules/lodash/_mapCacheDelete.js
var require_mapCacheDelete = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_mapCacheDelete.js" (exports, module) {
        var getMapData = require_getMapData();
        function mapCacheDelete(key) {
            var result = getMapData(this, key)["delete"](key);
            this.size -= result ? 1 : 0;
            return result;
        }
        module.exports = mapCacheDelete;
    }
});
// node_modules/lodash/_mapCacheGet.js
var require_mapCacheGet = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_mapCacheGet.js" (exports, module) {
        var getMapData = require_getMapData();
        function mapCacheGet(key) {
            return getMapData(this, key).get(key);
        }
        module.exports = mapCacheGet;
    }
});
// node_modules/lodash/_mapCacheHas.js
var require_mapCacheHas = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_mapCacheHas.js" (exports, module) {
        var getMapData = require_getMapData();
        function mapCacheHas(key) {
            return getMapData(this, key).has(key);
        }
        module.exports = mapCacheHas;
    }
});
// node_modules/lodash/_mapCacheSet.js
var require_mapCacheSet = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_mapCacheSet.js" (exports, module) {
        var getMapData = require_getMapData();
        function mapCacheSet(key, value) {
            var data = getMapData(this, key), size = data.size;
            data.set(key, value);
            this.size += data.size == size ? 0 : 1;
            return this;
        }
        module.exports = mapCacheSet;
    }
});
// node_modules/lodash/_MapCache.js
var require_MapCache = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_MapCache.js" (exports, module) {
        var mapCacheClear = require_mapCacheClear();
        var mapCacheDelete = require_mapCacheDelete();
        var mapCacheGet = require_mapCacheGet();
        var mapCacheHas = require_mapCacheHas();
        var mapCacheSet = require_mapCacheSet();
        function MapCache(entries) {
            var index2 = -1, length = entries == null ? 0 : entries.length;
            this.clear();
            while(++index2 < length){
                var entry = entries[index2];
                this.set(entry[0], entry[1]);
            }
        }
        MapCache.prototype.clear = mapCacheClear;
        MapCache.prototype["delete"] = mapCacheDelete;
        MapCache.prototype.get = mapCacheGet;
        MapCache.prototype.has = mapCacheHas;
        MapCache.prototype.set = mapCacheSet;
        module.exports = MapCache;
    }
});
// node_modules/lodash/_stackSet.js
var require_stackSet = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_stackSet.js" (exports, module) {
        var ListCache = require_ListCache();
        var Map2 = require_Map();
        var MapCache = require_MapCache();
        var LARGE_ARRAY_SIZE = 200;
        function stackSet(key, value) {
            var data = this.__data__;
            if (data instanceof ListCache) {
                var pairs = data.__data__;
                if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
                    pairs.push([
                        key,
                        value
                    ]);
                    this.size = ++data.size;
                    return this;
                }
                data = this.__data__ = new MapCache(pairs);
            }
            data.set(key, value);
            this.size = data.size;
            return this;
        }
        module.exports = stackSet;
    }
});
// node_modules/lodash/_Stack.js
var require_Stack = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_Stack.js" (exports, module) {
        var ListCache = require_ListCache();
        var stackClear = require_stackClear();
        var stackDelete = require_stackDelete();
        var stackGet = require_stackGet();
        var stackHas = require_stackHas();
        var stackSet = require_stackSet();
        function Stack(entries) {
            var data = this.__data__ = new ListCache(entries);
            this.size = data.size;
        }
        Stack.prototype.clear = stackClear;
        Stack.prototype["delete"] = stackDelete;
        Stack.prototype.get = stackGet;
        Stack.prototype.has = stackHas;
        Stack.prototype.set = stackSet;
        module.exports = Stack;
    }
});
// node_modules/lodash/_setCacheAdd.js
var require_setCacheAdd = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_setCacheAdd.js" (exports, module) {
        var HASH_UNDEFINED = "__lodash_hash_undefined__";
        function setCacheAdd(value) {
            this.__data__.set(value, HASH_UNDEFINED);
            return this;
        }
        module.exports = setCacheAdd;
    }
});
// node_modules/lodash/_setCacheHas.js
var require_setCacheHas = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_setCacheHas.js" (exports, module) {
        function setCacheHas(value) {
            return this.__data__.has(value);
        }
        module.exports = setCacheHas;
    }
});
// node_modules/lodash/_SetCache.js
var require_SetCache = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_SetCache.js" (exports, module) {
        var MapCache = require_MapCache();
        var setCacheAdd = require_setCacheAdd();
        var setCacheHas = require_setCacheHas();
        function SetCache(values) {
            var index2 = -1, length = values == null ? 0 : values.length;
            this.__data__ = new MapCache();
            while(++index2 < length){
                this.add(values[index2]);
            }
        }
        SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
        SetCache.prototype.has = setCacheHas;
        module.exports = SetCache;
    }
});
// node_modules/lodash/_arraySome.js
var require_arraySome = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_arraySome.js" (exports, module) {
        function arraySome(array, predicate) {
            var index2 = -1, length = array == null ? 0 : array.length;
            while(++index2 < length){
                if (predicate(array[index2], index2, array)) {
                    return true;
                }
            }
            return false;
        }
        module.exports = arraySome;
    }
});
// node_modules/lodash/_cacheHas.js
var require_cacheHas = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_cacheHas.js" (exports, module) {
        function cacheHas(cache2, key) {
            return cache2.has(key);
        }
        module.exports = cacheHas;
    }
});
// node_modules/lodash/_equalArrays.js
var require_equalArrays = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_equalArrays.js" (exports, module) {
        var SetCache = require_SetCache();
        var arraySome = require_arraySome();
        var cacheHas = require_cacheHas();
        var COMPARE_PARTIAL_FLAG = 1;
        var COMPARE_UNORDERED_FLAG = 2;
        function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
            if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
                return false;
            }
            var arrStacked = stack.get(array);
            var othStacked = stack.get(other);
            if (arrStacked && othStacked) {
                return arrStacked == other && othStacked == array;
            }
            var index2 = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
            stack.set(array, other);
            stack.set(other, array);
            while(++index2 < arrLength){
                var arrValue = array[index2], othValue = other[index2];
                if (customizer) {
                    var compared = isPartial ? customizer(othValue, arrValue, index2, other, array, stack) : customizer(arrValue, othValue, index2, array, other, stack);
                }
                if (compared !== void 0) {
                    if (compared) {
                        continue;
                    }
                    result = false;
                    break;
                }
                if (seen) {
                    if (!arraySome(other, function(othValue2, othIndex) {
                        if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
                            return seen.push(othIndex);
                        }
                    })) {
                        result = false;
                        break;
                    }
                } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                    result = false;
                    break;
                }
            }
            stack["delete"](array);
            stack["delete"](other);
            return result;
        }
        module.exports = equalArrays;
    }
});
// node_modules/lodash/_Uint8Array.js
var require_Uint8Array = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_Uint8Array.js" (exports, module) {
        var root = require_root();
        var Uint8Array = root.Uint8Array;
        module.exports = Uint8Array;
    }
});
// node_modules/lodash/_mapToArray.js
var require_mapToArray = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_mapToArray.js" (exports, module) {
        function mapToArray(map) {
            var index2 = -1, result = Array(map.size);
            map.forEach(function(value, key) {
                result[++index2] = [
                    key,
                    value
                ];
            });
            return result;
        }
        module.exports = mapToArray;
    }
});
// node_modules/lodash/_setToArray.js
var require_setToArray = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_setToArray.js" (exports, module) {
        function setToArray(set) {
            var index2 = -1, result = Array(set.size);
            set.forEach(function(value) {
                result[++index2] = value;
            });
            return result;
        }
        module.exports = setToArray;
    }
});
// node_modules/lodash/_equalByTag.js
var require_equalByTag = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_equalByTag.js" (exports, module) {
        var Symbol2 = require_Symbol();
        var Uint8Array = require_Uint8Array();
        var eq = require_eq();
        var equalArrays = require_equalArrays();
        var mapToArray = require_mapToArray();
        var setToArray = require_setToArray();
        var COMPARE_PARTIAL_FLAG = 1;
        var COMPARE_UNORDERED_FLAG = 2;
        var boolTag = "[object Boolean]";
        var dateTag = "[object Date]";
        var errorTag = "[object Error]";
        var mapTag = "[object Map]";
        var numberTag = "[object Number]";
        var regexpTag = "[object RegExp]";
        var setTag = "[object Set]";
        var stringTag = "[object String]";
        var symbolTag = "[object Symbol]";
        var arrayBufferTag = "[object ArrayBuffer]";
        var dataViewTag = "[object DataView]";
        var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
        var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
        function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
            switch(tag){
                case dataViewTag:
                    if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
                        return false;
                    }
                    object = object.buffer;
                    other = other.buffer;
                case arrayBufferTag:
                    if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
                        return false;
                    }
                    return true;
                case boolTag:
                case dateTag:
                case numberTag:
                    return eq(+object, +other);
                case errorTag:
                    return object.name == other.name && object.message == other.message;
                case regexpTag:
                case stringTag:
                    return object == other + "";
                case mapTag:
                    var convert = mapToArray;
                case setTag:
                    var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
                    convert || (convert = setToArray);
                    if (object.size != other.size && !isPartial) {
                        return false;
                    }
                    var stacked = stack.get(object);
                    if (stacked) {
                        return stacked == other;
                    }
                    bitmask |= COMPARE_UNORDERED_FLAG;
                    stack.set(object, other);
                    var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
                    stack["delete"](object);
                    return result;
                case symbolTag:
                    if (symbolValueOf) {
                        return symbolValueOf.call(object) == symbolValueOf.call(other);
                    }
            }
            return false;
        }
        module.exports = equalByTag;
    }
});
// node_modules/lodash/_arrayPush.js
var require_arrayPush = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_arrayPush.js" (exports, module) {
        function arrayPush(array, values) {
            var index2 = -1, length = values.length, offset = array.length;
            while(++index2 < length){
                array[offset + index2] = values[index2];
            }
            return array;
        }
        module.exports = arrayPush;
    }
});
// node_modules/lodash/isArray.js
var require_isArray = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/isArray.js" (exports, module) {
        var isArray = Array.isArray;
        module.exports = isArray;
    }
});
// node_modules/lodash/_baseGetAllKeys.js
var require_baseGetAllKeys = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_baseGetAllKeys.js" (exports, module) {
        var arrayPush = require_arrayPush();
        var isArray = require_isArray();
        function baseGetAllKeys(object, keysFunc, symbolsFunc) {
            var result = keysFunc(object);
            return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
        }
        module.exports = baseGetAllKeys;
    }
});
// node_modules/lodash/_arrayFilter.js
var require_arrayFilter = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_arrayFilter.js" (exports, module) {
        function arrayFilter(array, predicate) {
            var index2 = -1, length = array == null ? 0 : array.length, resIndex = 0, result = [];
            while(++index2 < length){
                var value = array[index2];
                if (predicate(value, index2, array)) {
                    result[resIndex++] = value;
                }
            }
            return result;
        }
        module.exports = arrayFilter;
    }
});
// node_modules/lodash/stubArray.js
var require_stubArray = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/stubArray.js" (exports, module) {
        function stubArray() {
            return [];
        }
        module.exports = stubArray;
    }
});
// node_modules/lodash/_getSymbols.js
var require_getSymbols = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_getSymbols.js" (exports, module) {
        var arrayFilter = require_arrayFilter();
        var stubArray = require_stubArray();
        var objectProto = Object.prototype;
        var propertyIsEnumerable = objectProto.propertyIsEnumerable;
        var nativeGetSymbols = Object.getOwnPropertySymbols;
        var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
            if (object == null) {
                return [];
            }
            object = Object(object);
            return arrayFilter(nativeGetSymbols(object), function(symbol) {
                return propertyIsEnumerable.call(object, symbol);
            });
        };
        module.exports = getSymbols;
    }
});
// node_modules/lodash/_baseTimes.js
var require_baseTimes = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_baseTimes.js" (exports, module) {
        function baseTimes(n, iteratee) {
            var index2 = -1, result = Array(n);
            while(++index2 < n){
                result[index2] = iteratee(index2);
            }
            return result;
        }
        module.exports = baseTimes;
    }
});
// node_modules/lodash/_baseIsArguments.js
var require_baseIsArguments = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_baseIsArguments.js" (exports, module) {
        var baseGetTag = require_baseGetTag();
        var isObjectLike = require_isObjectLike();
        var argsTag = "[object Arguments]";
        function baseIsArguments(value) {
            return isObjectLike(value) && baseGetTag(value) == argsTag;
        }
        module.exports = baseIsArguments;
    }
});
// node_modules/lodash/isArguments.js
var require_isArguments = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/isArguments.js" (exports, module) {
        var baseIsArguments = require_baseIsArguments();
        var isObjectLike = require_isObjectLike();
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var propertyIsEnumerable = objectProto.propertyIsEnumerable;
        var isArguments = baseIsArguments(/* @__PURE__ */ function() {
            return arguments;
        }()) ? baseIsArguments : function(value) {
            return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
        };
        module.exports = isArguments;
    }
});
// node_modules/lodash/stubFalse.js
var require_stubFalse = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/stubFalse.js" (exports, module) {
        function stubFalse() {
            return false;
        }
        module.exports = stubFalse;
    }
});
// node_modules/lodash/isBuffer.js
var require_isBuffer = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/isBuffer.js" (exports, module) {
        var root = require_root();
        var stubFalse = require_stubFalse();
        var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
        var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
        var moduleExports = freeModule && freeModule.exports === freeExports;
        var Buffer = moduleExports ? root.Buffer : void 0;
        var nativeIsBuffer = Buffer ? Buffer.isBuffer : void 0;
        var isBuffer = nativeIsBuffer || stubFalse;
        module.exports = isBuffer;
    }
});
// node_modules/lodash/_isIndex.js
var require_isIndex = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_isIndex.js" (exports, module) {
        var MAX_SAFE_INTEGER = 9007199254740991;
        var reIsUint = /^(?:0|[1-9]\d*)$/;
        function isIndex(value, length) {
            var type = typeof value;
            length = length == null ? MAX_SAFE_INTEGER : length;
            return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;
        }
        module.exports = isIndex;
    }
});
// node_modules/lodash/isLength.js
var require_isLength = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/isLength.js" (exports, module) {
        var MAX_SAFE_INTEGER = 9007199254740991;
        function isLength(value) {
            return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
        }
        module.exports = isLength;
    }
});
// node_modules/lodash/_baseIsTypedArray.js
var require_baseIsTypedArray = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_baseIsTypedArray.js" (exports, module) {
        var baseGetTag = require_baseGetTag();
        var isLength = require_isLength();
        var isObjectLike = require_isObjectLike();
        var argsTag = "[object Arguments]";
        var arrayTag = "[object Array]";
        var boolTag = "[object Boolean]";
        var dateTag = "[object Date]";
        var errorTag = "[object Error]";
        var funcTag = "[object Function]";
        var mapTag = "[object Map]";
        var numberTag = "[object Number]";
        var objectTag = "[object Object]";
        var regexpTag = "[object RegExp]";
        var setTag = "[object Set]";
        var stringTag = "[object String]";
        var weakMapTag = "[object WeakMap]";
        var arrayBufferTag = "[object ArrayBuffer]";
        var dataViewTag = "[object DataView]";
        var float32Tag = "[object Float32Array]";
        var float64Tag = "[object Float64Array]";
        var int8Tag = "[object Int8Array]";
        var int16Tag = "[object Int16Array]";
        var int32Tag = "[object Int32Array]";
        var uint8Tag = "[object Uint8Array]";
        var uint8ClampedTag = "[object Uint8ClampedArray]";
        var uint16Tag = "[object Uint16Array]";
        var uint32Tag = "[object Uint32Array]";
        var typedArrayTags = {};
        typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
        typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
        function baseIsTypedArray(value) {
            return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
        }
        module.exports = baseIsTypedArray;
    }
});
// node_modules/lodash/_baseUnary.js
var require_baseUnary = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_baseUnary.js" (exports, module) {
        function baseUnary(func) {
            return function(value) {
                return func(value);
            };
        }
        module.exports = baseUnary;
    }
});
// node_modules/lodash/_nodeUtil.js
var require_nodeUtil = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_nodeUtil.js" (exports, module) {
        var freeGlobal = require_freeGlobal();
        var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
        var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
        var moduleExports = freeModule && freeModule.exports === freeExports;
        var freeProcess = moduleExports && freeGlobal.process;
        var nodeUtil = function() {
            try {
                var types = freeModule && freeModule.require && freeModule.require("util").types;
                if (types) {
                    return types;
                }
                return freeProcess && freeProcess.binding && freeProcess.binding("util");
            } catch (e) {}
        }();
        module.exports = nodeUtil;
    }
});
// node_modules/lodash/isTypedArray.js
var require_isTypedArray = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/isTypedArray.js" (exports, module) {
        var baseIsTypedArray = require_baseIsTypedArray();
        var baseUnary = require_baseUnary();
        var nodeUtil = require_nodeUtil();
        var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
        var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
        module.exports = isTypedArray;
    }
});
// node_modules/lodash/_arrayLikeKeys.js
var require_arrayLikeKeys = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_arrayLikeKeys.js" (exports, module) {
        var baseTimes = require_baseTimes();
        var isArguments = require_isArguments();
        var isArray = require_isArray();
        var isBuffer = require_isBuffer();
        var isIndex = require_isIndex();
        var isTypedArray = require_isTypedArray();
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        function arrayLikeKeys(value, inherited) {
            var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
            for(var key in value){
                if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
                (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
                isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
                isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
                isIndex(key, length)))) {
                    result.push(key);
                }
            }
            return result;
        }
        module.exports = arrayLikeKeys;
    }
});
// node_modules/lodash/_isPrototype.js
var require_isPrototype = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_isPrototype.js" (exports, module) {
        var objectProto = Object.prototype;
        function isPrototype(value) {
            var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
            return value === proto;
        }
        module.exports = isPrototype;
    }
});
// node_modules/lodash/_overArg.js
var require_overArg = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_overArg.js" (exports, module) {
        function overArg(func, transform) {
            return function(arg) {
                return func(transform(arg));
            };
        }
        module.exports = overArg;
    }
});
// node_modules/lodash/_nativeKeys.js
var require_nativeKeys = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_nativeKeys.js" (exports, module) {
        var overArg = require_overArg();
        var nativeKeys = overArg(Object.keys, Object);
        module.exports = nativeKeys;
    }
});
// node_modules/lodash/_baseKeys.js
var require_baseKeys = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_baseKeys.js" (exports, module) {
        var isPrototype = require_isPrototype();
        var nativeKeys = require_nativeKeys();
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        function baseKeys(object) {
            if (!isPrototype(object)) {
                return nativeKeys(object);
            }
            var result = [];
            for(var key in Object(object)){
                if (hasOwnProperty.call(object, key) && key != "constructor") {
                    result.push(key);
                }
            }
            return result;
        }
        module.exports = baseKeys;
    }
});
// node_modules/lodash/isArrayLike.js
var require_isArrayLike = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/isArrayLike.js" (exports, module) {
        var isFunction2 = require_isFunction();
        var isLength = require_isLength();
        function isArrayLike(value) {
            return value != null && isLength(value.length) && !isFunction2(value);
        }
        module.exports = isArrayLike;
    }
});
// node_modules/lodash/keys.js
var require_keys = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/keys.js" (exports, module) {
        var arrayLikeKeys = require_arrayLikeKeys();
        var baseKeys = require_baseKeys();
        var isArrayLike = require_isArrayLike();
        function keys(object) {
            return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
        }
        module.exports = keys;
    }
});
// node_modules/lodash/_getAllKeys.js
var require_getAllKeys = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_getAllKeys.js" (exports, module) {
        var baseGetAllKeys = require_baseGetAllKeys();
        var getSymbols = require_getSymbols();
        var keys = require_keys();
        function getAllKeys(object) {
            return baseGetAllKeys(object, keys, getSymbols);
        }
        module.exports = getAllKeys;
    }
});
// node_modules/lodash/_equalObjects.js
var require_equalObjects = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_equalObjects.js" (exports, module) {
        var getAllKeys = require_getAllKeys();
        var COMPARE_PARTIAL_FLAG = 1;
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
            var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
            if (objLength != othLength && !isPartial) {
                return false;
            }
            var index2 = objLength;
            while(index2--){
                var key = objProps[index2];
                if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
                    return false;
                }
            }
            var objStacked = stack.get(object);
            var othStacked = stack.get(other);
            if (objStacked && othStacked) {
                return objStacked == other && othStacked == object;
            }
            var result = true;
            stack.set(object, other);
            stack.set(other, object);
            var skipCtor = isPartial;
            while(++index2 < objLength){
                key = objProps[index2];
                var objValue = object[key], othValue = other[key];
                if (customizer) {
                    var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
                }
                if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
                    result = false;
                    break;
                }
                skipCtor || (skipCtor = key == "constructor");
            }
            if (result && !skipCtor) {
                var objCtor = object.constructor, othCtor = other.constructor;
                if (objCtor != othCtor && "constructor" in object && "constructor" in other && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
                    result = false;
                }
            }
            stack["delete"](object);
            stack["delete"](other);
            return result;
        }
        module.exports = equalObjects;
    }
});
// node_modules/lodash/_DataView.js
var require_DataView = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_DataView.js" (exports, module) {
        var getNative = require_getNative();
        var root = require_root();
        var DataView = getNative(root, "DataView");
        module.exports = DataView;
    }
});
// node_modules/lodash/_Promise.js
var require_Promise = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_Promise.js" (exports, module) {
        var getNative = require_getNative();
        var root = require_root();
        var Promise2 = getNative(root, "Promise");
        module.exports = Promise2;
    }
});
// node_modules/lodash/_Set.js
var require_Set = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_Set.js" (exports, module) {
        var getNative = require_getNative();
        var root = require_root();
        var Set2 = getNative(root, "Set");
        module.exports = Set2;
    }
});
// node_modules/lodash/_WeakMap.js
var require_WeakMap = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_WeakMap.js" (exports, module) {
        var getNative = require_getNative();
        var root = require_root();
        var WeakMap2 = getNative(root, "WeakMap");
        module.exports = WeakMap2;
    }
});
// node_modules/lodash/_getTag.js
var require_getTag = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_getTag.js" (exports, module) {
        var DataView = require_DataView();
        var Map2 = require_Map();
        var Promise2 = require_Promise();
        var Set2 = require_Set();
        var WeakMap2 = require_WeakMap();
        var baseGetTag = require_baseGetTag();
        var toSource = require_toSource();
        var mapTag = "[object Map]";
        var objectTag = "[object Object]";
        var promiseTag = "[object Promise]";
        var setTag = "[object Set]";
        var weakMapTag = "[object WeakMap]";
        var dataViewTag = "[object DataView]";
        var dataViewCtorString = toSource(DataView);
        var mapCtorString = toSource(Map2);
        var promiseCtorString = toSource(Promise2);
        var setCtorString = toSource(Set2);
        var weakMapCtorString = toSource(WeakMap2);
        var getTag = baseGetTag;
        if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
            getTag = function(value) {
                var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
                if (ctorString) {
                    switch(ctorString){
                        case dataViewCtorString:
                            return dataViewTag;
                        case mapCtorString:
                            return mapTag;
                        case promiseCtorString:
                            return promiseTag;
                        case setCtorString:
                            return setTag;
                        case weakMapCtorString:
                            return weakMapTag;
                    }
                }
                return result;
            };
        }
        module.exports = getTag;
    }
});
// node_modules/lodash/_baseIsEqualDeep.js
var require_baseIsEqualDeep = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_baseIsEqualDeep.js" (exports, module) {
        var Stack = require_Stack();
        var equalArrays = require_equalArrays();
        var equalByTag = require_equalByTag();
        var equalObjects = require_equalObjects();
        var getTag = require_getTag();
        var isArray = require_isArray();
        var isBuffer = require_isBuffer();
        var isTypedArray = require_isTypedArray();
        var COMPARE_PARTIAL_FLAG = 1;
        var argsTag = "[object Arguments]";
        var arrayTag = "[object Array]";
        var objectTag = "[object Object]";
        var objectProto = Object.prototype;
        var hasOwnProperty = objectProto.hasOwnProperty;
        function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
            var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
            objTag = objTag == argsTag ? objectTag : objTag;
            othTag = othTag == argsTag ? objectTag : othTag;
            var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
            if (isSameTag && isBuffer(object)) {
                if (!isBuffer(other)) {
                    return false;
                }
                objIsArr = true;
                objIsObj = false;
            }
            if (isSameTag && !objIsObj) {
                stack || (stack = new Stack());
                return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
            }
            if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
                var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
                if (objIsWrapped || othIsWrapped) {
                    var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
                    stack || (stack = new Stack());
                    return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
                }
            }
            if (!isSameTag) {
                return false;
            }
            stack || (stack = new Stack());
            return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
        }
        module.exports = baseIsEqualDeep;
    }
});
// node_modules/lodash/_baseIsEqual.js
var require_baseIsEqual = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_baseIsEqual.js" (exports, module) {
        var baseIsEqualDeep = require_baseIsEqualDeep();
        var isObjectLike = require_isObjectLike();
        function baseIsEqual(value, other, bitmask, customizer, stack) {
            if (value === other) {
                return true;
            }
            if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
                return value !== value && other !== other;
            }
            return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
        }
        module.exports = baseIsEqual;
    }
});
// node_modules/lodash/isEqual.js
var require_isEqual = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/isEqual.js" (exports, module) {
        var baseIsEqual = require_baseIsEqual();
        function isEqual2(value, other) {
            return baseIsEqual(value, other);
        }
        module.exports = isEqual2;
    }
});
// node_modules/screenfull/dist/screenfull.js
var require_screenfull = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/screenfull/dist/screenfull.js" (exports, module) {
        (function() {
            "use strict";
            var document2 = typeof window !== "undefined" && typeof window.document !== "undefined" ? window.document : {};
            var isCommonjs = typeof module !== "undefined" && module.exports;
            var fn = function() {
                var val;
                var fnMap = [
                    [
                        "requestFullscreen",
                        "exitFullscreen",
                        "fullscreenElement",
                        "fullscreenEnabled",
                        "fullscreenchange",
                        "fullscreenerror"
                    ],
                    // New WebKit
                    [
                        "webkitRequestFullscreen",
                        "webkitExitFullscreen",
                        "webkitFullscreenElement",
                        "webkitFullscreenEnabled",
                        "webkitfullscreenchange",
                        "webkitfullscreenerror"
                    ],
                    // Old WebKit
                    [
                        "webkitRequestFullScreen",
                        "webkitCancelFullScreen",
                        "webkitCurrentFullScreenElement",
                        "webkitCancelFullScreen",
                        "webkitfullscreenchange",
                        "webkitfullscreenerror"
                    ],
                    [
                        "mozRequestFullScreen",
                        "mozCancelFullScreen",
                        "mozFullScreenElement",
                        "mozFullScreenEnabled",
                        "mozfullscreenchange",
                        "mozfullscreenerror"
                    ],
                    [
                        "msRequestFullscreen",
                        "msExitFullscreen",
                        "msFullscreenElement",
                        "msFullscreenEnabled",
                        "MSFullscreenChange",
                        "MSFullscreenError"
                    ]
                ];
                var i = 0;
                var l = fnMap.length;
                var ret = {};
                for(; i < l; i++){
                    val = fnMap[i];
                    if (val && val[1] in document2) {
                        for(i = 0; i < val.length; i++){
                            ret[fnMap[0][i]] = val[i];
                        }
                        return ret;
                    }
                }
                return false;
            }();
            var eventNameMap = {
                change: fn.fullscreenchange,
                error: fn.fullscreenerror
            };
            var screenfull2 = {
                request: function(element, options) {
                    return new Promise((function(resolve, reject) {
                        var onFullScreenEntered = (function() {
                            this.off("change", onFullScreenEntered);
                            resolve();
                        }).bind(this);
                        this.on("change", onFullScreenEntered);
                        element = element || document2.documentElement;
                        var returnPromise = element[fn.requestFullscreen](options);
                        if (returnPromise instanceof Promise) {
                            returnPromise.then(onFullScreenEntered).catch(reject);
                        }
                    }).bind(this));
                },
                exit: function() {
                    return new Promise((function(resolve, reject) {
                        if (!this.isFullscreen) {
                            resolve();
                            return;
                        }
                        var onFullScreenExit = (function() {
                            this.off("change", onFullScreenExit);
                            resolve();
                        }).bind(this);
                        this.on("change", onFullScreenExit);
                        var returnPromise = document2[fn.exitFullscreen]();
                        if (returnPromise instanceof Promise) {
                            returnPromise.then(onFullScreenExit).catch(reject);
                        }
                    }).bind(this));
                },
                toggle: function(element, options) {
                    return this.isFullscreen ? this.exit() : this.request(element, options);
                },
                onchange: function(callback) {
                    this.on("change", callback);
                },
                onerror: function(callback) {
                    this.on("error", callback);
                },
                on: function(event, callback) {
                    var eventName = eventNameMap[event];
                    if (eventName) {
                        document2.addEventListener(eventName, callback, false);
                    }
                },
                off: function(event, callback) {
                    var eventName = eventNameMap[event];
                    if (eventName) {
                        document2.removeEventListener(eventName, callback, false);
                    }
                },
                raw: fn
            };
            if (!fn) {
                if (isCommonjs) {
                    module.exports = {
                        isEnabled: false
                    };
                } else {
                    window.screenfull = {
                        isEnabled: false
                    };
                }
                return;
            }
            Object.defineProperties(screenfull2, {
                isFullscreen: {
                    get: function() {
                        return Boolean(document2[fn.fullscreenElement]);
                    }
                },
                element: {
                    enumerable: true,
                    get: function() {
                        return document2[fn.fullscreenElement];
                    }
                },
                isEnabled: {
                    enumerable: true,
                    get: function() {
                        return Boolean(document2[fn.fullscreenEnabled]);
                    }
                }
            });
            if (isCommonjs) {
                module.exports = screenfull2;
            } else {
                window.screenfull = screenfull2;
            }
        })();
    }
});
// node_modules/lodash/_getPrototype.js
var require_getPrototype = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/_getPrototype.js" (exports, module) {
        var overArg = require_overArg();
        var getPrototype = overArg(Object.getPrototypeOf, Object);
        module.exports = getPrototype;
    }
});
// node_modules/lodash/isPlainObject.js
var require_isPlainObject = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__commonJS)({
    "node_modules/lodash/isPlainObject.js" (exports, module) {
        var baseGetTag = require_baseGetTag();
        var getPrototype = require_getPrototype();
        var isObjectLike = require_isObjectLike();
        var objectTag = "[object Object]";
        var funcProto = Function.prototype;
        var objectProto = Object.prototype;
        var funcToString = funcProto.toString;
        var hasOwnProperty = objectProto.hasOwnProperty;
        var objectCtorString = funcToString.call(Object);
        function isPlainObject2(value) {
            if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
                return false;
            }
            var proto = getPrototype(value);
            if (proto === null) {
                return true;
            }
            var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
            return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
        }
        module.exports = isPlainObject2;
    }
});
// node_modules/ahooks/es/createUpdateEffect/index.js
var import_react = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var createUpdateEffect = function(hook) {
    return function(effect, deps) {
        var isMounted = (0, import_react.useRef)(false);
        hook(function() {
            return function() {
                isMounted.current = false;
            };
        }, []);
        hook(function() {
            if (!isMounted.current) {
                isMounted.current = true;
            } else {
                return effect();
            }
        }, deps);
    };
};
// node_modules/tslib/tslib.es6.mjs
var __assign = function() {
    __assign = Object.assign || function __assign2(t) {
        for(var s, i = 1, n = arguments.length; i < n; i++){
            s = arguments[i];
            for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
function __rest(s, e) {
    var t = {};
    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function") for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++){
        if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
}
function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
        return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
        });
    }
    return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
            try {
                step(generator.next(value));
            } catch (e) {
                reject(e);
            }
        }
        function rejected(value) {
            try {
                step(generator["throw"](value));
            } catch (e) {
                reject(e);
            }
        }
        function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}
function __generator(thisArg, body) {
    var _ = {
        label: 0,
        sent: function() {
            if (t[0] & 1) throw t[1];
            return t[1];
        },
        trys: [],
        ops: []
    }, f, y, t, g;
    return g = {
        next: verb(0),
        "throw": verb(1),
        "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
        return this;
    }), g;
    function verb(n) {
        return function(v) {
            return step([
                n,
                v
            ]);
        };
    }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while(g && (g = 0, op[0] && (_ = 0)), _)try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [
                op[0] & 2,
                t.value
            ];
            switch(op[0]){
                case 0:
                case 1:
                    t = op;
                    break;
                case 4:
                    _.label++;
                    return {
                        value: op[1],
                        done: false
                    };
                case 5:
                    _.label++;
                    y = op[1];
                    op = [
                        0
                    ];
                    continue;
                case 7:
                    op = _.ops.pop();
                    _.trys.pop();
                    continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                        _ = 0;
                        continue;
                    }
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                        _.label = op[1];
                        break;
                    }
                    if (op[0] === 6 && _.label < t[1]) {
                        _.label = t[1];
                        t = op;
                        break;
                    }
                    if (t && _.label < t[2]) {
                        _.label = t[2];
                        _.ops.push(op);
                        break;
                    }
                    if (t[2]) _.ops.pop();
                    _.trys.pop();
                    continue;
            }
            op = body.call(thisArg, _);
        } catch (e) {
            op = [
                6,
                e
            ];
            y = 0;
        } finally{
            f = t = 0;
        }
        if (op[0] & 5) throw op[1];
        return {
            value: op[0] ? op[1] : void 0,
            done: true
        };
    }
}
function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function() {
            if (o && i >= o.length) o = void 0;
            return {
                value: o && o[i++],
                done: !o
            };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while((n === void 0 || n-- > 0) && !(r = i.next()).done)ar.push(r.value);
    } catch (error) {
        e = {
            error
        };
    } finally{
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        } finally{
            if (e) throw e.error;
        }
    }
    return ar;
}
function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for(var i = 0, l = from.length, ar; i < l; i++){
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
}
// node_modules/ahooks/es/useAntdTable/index.js
var import_react18 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/useMemoizedFn/index.js
var import_react2 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/utils/index.js
var isObject = function(value) {
    return value !== null && typeof value === "object";
};
var isFunction = function(value) {
    return typeof value === "function";
};
var isString = function(value) {
    return typeof value === "string";
};
var isBoolean = function(value) {
    return typeof value === "boolean";
};
var isNumber = function(value) {
    return typeof value === "number";
};
var isUndef = function(value) {
    return typeof value === "undefined";
};
// node_modules/ahooks/es/utils/isDev.js
var isDev = true;
var isDev_default = isDev;
// node_modules/ahooks/es/useMemoizedFn/index.js
function useMemoizedFn(fn) {
    if (isDev_default) {
        if (!isFunction(fn)) {
            console.error("useMemoizedFn expected parameter is a function, got ".concat(typeof fn));
        }
    }
    var fnRef = (0, import_react2.useRef)(fn);
    fnRef.current = (0, import_react2.useMemo)(function() {
        return fn;
    }, [
        fn
    ]);
    var memoizedFn = (0, import_react2.useRef)();
    if (!memoizedFn.current) {
        memoizedFn.current = function() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            return fnRef.current.apply(this, args);
        };
    }
    return memoizedFn.current;
}
var useMemoizedFn_default = useMemoizedFn;
// node_modules/ahooks/es/usePagination/index.js
var import_react17 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/useRequest/src/plugins/useAutoRunPlugin.js
var import_react4 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/useUpdateEffect/index.js
var import_react3 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useUpdateEffect_default = createUpdateEffect(import_react3.useEffect);
// node_modules/ahooks/es/useRequest/src/plugins/useAutoRunPlugin.js
var useAutoRunPlugin = function(fetchInstance, _a) {
    var manual = _a.manual, _b = _a.ready, ready = _b === void 0 ? true : _b, _c = _a.defaultParams, defaultParams = _c === void 0 ? [] : _c, _d = _a.refreshDeps, refreshDeps = _d === void 0 ? [] : _d, refreshDepsAction = _a.refreshDepsAction;
    var hasAutoRun = (0, import_react4.useRef)(false);
    hasAutoRun.current = false;
    useUpdateEffect_default(function() {
        if (!manual && ready) {
            hasAutoRun.current = true;
            fetchInstance.run.apply(fetchInstance, __spreadArray([], __read(defaultParams), false));
        }
    }, [
        ready
    ]);
    useUpdateEffect_default(function() {
        if (hasAutoRun.current) {
            return;
        }
        if (!manual) {
            hasAutoRun.current = true;
            if (refreshDepsAction) {
                refreshDepsAction();
            } else {
                fetchInstance.refresh();
            }
        }
    }, __spreadArray([], __read(refreshDeps), false));
    return {
        onBefore: function() {
            if (!ready) {
                return {
                    stopNow: true
                };
            }
        }
    };
};
useAutoRunPlugin.onInit = function(_a) {
    var _b = _a.ready, ready = _b === void 0 ? true : _b, manual = _a.manual;
    return {
        loading: !manual && ready
    };
};
var useAutoRunPlugin_default = useAutoRunPlugin;
// node_modules/ahooks/es/useRequest/src/plugins/useCachePlugin.js
var import_react8 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/useCreation/index.js
var import_react5 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/utils/depsAreSame.js
function depsAreSame(oldDeps, deps) {
    if (oldDeps === deps) return true;
    for(var i = 0; i < oldDeps.length; i++){
        if (!Object.is(oldDeps[i], deps[i])) return false;
    }
    return true;
}
// node_modules/ahooks/es/useCreation/index.js
function useCreation(factory, deps) {
    var current = (0, import_react5.useRef)({
        deps,
        obj: void 0,
        initialized: false
    }).current;
    if (current.initialized === false || !depsAreSame(current.deps, deps)) {
        current.deps = deps;
        current.obj = factory();
        current.initialized = true;
    }
    return current.obj;
}
// node_modules/ahooks/es/useUnmount/index.js
var import_react7 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/useLatest/index.js
var import_react6 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useLatest(value) {
    var ref = (0, import_react6.useRef)(value);
    ref.current = value;
    return ref;
}
var useLatest_default = useLatest;
// node_modules/ahooks/es/useUnmount/index.js
var useUnmount = function(fn) {
    if (isDev_default) {
        if (!isFunction(fn)) {
            console.error("useUnmount expected parameter is a function, got ".concat(typeof fn));
        }
    }
    var fnRef = useLatest_default(fn);
    (0, import_react7.useEffect)(function() {
        return function() {
            fnRef.current();
        };
    }, []);
};
var useUnmount_default = useUnmount;
// node_modules/ahooks/es/useRequest/src/utils/cache.js
var cache = /* @__PURE__ */ new Map();
var setCache = function(key, cacheTime, cachedData) {
    var currentCache = cache.get(key);
    if (currentCache === null || currentCache === void 0 ? void 0 : currentCache.timer) {
        clearTimeout(currentCache.timer);
    }
    var timer = void 0;
    if (cacheTime > -1) {
        timer = setTimeout(function() {
            cache.delete(key);
        }, cacheTime);
    }
    cache.set(key, __assign(__assign({}, cachedData), {
        timer
    }));
};
var getCache = function(key) {
    return cache.get(key);
};
var clearCache = function(key) {
    if (key) {
        var cacheKeys = Array.isArray(key) ? key : [
            key
        ];
        cacheKeys.forEach(function(cacheKey) {
            return cache.delete(cacheKey);
        });
    } else {
        cache.clear();
    }
};
// node_modules/ahooks/es/useRequest/src/utils/cachePromise.js
var cachePromise = /* @__PURE__ */ new Map();
var getCachePromise = function(cacheKey) {
    return cachePromise.get(cacheKey);
};
var setCachePromise = function(cacheKey, promise) {
    cachePromise.set(cacheKey, promise);
    promise.then(function(res) {
        cachePromise.delete(cacheKey);
        return res;
    }).catch(function() {
        cachePromise.delete(cacheKey);
    });
};
// node_modules/ahooks/es/useRequest/src/utils/cacheSubscribe.js
var listeners = {};
var trigger = function(key, data) {
    if (listeners[key]) {
        listeners[key].forEach(function(item) {
            return item(data);
        });
    }
};
var subscribe = function(key, listener) {
    if (!listeners[key]) {
        listeners[key] = [];
    }
    listeners[key].push(listener);
    return function unsubscribe() {
        var index2 = listeners[key].indexOf(listener);
        listeners[key].splice(index2, 1);
    };
};
// node_modules/ahooks/es/useRequest/src/plugins/useCachePlugin.js
var useCachePlugin = function(fetchInstance, _a) {
    var cacheKey = _a.cacheKey, _b = _a.cacheTime, cacheTime = _b === void 0 ? 5 * 60 * 1e3 : _b, _c = _a.staleTime, staleTime = _c === void 0 ? 0 : _c, customSetCache = _a.setCache, customGetCache = _a.getCache;
    var unSubscribeRef = (0, import_react8.useRef)();
    var currentPromiseRef = (0, import_react8.useRef)();
    var _setCache = function(key, cachedData) {
        if (customSetCache) {
            customSetCache(cachedData);
        } else {
            setCache(key, cacheTime, cachedData);
        }
        trigger(key, cachedData.data);
    };
    var _getCache = function(key, params) {
        if (params === void 0) {
            params = [];
        }
        if (customGetCache) {
            return customGetCache(params);
        }
        return getCache(key);
    };
    useCreation(function() {
        if (!cacheKey) {
            return;
        }
        var cacheData = _getCache(cacheKey);
        if (cacheData && Object.hasOwnProperty.call(cacheData, "data")) {
            fetchInstance.state.data = cacheData.data;
            fetchInstance.state.params = cacheData.params;
            if (staleTime === -1 || /* @__PURE__ */ new Date().getTime() - cacheData.time <= staleTime) {
                fetchInstance.state.loading = false;
            }
        }
        unSubscribeRef.current = subscribe(cacheKey, function(data) {
            fetchInstance.setState({
                data
            });
        });
    }, []);
    useUnmount_default(function() {
        var _a2;
        (_a2 = unSubscribeRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(unSubscribeRef);
    });
    if (!cacheKey) {
        return {};
    }
    return {
        onBefore: function(params) {
            var cacheData = _getCache(cacheKey, params);
            if (!cacheData || !Object.hasOwnProperty.call(cacheData, "data")) {
                return {};
            }
            if (staleTime === -1 || /* @__PURE__ */ new Date().getTime() - cacheData.time <= staleTime) {
                return {
                    loading: false,
                    data: cacheData === null || cacheData === void 0 ? void 0 : cacheData.data,
                    error: void 0,
                    returnNow: true
                };
            } else {
                return {
                    data: cacheData === null || cacheData === void 0 ? void 0 : cacheData.data,
                    error: void 0
                };
            }
        },
        onRequest: function(service, args) {
            var servicePromise = getCachePromise(cacheKey);
            if (servicePromise && servicePromise !== currentPromiseRef.current) {
                return {
                    servicePromise
                };
            }
            servicePromise = service.apply(void 0, __spreadArray([], __read(args), false));
            currentPromiseRef.current = servicePromise;
            setCachePromise(cacheKey, servicePromise);
            return {
                servicePromise
            };
        },
        onSuccess: function(data, params) {
            var _a2;
            if (cacheKey) {
                (_a2 = unSubscribeRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(unSubscribeRef);
                _setCache(cacheKey, {
                    data,
                    params,
                    time: /* @__PURE__ */ new Date().getTime()
                });
                unSubscribeRef.current = subscribe(cacheKey, function(d) {
                    fetchInstance.setState({
                        data: d
                    });
                });
            }
        },
        onMutate: function(data) {
            var _a2;
            if (cacheKey) {
                (_a2 = unSubscribeRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(unSubscribeRef);
                _setCache(cacheKey, {
                    data,
                    params: fetchInstance.state.params,
                    time: /* @__PURE__ */ new Date().getTime()
                });
                unSubscribeRef.current = subscribe(cacheKey, function(d) {
                    fetchInstance.setState({
                        data: d
                    });
                });
            }
        }
    };
};
var useCachePlugin_default = useCachePlugin;
// node_modules/ahooks/es/useRequest/src/plugins/useDebouncePlugin.js
var import_debounce = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)(require_debounce());
var import_react9 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useDebouncePlugin = function(fetchInstance, _a) {
    var debounceWait = _a.debounceWait, debounceLeading = _a.debounceLeading, debounceTrailing = _a.debounceTrailing, debounceMaxWait = _a.debounceMaxWait;
    var debouncedRef = (0, import_react9.useRef)();
    var options = (0, import_react9.useMemo)(function() {
        var ret = {};
        if (debounceLeading !== void 0) {
            ret.leading = debounceLeading;
        }
        if (debounceTrailing !== void 0) {
            ret.trailing = debounceTrailing;
        }
        if (debounceMaxWait !== void 0) {
            ret.maxWait = debounceMaxWait;
        }
        return ret;
    }, [
        debounceLeading,
        debounceTrailing,
        debounceMaxWait
    ]);
    (0, import_react9.useEffect)(function() {
        if (debounceWait) {
            var _originRunAsync_1 = fetchInstance.runAsync.bind(fetchInstance);
            debouncedRef.current = (0, import_debounce.default)(function(callback) {
                callback();
            }, debounceWait, options);
            fetchInstance.runAsync = function() {
                var args = [];
                for(var _i = 0; _i < arguments.length; _i++){
                    args[_i] = arguments[_i];
                }
                return new Promise(function(resolve, reject) {
                    var _a2;
                    (_a2 = debouncedRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(debouncedRef, function() {
                        _originRunAsync_1.apply(void 0, __spreadArray([], __read(args), false)).then(resolve).catch(reject);
                    });
                });
            };
            return function() {
                var _a2;
                (_a2 = debouncedRef.current) === null || _a2 === void 0 ? void 0 : _a2.cancel();
                fetchInstance.runAsync = _originRunAsync_1;
            };
        }
    }, [
        debounceWait,
        options
    ]);
    if (!debounceWait) {
        return {};
    }
    return {
        onCancel: function() {
            var _a2;
            (_a2 = debouncedRef.current) === null || _a2 === void 0 ? void 0 : _a2.cancel();
        }
    };
};
var useDebouncePlugin_default = useDebouncePlugin;
// node_modules/ahooks/es/useRequest/src/plugins/useLoadingDelayPlugin.js
var import_react10 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useLoadingDelayPlugin = function(fetchInstance, _a) {
    var loadingDelay = _a.loadingDelay, ready = _a.ready;
    var timerRef = (0, import_react10.useRef)();
    if (!loadingDelay) {
        return {};
    }
    var cancelTimeout = function() {
        if (timerRef.current) {
            clearTimeout(timerRef.current);
        }
    };
    return {
        onBefore: function() {
            cancelTimeout();
            if (ready !== false) {
                timerRef.current = setTimeout(function() {
                    fetchInstance.setState({
                        loading: true
                    });
                }, loadingDelay);
            }
            return {
                loading: false
            };
        },
        onFinally: function() {
            cancelTimeout();
        },
        onCancel: function() {
            cancelTimeout();
        }
    };
};
var useLoadingDelayPlugin_default = useLoadingDelayPlugin;
// node_modules/ahooks/es/useRequest/src/plugins/usePollingPlugin.js
var import_react11 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/utils/isBrowser.js
var isBrowser = !!(typeof window !== "undefined" && window.document && window.document.createElement);
var isBrowser_default = isBrowser;
// node_modules/ahooks/es/useRequest/src/utils/isDocumentVisible.js
function isDocumentVisible() {
    if (isBrowser_default) {
        return document.visibilityState !== "hidden";
    }
    return true;
}
// node_modules/ahooks/es/useRequest/src/utils/subscribeReVisible.js
var listeners2 = [];
function subscribe2(listener) {
    listeners2.push(listener);
    return function unsubscribe() {
        var index2 = listeners2.indexOf(listener);
        listeners2.splice(index2, 1);
    };
}
if (isBrowser_default) {
    revalidate = function() {
        if (!isDocumentVisible()) return;
        for(var i = 0; i < listeners2.length; i++){
            var listener = listeners2[i];
            listener();
        }
    };
    window.addEventListener("visibilitychange", revalidate, false);
}
var revalidate;
var subscribeReVisible_default = subscribe2;
// node_modules/ahooks/es/useRequest/src/plugins/usePollingPlugin.js
var usePollingPlugin = function(fetchInstance, _a) {
    var pollingInterval = _a.pollingInterval, _b = _a.pollingWhenHidden, pollingWhenHidden = _b === void 0 ? true : _b, _c = _a.pollingErrorRetryCount, pollingErrorRetryCount = _c === void 0 ? -1 : _c;
    var timerRef = (0, import_react11.useRef)();
    var unsubscribeRef = (0, import_react11.useRef)();
    var countRef = (0, import_react11.useRef)(0);
    var stopPolling = function() {
        var _a2;
        if (timerRef.current) {
            clearTimeout(timerRef.current);
        }
        (_a2 = unsubscribeRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(unsubscribeRef);
    };
    useUpdateEffect_default(function() {
        if (!pollingInterval) {
            stopPolling();
        }
    }, [
        pollingInterval
    ]);
    if (!pollingInterval) {
        return {};
    }
    return {
        onBefore: function() {
            stopPolling();
        },
        onError: function() {
            countRef.current += 1;
        },
        onSuccess: function() {
            countRef.current = 0;
        },
        onFinally: function() {
            if (pollingErrorRetryCount === -1 || // When an error occurs, the request is not repeated after pollingErrorRetryCount retries
            pollingErrorRetryCount !== -1 && countRef.current <= pollingErrorRetryCount) {
                timerRef.current = setTimeout(function() {
                    if (!pollingWhenHidden && !isDocumentVisible()) {
                        unsubscribeRef.current = subscribeReVisible_default(function() {
                            fetchInstance.refresh();
                        });
                    } else {
                        fetchInstance.refresh();
                    }
                }, pollingInterval);
            } else {
                countRef.current = 0;
            }
        },
        onCancel: function() {
            stopPolling();
        }
    };
};
var usePollingPlugin_default = usePollingPlugin;
// node_modules/ahooks/es/useRequest/src/plugins/useRefreshOnWindowFocusPlugin.js
var import_react12 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/useRequest/src/utils/limit.js
function limit(fn, timespan) {
    var pending = false;
    return function() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++){
            args[_i] = arguments[_i];
        }
        if (pending) return;
        pending = true;
        fn.apply(void 0, __spreadArray([], __read(args), false));
        setTimeout(function() {
            pending = false;
        }, timespan);
    };
}
// node_modules/ahooks/es/useRequest/src/utils/isOnline.js
function isOnline() {
    if (isBrowser_default && typeof navigator.onLine !== "undefined") {
        return navigator.onLine;
    }
    return true;
}
// node_modules/ahooks/es/useRequest/src/utils/subscribeFocus.js
var listeners3 = [];
function subscribe3(listener) {
    listeners3.push(listener);
    return function unsubscribe() {
        var index2 = listeners3.indexOf(listener);
        if (index2 > -1) {
            listeners3.splice(index2, 1);
        }
    };
}
if (isBrowser_default) {
    revalidate = function() {
        if (!isDocumentVisible() || !isOnline()) return;
        for(var i = 0; i < listeners3.length; i++){
            var listener = listeners3[i];
            listener();
        }
    };
    window.addEventListener("visibilitychange", revalidate, false);
    window.addEventListener("focus", revalidate, false);
}
var revalidate;
var subscribeFocus_default = subscribe3;
// node_modules/ahooks/es/useRequest/src/plugins/useRefreshOnWindowFocusPlugin.js
var useRefreshOnWindowFocusPlugin = function(fetchInstance, _a) {
    var refreshOnWindowFocus = _a.refreshOnWindowFocus, _b = _a.focusTimespan, focusTimespan = _b === void 0 ? 5e3 : _b;
    var unsubscribeRef = (0, import_react12.useRef)();
    var stopSubscribe = function() {
        var _a2;
        (_a2 = unsubscribeRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(unsubscribeRef);
    };
    (0, import_react12.useEffect)(function() {
        if (refreshOnWindowFocus) {
            var limitRefresh_1 = limit(fetchInstance.refresh.bind(fetchInstance), focusTimespan);
            unsubscribeRef.current = subscribeFocus_default(function() {
                limitRefresh_1();
            });
        }
        return function() {
            stopSubscribe();
        };
    }, [
        refreshOnWindowFocus,
        focusTimespan
    ]);
    useUnmount_default(function() {
        stopSubscribe();
    });
    return {};
};
var useRefreshOnWindowFocusPlugin_default = useRefreshOnWindowFocusPlugin;
// node_modules/ahooks/es/useRequest/src/plugins/useRetryPlugin.js
var import_react13 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useRetryPlugin = function(fetchInstance, _a) {
    var retryInterval = _a.retryInterval, retryCount = _a.retryCount;
    var timerRef = (0, import_react13.useRef)();
    var countRef = (0, import_react13.useRef)(0);
    var triggerByRetry = (0, import_react13.useRef)(false);
    if (!retryCount) {
        return {};
    }
    return {
        onBefore: function() {
            if (!triggerByRetry.current) {
                countRef.current = 0;
            }
            triggerByRetry.current = false;
            if (timerRef.current) {
                clearTimeout(timerRef.current);
            }
        },
        onSuccess: function() {
            countRef.current = 0;
        },
        onError: function() {
            countRef.current += 1;
            if (retryCount === -1 || countRef.current <= retryCount) {
                var timeout = retryInterval !== null && retryInterval !== void 0 ? retryInterval : Math.min(1e3 * Math.pow(2, countRef.current), 3e4);
                timerRef.current = setTimeout(function() {
                    triggerByRetry.current = true;
                    fetchInstance.refresh();
                }, timeout);
            } else {
                countRef.current = 0;
            }
        },
        onCancel: function() {
            countRef.current = 0;
            if (timerRef.current) {
                clearTimeout(timerRef.current);
            }
        }
    };
};
var useRetryPlugin_default = useRetryPlugin;
// node_modules/ahooks/es/useRequest/src/plugins/useThrottlePlugin.js
var import_throttle = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)(require_throttle());
var import_react14 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useThrottlePlugin = function(fetchInstance, _a) {
    var throttleWait = _a.throttleWait, throttleLeading = _a.throttleLeading, throttleTrailing = _a.throttleTrailing;
    var throttledRef = (0, import_react14.useRef)();
    var options = {};
    if (throttleLeading !== void 0) {
        options.leading = throttleLeading;
    }
    if (throttleTrailing !== void 0) {
        options.trailing = throttleTrailing;
    }
    (0, import_react14.useEffect)(function() {
        if (throttleWait) {
            var _originRunAsync_1 = fetchInstance.runAsync.bind(fetchInstance);
            throttledRef.current = (0, import_throttle.default)(function(callback) {
                callback();
            }, throttleWait, options);
            fetchInstance.runAsync = function() {
                var args = [];
                for(var _i = 0; _i < arguments.length; _i++){
                    args[_i] = arguments[_i];
                }
                return new Promise(function(resolve, reject) {
                    var _a2;
                    (_a2 = throttledRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(throttledRef, function() {
                        _originRunAsync_1.apply(void 0, __spreadArray([], __read(args), false)).then(resolve).catch(reject);
                    });
                });
            };
            return function() {
                var _a2;
                fetchInstance.runAsync = _originRunAsync_1;
                (_a2 = throttledRef.current) === null || _a2 === void 0 ? void 0 : _a2.cancel();
            };
        }
    }, [
        throttleWait,
        throttleLeading,
        throttleTrailing
    ]);
    if (!throttleWait) {
        return {};
    }
    return {
        onCancel: function() {
            var _a2;
            (_a2 = throttledRef.current) === null || _a2 === void 0 ? void 0 : _a2.cancel();
        }
    };
};
var useThrottlePlugin_default = useThrottlePlugin;
// node_modules/ahooks/es/useMount/index.js
var import_react15 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useMount = function(fn) {
    if (isDev_default) {
        if (!isFunction(fn)) {
            console.error('useMount: parameter `fn` expected to be a function, but got "'.concat(typeof fn, '".'));
        }
    }
    (0, import_react15.useEffect)(function() {
        fn === null || fn === void 0 ? void 0 : fn();
    }, []);
};
var useMount_default = useMount;
// node_modules/ahooks/es/useUpdate/index.js
var import_react16 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useUpdate = function() {
    var _a = __read((0, import_react16.useState)({}), 2), setState = _a[1];
    return (0, import_react16.useCallback)(function() {
        return setState({});
    }, []);
};
var useUpdate_default = useUpdate;
// node_modules/ahooks/es/useRequest/src/Fetch.js
var Fetch = /** @class */ function() {
    function Fetch2(serviceRef, options, subscribe4, initState3) {
        if (initState3 === void 0) {
            initState3 = {};
        }
        this.serviceRef = serviceRef;
        this.options = options;
        this.subscribe = subscribe4;
        this.initState = initState3;
        this.count = 0;
        this.state = {
            loading: false,
            params: void 0,
            data: void 0,
            error: void 0
        };
        this.state = __assign(__assign(__assign({}, this.state), {
            loading: !options.manual
        }), initState3);
    }
    Fetch2.prototype.setState = function(s) {
        if (s === void 0) {
            s = {};
        }
        this.state = __assign(__assign({}, this.state), s);
        this.subscribe();
    };
    Fetch2.prototype.runPluginHandler = function(event) {
        var rest = [];
        for(var _i = 1; _i < arguments.length; _i++){
            rest[_i - 1] = arguments[_i];
        }
        var r = this.pluginImpls.map(function(i) {
            var _a;
            return (_a = i[event]) === null || _a === void 0 ? void 0 : _a.call.apply(_a, __spreadArray([
                i
            ], __read(rest), false));
        }).filter(Boolean);
        return Object.assign.apply(Object, __spreadArray([
            {}
        ], __read(r), false));
    };
    Fetch2.prototype.runAsync = function() {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        var params = [];
        for(var _i = 0; _i < arguments.length; _i++){
            params[_i] = arguments[_i];
        }
        return __awaiter(this, void 0, void 0, function() {
            var currentCount, _l, _m, stopNow, _o, returnNow, state, servicePromise, res, error_1;
            var _p;
            return __generator(this, function(_q) {
                switch(_q.label){
                    case 0:
                        this.count += 1;
                        currentCount = this.count;
                        _l = this.runPluginHandler("onBefore", params), _m = _l.stopNow, stopNow = _m === void 0 ? false : _m, _o = _l.returnNow, returnNow = _o === void 0 ? false : _o, state = __rest(_l, [
                            "stopNow",
                            "returnNow"
                        ]);
                        if (stopNow) {
                            return [
                                2,
                                new Promise(function() {})
                            ];
                        }
                        this.setState(__assign({
                            loading: true,
                            params
                        }, state));
                        if (returnNow) {
                            return [
                                2,
                                Promise.resolve(state.data)
                            ];
                        }
                        (_b = (_a = this.options).onBefore) === null || _b === void 0 ? void 0 : _b.call(_a, params);
                        _q.label = 1;
                    case 1:
                        _q.trys.push([
                            1,
                            3,
                            ,
                            4
                        ]);
                        servicePromise = this.runPluginHandler("onRequest", this.serviceRef.current, params).servicePromise;
                        if (!servicePromise) {
                            servicePromise = (_p = this.serviceRef).current.apply(_p, __spreadArray([], __read(params), false));
                        }
                        return [
                            4,
                            servicePromise
                        ];
                    case 2:
                        res = _q.sent();
                        if (currentCount !== this.count) {
                            return [
                                2,
                                new Promise(function() {})
                            ];
                        }
                        this.setState({
                            data: res,
                            error: void 0,
                            loading: false
                        });
                        (_d = (_c = this.options).onSuccess) === null || _d === void 0 ? void 0 : _d.call(_c, res, params);
                        this.runPluginHandler("onSuccess", res, params);
                        (_f = (_e = this.options).onFinally) === null || _f === void 0 ? void 0 : _f.call(_e, params, res, void 0);
                        if (currentCount === this.count) {
                            this.runPluginHandler("onFinally", params, res, void 0);
                        }
                        return [
                            2,
                            res
                        ];
                    case 3:
                        error_1 = _q.sent();
                        if (currentCount !== this.count) {
                            return [
                                2,
                                new Promise(function() {})
                            ];
                        }
                        this.setState({
                            error: error_1,
                            loading: false
                        });
                        (_h = (_g = this.options).onError) === null || _h === void 0 ? void 0 : _h.call(_g, error_1, params);
                        this.runPluginHandler("onError", error_1, params);
                        (_k = (_j = this.options).onFinally) === null || _k === void 0 ? void 0 : _k.call(_j, params, void 0, error_1);
                        if (currentCount === this.count) {
                            this.runPluginHandler("onFinally", params, void 0, error_1);
                        }
                        throw error_1;
                    case 4:
                        return [
                            2
                        ];
                }
            });
        });
    };
    Fetch2.prototype.run = function() {
        var _this = this;
        var params = [];
        for(var _i = 0; _i < arguments.length; _i++){
            params[_i] = arguments[_i];
        }
        this.runAsync.apply(this, __spreadArray([], __read(params), false)).catch(function(error) {
            if (!_this.options.onError) {
                console.error(error);
            }
        });
    };
    Fetch2.prototype.cancel = function() {
        this.count += 1;
        this.setState({
            loading: false
        });
        this.runPluginHandler("onCancel");
    };
    Fetch2.prototype.refresh = function() {
        this.run.apply(this, __spreadArray([], __read(this.state.params || []), false));
    };
    Fetch2.prototype.refreshAsync = function() {
        return this.runAsync.apply(this, __spreadArray([], __read(this.state.params || []), false));
    };
    Fetch2.prototype.mutate = function(data) {
        var targetData = isFunction(data) ? data(this.state.data) : data;
        this.runPluginHandler("onMutate", targetData);
        this.setState({
            data: targetData
        });
    };
    return Fetch2;
}();
var Fetch_default = Fetch;
// node_modules/ahooks/es/useRequest/src/useRequestImplement.js
function useRequestImplement(service, options, plugins) {
    if (options === void 0) {
        options = {};
    }
    if (plugins === void 0) {
        plugins = [];
    }
    var _a = options.manual, manual = _a === void 0 ? false : _a, rest = __rest(options, [
        "manual"
    ]);
    if (isDev_default) {
        if (options.defaultParams && !Array.isArray(options.defaultParams)) {
            console.warn("expected defaultParams is array, got ".concat(typeof options.defaultParams));
        }
    }
    var fetchOptions = __assign({
        manual
    }, rest);
    var serviceRef = useLatest_default(service);
    var update = useUpdate_default();
    var fetchInstance = useCreation(function() {
        var initState3 = plugins.map(function(p) {
            var _a2;
            return (_a2 = p === null || p === void 0 ? void 0 : p.onInit) === null || _a2 === void 0 ? void 0 : _a2.call(p, fetchOptions);
        }).filter(Boolean);
        return new Fetch_default(serviceRef, fetchOptions, update, Object.assign.apply(Object, __spreadArray([
            {}
        ], __read(initState3), false)));
    }, []);
    fetchInstance.options = fetchOptions;
    fetchInstance.pluginImpls = plugins.map(function(p) {
        return p(fetchInstance, fetchOptions);
    });
    useMount_default(function() {
        if (!manual) {
            var params = fetchInstance.state.params || options.defaultParams || [];
            fetchInstance.run.apply(fetchInstance, __spreadArray([], __read(params), false));
        }
    });
    useUnmount_default(function() {
        fetchInstance.cancel();
    });
    return {
        loading: fetchInstance.state.loading,
        data: fetchInstance.state.data,
        error: fetchInstance.state.error,
        params: fetchInstance.state.params || [],
        cancel: useMemoizedFn_default(fetchInstance.cancel.bind(fetchInstance)),
        refresh: useMemoizedFn_default(fetchInstance.refresh.bind(fetchInstance)),
        refreshAsync: useMemoizedFn_default(fetchInstance.refreshAsync.bind(fetchInstance)),
        run: useMemoizedFn_default(fetchInstance.run.bind(fetchInstance)),
        runAsync: useMemoizedFn_default(fetchInstance.runAsync.bind(fetchInstance)),
        mutate: useMemoizedFn_default(fetchInstance.mutate.bind(fetchInstance))
    };
}
var useRequestImplement_default = useRequestImplement;
// node_modules/ahooks/es/useRequest/src/useRequest.js
function useRequest(service, options, plugins) {
    return useRequestImplement_default(service, options, __spreadArray(__spreadArray([], __read(plugins || []), false), [
        useDebouncePlugin_default,
        useLoadingDelayPlugin_default,
        usePollingPlugin_default,
        useRefreshOnWindowFocusPlugin_default,
        useThrottlePlugin_default,
        useAutoRunPlugin_default,
        useCachePlugin_default,
        useRetryPlugin_default
    ], false));
}
var useRequest_default = useRequest;
// node_modules/ahooks/es/useRequest/index.js
var useRequest_default2 = useRequest_default;
// node_modules/ahooks/es/usePagination/index.js
var usePagination = function(service, options) {
    var _a;
    if (options === void 0) {
        options = {};
    }
    var _b = options.defaultPageSize, defaultPageSize = _b === void 0 ? 10 : _b, _c = options.defaultCurrent, defaultCurrent = _c === void 0 ? 1 : _c, rest = __rest(options, [
        "defaultPageSize",
        "defaultCurrent"
    ]);
    var result = useRequest_default2(service, __assign({
        defaultParams: [
            {
                current: defaultCurrent,
                pageSize: defaultPageSize
            }
        ],
        refreshDepsAction: function() {
            changeCurrent(1);
        }
    }, rest));
    var _d = result.params[0] || {}, _e = _d.current, current = _e === void 0 ? 1 : _e, _f = _d.pageSize, pageSize = _f === void 0 ? defaultPageSize : _f;
    var total = ((_a = result.data) === null || _a === void 0 ? void 0 : _a.total) || 0;
    var totalPage = (0, import_react17.useMemo)(function() {
        return Math.ceil(total / pageSize);
    }, [
        pageSize,
        total
    ]);
    var onChange = function(c, p) {
        var toCurrent = c <= 0 ? 1 : c;
        var toPageSize = p <= 0 ? 1 : p;
        var tempTotalPage = Math.ceil(total / toPageSize);
        if (toCurrent > tempTotalPage) {
            toCurrent = Math.max(1, tempTotalPage);
        }
        var _a2 = __read(result.params || []), _b2 = _a2[0], oldPaginationParams = _b2 === void 0 ? {} : _b2, restParams = _a2.slice(1);
        result.run.apply(result, __spreadArray([
            __assign(__assign({}, oldPaginationParams), {
                current: toCurrent,
                pageSize: toPageSize
            })
        ], __read(restParams), false));
    };
    var changeCurrent = function(c) {
        onChange(c, pageSize);
    };
    var changePageSize = function(p) {
        onChange(current, p);
    };
    return __assign(__assign({}, result), {
        pagination: {
            current,
            pageSize,
            total,
            totalPage,
            onChange: useMemoizedFn_default(onChange),
            changeCurrent: useMemoizedFn_default(changeCurrent),
            changePageSize: useMemoizedFn_default(changePageSize)
        }
    });
};
var usePagination_default = usePagination;
// node_modules/ahooks/es/useAntdTable/index.js
var useAntdTable = function(service, options) {
    var _a;
    if (options === void 0) {
        options = {};
    }
    var form = options.form, _b = options.defaultType, defaultType = _b === void 0 ? "simple" : _b, defaultParams = options.defaultParams, _c = options.manual, manual = _c === void 0 ? false : _c, _d = options.refreshDeps, refreshDeps = _d === void 0 ? [] : _d, _e = options.ready, ready = _e === void 0 ? true : _e, rest = __rest(options, [
        "form",
        "defaultType",
        "defaultParams",
        "manual",
        "refreshDeps",
        "ready"
    ]);
    var result = usePagination_default(service, __assign({
        manual: true
    }, rest));
    var _f = result.params, params = _f === void 0 ? [] : _f, run = result.run;
    var cacheFormTableData = params[2] || {};
    var _g = __read((0, import_react18.useState)((cacheFormTableData === null || cacheFormTableData === void 0 ? void 0 : cacheFormTableData.type) || defaultType), 2), type = _g[0], setType = _g[1];
    var allFormDataRef = (0, import_react18.useRef)({});
    var defaultDataSourceRef = (0, import_react18.useRef)([]);
    var isAntdV4 = !!(form === null || form === void 0 ? void 0 : form.getInternalHooks);
    var getActiveFieldValues = function() {
        if (!form) {
            return {};
        }
        if (isAntdV4) {
            return form.getFieldsValue(null, function() {
                return true;
            });
        }
        var allFieldsValue = form.getFieldsValue();
        var activeFieldsValue = {};
        Object.keys(allFieldsValue).forEach(function(key) {
            if (form.getFieldInstance ? form.getFieldInstance(key) : true) {
                activeFieldsValue[key] = allFieldsValue[key];
            }
        });
        return activeFieldsValue;
    };
    var validateFields = function() {
        if (!form) {
            return Promise.resolve({});
        }
        var activeFieldsValue = getActiveFieldValues();
        var fields = Object.keys(activeFieldsValue);
        if (isAntdV4) {
            return form.validateFields(fields);
        }
        return new Promise(function(resolve, reject) {
            form.validateFields(fields, function(errors, values) {
                if (errors) {
                    reject(errors);
                } else {
                    resolve(values);
                }
            });
        });
    };
    var restoreForm = function() {
        if (!form) {
            return;
        }
        if (isAntdV4) {
            return form.setFieldsValue(allFormDataRef.current);
        }
        var activeFieldsValue = {};
        Object.keys(allFormDataRef.current).forEach(function(key) {
            if (form.getFieldInstance ? form.getFieldInstance(key) : true) {
                activeFieldsValue[key] = allFormDataRef.current[key];
            }
        });
        form.setFieldsValue(activeFieldsValue);
    };
    var changeType = function() {
        var activeFieldsValue = getActiveFieldValues();
        allFormDataRef.current = __assign(__assign({}, allFormDataRef.current), activeFieldsValue);
        setType(function(t) {
            return t === "simple" ? "advance" : "simple";
        });
    };
    var _submit = function(initPagination) {
        if (!ready) {
            return;
        }
        setTimeout(function() {
            validateFields().then(function(values) {
                if (values === void 0) {
                    values = {};
                }
                var pagination = initPagination || __assign(__assign({
                    pageSize: options.defaultPageSize || 10
                }, (params === null || params === void 0 ? void 0 : params[0]) || {}), {
                    current: 1
                });
                if (!form) {
                    run(pagination);
                    return;
                }
                allFormDataRef.current = __assign(__assign({}, allFormDataRef.current), values);
                run(pagination, values, {
                    allFormData: allFormDataRef.current,
                    type
                });
            }).catch(function(err) {
                return err;
            });
        });
    };
    var reset = function() {
        var _a2, _b2;
        if (form) {
            form.resetFields();
        }
        _submit(__assign(__assign({}, (defaultParams === null || defaultParams === void 0 ? void 0 : defaultParams[0]) || {}), {
            pageSize: options.defaultPageSize || ((_b2 = (_a2 = options.defaultParams) === null || _a2 === void 0 ? void 0 : _a2[0]) === null || _b2 === void 0 ? void 0 : _b2.pageSize) || 10,
            current: 1
        }));
    };
    var submit = function(e) {
        var _a2;
        (_a2 = e === null || e === void 0 ? void 0 : e.preventDefault) === null || _a2 === void 0 ? void 0 : _a2.call(e);
        _submit();
    };
    var onTableChange = function(pagination, filters, sorter, extra) {
        var _a2 = __read(params || []), oldPaginationParams = _a2[0], restParams = _a2.slice(1);
        run.apply(void 0, __spreadArray([
            __assign(__assign({}, oldPaginationParams), {
                current: pagination.current,
                pageSize: pagination.pageSize,
                filters,
                sorter,
                extra
            })
        ], __read(restParams), false));
    };
    (0, import_react18.useEffect)(function() {
        if (params.length > 0) {
            allFormDataRef.current = (cacheFormTableData === null || cacheFormTableData === void 0 ? void 0 : cacheFormTableData.allFormData) || {};
            restoreForm();
            run.apply(void 0, __spreadArray([], __read(params), false));
            return;
        }
        if (!manual && ready) {
            allFormDataRef.current = (defaultParams === null || defaultParams === void 0 ? void 0 : defaultParams[1]) || {};
            restoreForm();
            _submit(defaultParams === null || defaultParams === void 0 ? void 0 : defaultParams[0]);
        }
    }, []);
    useUpdateEffect_default(function() {
        if (!ready) {
            return;
        }
        restoreForm();
    }, [
        type
    ]);
    var hasAutoRun = (0, import_react18.useRef)(false);
    hasAutoRun.current = false;
    useUpdateEffect_default(function() {
        if (!manual && ready) {
            hasAutoRun.current = true;
            if (form) {
                form.resetFields();
            }
            allFormDataRef.current = (defaultParams === null || defaultParams === void 0 ? void 0 : defaultParams[1]) || {};
            restoreForm();
            _submit(defaultParams === null || defaultParams === void 0 ? void 0 : defaultParams[0]);
        }
    }, [
        ready
    ]);
    useUpdateEffect_default(function() {
        if (hasAutoRun.current) {
            return;
        }
        if (!ready) {
            return;
        }
        if (!manual) {
            hasAutoRun.current = true;
            result.pagination.changeCurrent(1);
        }
    }, __spreadArray([], __read(refreshDeps), false));
    return __assign(__assign({}, result), {
        tableProps: {
            dataSource: ((_a = result.data) === null || _a === void 0 ? void 0 : _a.list) || defaultDataSourceRef.current,
            loading: result.loading,
            onChange: useMemoizedFn_default(onTableChange),
            pagination: {
                current: result.pagination.current,
                pageSize: result.pagination.pageSize,
                total: result.pagination.total
            }
        },
        search: {
            submit: useMemoizedFn_default(submit),
            type,
            changeType: useMemoizedFn_default(changeType),
            reset: useMemoizedFn_default(reset)
        }
    });
};
var useAntdTable_default = useAntdTable;
// node_modules/ahooks/es/useAsyncEffect/index.js
var import_react19 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function isAsyncGenerator(val) {
    return isFunction(val[Symbol.asyncIterator]);
}
function useAsyncEffect(effect, deps) {
    (0, import_react19.useEffect)(function() {
        var e = effect();
        var cancelled = false;
        function execute() {
            return __awaiter(this, void 0, void 0, function() {
                var result;
                return __generator(this, function(_a) {
                    switch(_a.label){
                        case 0:
                            if (!isAsyncGenerator(e)) return [
                                3,
                                4
                            ];
                            _a.label = 1;
                        case 1:
                            if (false) {}
                            return [
                                4,
                                e.next()
                            ];
                        case 2:
                            result = _a.sent();
                            if (result.done || cancelled) {
                                return [
                                    3,
                                    3
                                ];
                            }
                            return [
                                3,
                                1
                            ];
                        case 3:
                            return [
                                3,
                                6
                            ];
                        case 4:
                            return [
                                4,
                                e
                            ];
                        case 5:
                            _a.sent();
                            _a.label = 6;
                        case 6:
                            return [
                                2
                            ];
                    }
                });
            });
        }
        execute();
        return function() {
            cancelled = true;
        };
    }, deps);
}
var useAsyncEffect_default = useAsyncEffect;
// node_modules/ahooks/es/useBoolean/index.js
var import_react21 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/useToggle/index.js
var import_react20 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useToggle(defaultValue, reverseValue) {
    if (defaultValue === void 0) {
        defaultValue = false;
    }
    var _a = __read((0, import_react20.useState)(defaultValue), 2), state = _a[0], setState = _a[1];
    var actions = (0, import_react20.useMemo)(function() {
        var reverseValueOrigin = reverseValue === void 0 ? !defaultValue : reverseValue;
        var toggle = function() {
            return setState(function(s) {
                return s === defaultValue ? reverseValueOrigin : defaultValue;
            });
        };
        var set = function(value) {
            return setState(value);
        };
        var setLeft = function() {
            return setState(defaultValue);
        };
        var setRight = function() {
            return setState(reverseValueOrigin);
        };
        return {
            toggle,
            set,
            setLeft,
            setRight
        };
    }, []);
    return [
        state,
        actions
    ];
}
var useToggle_default = useToggle;
// node_modules/ahooks/es/useBoolean/index.js
function useBoolean(defaultValue) {
    if (defaultValue === void 0) {
        defaultValue = false;
    }
    var _a = __read(useToggle_default(!!defaultValue), 2), state = _a[0], _b = _a[1], toggle = _b.toggle, set = _b.set;
    var actions = (0, import_react21.useMemo)(function() {
        var setTrue = function() {
            return set(true);
        };
        var setFalse = function() {
            return set(false);
        };
        return {
            toggle,
            set: function(v) {
                return set(!!v);
            },
            setTrue,
            setFalse
        };
    }, []);
    return [
        state,
        actions
    ];
}
// node_modules/ahooks/es/utils/domTarget.js
function getTargetElement(target, defaultElement) {
    if (!isBrowser_default) {
        return void 0;
    }
    if (!target) {
        return defaultElement;
    }
    var targetElement;
    if (isFunction(target)) {
        targetElement = target();
    } else if ("current" in target) {
        targetElement = target.current;
    } else {
        targetElement = target;
    }
    return targetElement;
}
// node_modules/ahooks/es/utils/getDocumentOrShadow.js
var checkIfAllInShadow = function(targets) {
    return targets.every(function(item) {
        var targetElement = getTargetElement(item);
        if (!targetElement) return false;
        if (targetElement.getRootNode() instanceof ShadowRoot) return true;
    });
};
var getShadow = function(node) {
    if (!node) {
        return document;
    }
    return node.getRootNode();
};
var getDocumentOrShadow = function(target) {
    if (!target || !document.getRootNode) {
        return document;
    }
    var targets = Array.isArray(target) ? target : [
        target
    ];
    if (checkIfAllInShadow(targets)) {
        return getShadow(getTargetElement(targets[0]));
    }
    return document;
};
var getDocumentOrShadow_default = getDocumentOrShadow;
// node_modules/ahooks/es/utils/useEffectWithTarget.js
var import_react23 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/utils/createEffectWithTarget.js
var import_react22 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var createEffectWithTarget = function(useEffectType) {
    var useEffectWithTarget3 = function(effect, deps, target) {
        var hasInitRef = (0, import_react22.useRef)(false);
        var lastElementRef = (0, import_react22.useRef)([]);
        var lastDepsRef = (0, import_react22.useRef)([]);
        var unLoadRef = (0, import_react22.useRef)();
        useEffectType(function() {
            var _a;
            var targets = Array.isArray(target) ? target : [
                target
            ];
            var els = targets.map(function(item) {
                return getTargetElement(item);
            });
            if (!hasInitRef.current) {
                hasInitRef.current = true;
                lastElementRef.current = els;
                lastDepsRef.current = deps;
                unLoadRef.current = effect();
                return;
            }
            if (els.length !== lastElementRef.current.length || !depsAreSame(els, lastElementRef.current) || !depsAreSame(deps, lastDepsRef.current)) {
                (_a = unLoadRef.current) === null || _a === void 0 ? void 0 : _a.call(unLoadRef);
                lastElementRef.current = els;
                lastDepsRef.current = deps;
                unLoadRef.current = effect();
            }
        });
        useUnmount_default(function() {
            var _a;
            (_a = unLoadRef.current) === null || _a === void 0 ? void 0 : _a.call(unLoadRef);
            hasInitRef.current = false;
        });
    };
    return useEffectWithTarget3;
};
var createEffectWithTarget_default = createEffectWithTarget;
// node_modules/ahooks/es/utils/useEffectWithTarget.js
var useEffectWithTarget = createEffectWithTarget_default(import_react23.useEffect);
var useEffectWithTarget_default = useEffectWithTarget;
// node_modules/ahooks/es/useClickAway/index.js
function useClickAway(onClickAway, target, eventName) {
    if (eventName === void 0) {
        eventName = "click";
    }
    var onClickAwayRef = useLatest_default(onClickAway);
    useEffectWithTarget_default(function() {
        var handler = function(event) {
            var targets = Array.isArray(target) ? target : [
                target
            ];
            if (targets.some(function(item) {
                var targetElement = getTargetElement(item);
                return !targetElement || targetElement.contains(event.target);
            })) {
                return;
            }
            onClickAwayRef.current(event);
        };
        var documentOrShadow = getDocumentOrShadow_default(target);
        var eventNames = Array.isArray(eventName) ? eventName : [
            eventName
        ];
        eventNames.forEach(function(event) {
            return documentOrShadow.addEventListener(event, handler);
        });
        return function() {
            eventNames.forEach(function(event) {
                return documentOrShadow.removeEventListener(event, handler);
            });
        };
    }, Array.isArray(eventName) ? eventName : [
        eventName
    ], target);
}
// node_modules/ahooks/es/useControllableValue/index.js
var import_react24 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useControllableValue(props, options) {
    if (props === void 0) {
        props = {};
    }
    if (options === void 0) {
        options = {};
    }
    var defaultValue = options.defaultValue, _a = options.defaultValuePropName, defaultValuePropName = _a === void 0 ? "defaultValue" : _a, _b = options.valuePropName, valuePropName = _b === void 0 ? "value" : _b, _c = options.trigger, trigger2 = _c === void 0 ? "onChange" : _c;
    var value = props[valuePropName];
    var isControlled = props.hasOwnProperty(valuePropName);
    var initialValue = (0, import_react24.useMemo)(function() {
        if (isControlled) {
            return value;
        }
        if (props.hasOwnProperty(defaultValuePropName)) {
            return props[defaultValuePropName];
        }
        return defaultValue;
    }, []);
    var stateRef = (0, import_react24.useRef)(initialValue);
    if (isControlled) {
        stateRef.current = value;
    }
    var update = useUpdate_default();
    function setState(v) {
        var args = [];
        for(var _i = 1; _i < arguments.length; _i++){
            args[_i - 1] = arguments[_i];
        }
        var r = isFunction(v) ? v(stateRef.current) : v;
        if (!isControlled) {
            stateRef.current = r;
            update();
        }
        if (props[trigger2]) {
            props[trigger2].apply(props, __spreadArray([
                r
            ], __read(args), false));
        }
    }
    return [
        stateRef.current,
        useMemoizedFn_default(setState)
    ];
}
var useControllableValue_default = useControllableValue;
// node_modules/ahooks/es/useCookieState/index.js
var import_js_cookie = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)(require_js_cookie());
var import_react25 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useCookieState(cookieKey, options) {
    if (options === void 0) {
        options = {};
    }
    var _a = __read((0, import_react25.useState)(function() {
        var cookieValue = import_js_cookie.default.get(cookieKey);
        if (isString(cookieValue)) return cookieValue;
        if (isFunction(options.defaultValue)) {
            return options.defaultValue();
        }
        return options.defaultValue;
    }), 2), state = _a[0], setState = _a[1];
    var updateState = useMemoizedFn_default(function(newValue, newOptions) {
        if (newOptions === void 0) {
            newOptions = {};
        }
        var _a2 = __assign(__assign({}, options), newOptions), defaultValue = _a2.defaultValue, restOptions = __rest(_a2, [
            "defaultValue"
        ]);
        var value = isFunction(newValue) ? newValue(state) : newValue;
        setState(value);
        if (value === void 0) {
            import_js_cookie.default.remove(cookieKey);
        } else {
            import_js_cookie.default.set(cookieKey, value, restOptions);
        }
    });
    return [
        state,
        updateState
    ];
}
var useCookieState_default = useCookieState;
// node_modules/ahooks/es/useCountDown/index.js
var import_dayjs = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)(require_dayjs_min());
var import_react26 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var calcLeft = function(target) {
    if (!target) {
        return 0;
    }
    var left = (0, import_dayjs.default)(target).valueOf() - Date.now();
    return left < 0 ? 0 : left;
};
var parseMs = function(milliseconds) {
    return {
        days: Math.floor(milliseconds / 864e5),
        hours: Math.floor(milliseconds / 36e5) % 24,
        minutes: Math.floor(milliseconds / 6e4) % 60,
        seconds: Math.floor(milliseconds / 1e3) % 60,
        milliseconds: Math.floor(milliseconds) % 1e3
    };
};
var useCountdown = function(options) {
    if (options === void 0) {
        options = {};
    }
    var _a = options || {}, leftTime = _a.leftTime, targetDate = _a.targetDate, _b = _a.interval, interval = _b === void 0 ? 1e3 : _b, onEnd = _a.onEnd;
    var target = (0, import_react26.useMemo)(function() {
        if ("leftTime" in options) {
            return isNumber(leftTime) && leftTime > 0 ? Date.now() + leftTime : void 0;
        } else {
            return targetDate;
        }
    }, [
        leftTime,
        targetDate
    ]);
    var _c = __read((0, import_react26.useState)(function() {
        return calcLeft(target);
    }), 2), timeLeft = _c[0], setTimeLeft = _c[1];
    var onEndRef = useLatest_default(onEnd);
    (0, import_react26.useEffect)(function() {
        if (!target) {
            setTimeLeft(0);
            return;
        }
        setTimeLeft(calcLeft(target));
        var timer = setInterval(function() {
            var _a2;
            var targetLeft = calcLeft(target);
            setTimeLeft(targetLeft);
            if (targetLeft === 0) {
                clearInterval(timer);
                (_a2 = onEndRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(onEndRef);
            }
        }, interval);
        return function() {
            return clearInterval(timer);
        };
    }, [
        target,
        interval
    ]);
    var formattedRes = (0, import_react26.useMemo)(function() {
        return parseMs(timeLeft);
    }, [
        timeLeft
    ]);
    return [
        timeLeft,
        formattedRes
    ];
};
var useCountDown_default = useCountdown;
// node_modules/ahooks/es/useCounter/index.js
var import_react27 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function getTargetValue(val, options) {
    if (options === void 0) {
        options = {};
    }
    var min = options.min, max = options.max;
    var target = val;
    if (isNumber(max)) {
        target = Math.min(max, target);
    }
    if (isNumber(min)) {
        target = Math.max(min, target);
    }
    return target;
}
function useCounter(initialValue, options) {
    if (initialValue === void 0) {
        initialValue = 0;
    }
    if (options === void 0) {
        options = {};
    }
    var min = options.min, max = options.max;
    var _a = __read((0, import_react27.useState)(function() {
        return getTargetValue(initialValue, {
            min,
            max
        });
    }), 2), current = _a[0], setCurrent = _a[1];
    var setValue = function(value) {
        setCurrent(function(c) {
            var target = isNumber(value) ? value : value(c);
            return getTargetValue(target, {
                max,
                min
            });
        });
    };
    var inc = function(delta) {
        if (delta === void 0) {
            delta = 1;
        }
        setValue(function(c) {
            return c + delta;
        });
    };
    var dec = function(delta) {
        if (delta === void 0) {
            delta = 1;
        }
        setValue(function(c) {
            return c - delta;
        });
    };
    var set = function(value) {
        setValue(value);
    };
    var reset = function() {
        setValue(initialValue);
    };
    return [
        current,
        {
            inc: useMemoizedFn_default(inc),
            dec: useMemoizedFn_default(dec),
            set: useMemoizedFn_default(set),
            reset: useMemoizedFn_default(reset)
        }
    ];
}
var useCounter_default = useCounter;
// node_modules/ahooks/es/useDebounce/index.js
var import_react29 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/useDebounceFn/index.js
var import_debounce2 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)(require_debounce());
var import_react28 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useDebounceFn(fn, options) {
    var _a;
    if (isDev_default) {
        if (!isFunction(fn)) {
            console.error("useDebounceFn expected parameter is a function, got ".concat(typeof fn));
        }
    }
    var fnRef = useLatest_default(fn);
    var wait = (_a = options === null || options === void 0 ? void 0 : options.wait) !== null && _a !== void 0 ? _a : 1e3;
    var debounced = (0, import_react28.useMemo)(function() {
        return (0, import_debounce2.default)(function() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            return fnRef.current.apply(fnRef, __spreadArray([], __read(args), false));
        }, wait, options);
    }, []);
    useUnmount_default(function() {
        debounced.cancel();
    });
    return {
        run: debounced,
        cancel: debounced.cancel,
        flush: debounced.flush
    };
}
var useDebounceFn_default = useDebounceFn;
// node_modules/ahooks/es/useDebounce/index.js
function useDebounce(value, options) {
    var _a = __read((0, import_react29.useState)(value), 2), debounced = _a[0], setDebounced = _a[1];
    var run = useDebounceFn_default(function() {
        setDebounced(value);
    }, options).run;
    (0, import_react29.useEffect)(function() {
        run();
    }, [
        value
    ]);
    return debounced;
}
var useDebounce_default = useDebounce;
// node_modules/ahooks/es/useDebounceEffect/index.js
var import_react30 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useDebounceEffect(effect, deps, options) {
    var _a = __read((0, import_react30.useState)({}), 2), flag = _a[0], setFlag = _a[1];
    var run = useDebounceFn_default(function() {
        setFlag({});
    }, options).run;
    (0, import_react30.useEffect)(function() {
        return run();
    }, deps);
    useUpdateEffect_default(effect, [
        flag
    ]);
}
var useDebounceEffect_default = useDebounceEffect;
// node_modules/ahooks/es/useDeepCompareEffect/index.js
var import_react32 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/createDeepCompareEffect/index.js
var import_react31 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/utils/depsEqual.js
var import_isEqual = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)(require_isEqual());
var depsEqual = function(aDeps, bDeps) {
    if (aDeps === void 0) {
        aDeps = [];
    }
    if (bDeps === void 0) {
        bDeps = [];
    }
    return (0, import_isEqual.default)(aDeps, bDeps);
};
// node_modules/ahooks/es/createDeepCompareEffect/index.js
var createDeepCompareEffect = function(hook) {
    return function(effect, deps) {
        var ref = (0, import_react31.useRef)();
        var signalRef = (0, import_react31.useRef)(0);
        if (deps === void 0 || !depsEqual(deps, ref.current)) {
            ref.current = deps;
            signalRef.current += 1;
        }
        hook(effect, [
            signalRef.current
        ]);
    };
};
// node_modules/ahooks/es/useDeepCompareEffect/index.js
var useDeepCompareEffect_default = createDeepCompareEffect(import_react32.useEffect);
// node_modules/ahooks/es/useDeepCompareLayoutEffect/index.js
var import_react33 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useDeepCompareLayoutEffect_default = createDeepCompareEffect(import_react33.useLayoutEffect);
// node_modules/ahooks/es/useDocumentVisibility/index.js
var import_react34 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/useEventListener/index.js
function useEventListener(eventName, handler, options) {
    if (options === void 0) {
        options = {};
    }
    var handlerRef = useLatest_default(handler);
    useEffectWithTarget_default(function() {
        var targetElement = getTargetElement(options.target, window);
        if (!(targetElement === null || targetElement === void 0 ? void 0 : targetElement.addEventListener)) {
            return;
        }
        var eventListener = function(event) {
            return handlerRef.current(event);
        };
        targetElement.addEventListener(eventName, eventListener, {
            capture: options.capture,
            once: options.once,
            passive: options.passive
        });
        return function() {
            targetElement.removeEventListener(eventName, eventListener, {
                capture: options.capture
            });
        };
    }, [
        eventName,
        options.capture,
        options.once,
        options.passive
    ], options.target);
}
var useEventListener_default = useEventListener;
// node_modules/ahooks/es/useDocumentVisibility/index.js
var getVisibility = function() {
    if (!isBrowser_default) {
        return "visible";
    }
    return document.visibilityState;
};
function useDocumentVisibility() {
    var _a = __read((0, import_react34.useState)(function() {
        return getVisibility();
    }), 2), documentVisibility = _a[0], setDocumentVisibility = _a[1];
    useEventListener_default("visibilitychange", function() {
        setDocumentVisibility(getVisibility());
    }, {
        target: function() {
            return document;
        }
    });
    return documentVisibility;
}
var useDocumentVisibility_default = useDocumentVisibility;
// node_modules/ahooks/es/useDrag/index.js
var useDrag = function(data, target, options) {
    if (options === void 0) {
        options = {};
    }
    var optionsRef = useLatest_default(options);
    var dataRef = useLatest_default(data);
    useEffectWithTarget_default(function() {
        var targetElement = getTargetElement(target);
        if (!(targetElement === null || targetElement === void 0 ? void 0 : targetElement.addEventListener)) {
            return;
        }
        var onDragStart = function(event) {
            var _a, _b;
            (_b = (_a = optionsRef.current).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, event);
            event.dataTransfer.setData("custom", JSON.stringify(dataRef.current));
        };
        var onDragEnd = function(event) {
            var _a, _b;
            (_b = (_a = optionsRef.current).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, event);
        };
        targetElement.setAttribute("draggable", "true");
        targetElement.addEventListener("dragstart", onDragStart);
        targetElement.addEventListener("dragend", onDragEnd);
        return function() {
            targetElement.removeEventListener("dragstart", onDragStart);
            targetElement.removeEventListener("dragend", onDragEnd);
        };
    }, [], target);
};
var useDrag_default = useDrag;
// node_modules/ahooks/es/useDrop/index.js
var import_react35 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useDrop = function(target, options) {
    if (options === void 0) {
        options = {};
    }
    var optionsRef = useLatest_default(options);
    var dragEnterTarget = (0, import_react35.useRef)();
    useEffectWithTarget_default(function() {
        var targetElement = getTargetElement(target);
        if (!(targetElement === null || targetElement === void 0 ? void 0 : targetElement.addEventListener)) {
            return;
        }
        var onData = function(dataTransfer, event) {
            var uri = dataTransfer.getData("text/uri-list");
            var dom = dataTransfer.getData("custom");
            if (dom && optionsRef.current.onDom) {
                var data = dom;
                try {
                    data = JSON.parse(dom);
                } catch (e) {
                    data = dom;
                }
                optionsRef.current.onDom(data, event);
                return;
            }
            if (uri && optionsRef.current.onUri) {
                optionsRef.current.onUri(uri, event);
                return;
            }
            if (dataTransfer.files && dataTransfer.files.length && optionsRef.current.onFiles) {
                optionsRef.current.onFiles(Array.from(dataTransfer.files), event);
                return;
            }
            if (dataTransfer.items && dataTransfer.items.length && optionsRef.current.onText) {
                dataTransfer.items[0].getAsString(function(text) {
                    optionsRef.current.onText(text, event);
                });
            }
        };
        var onDragEnter = function(event) {
            var _a, _b;
            event.preventDefault();
            event.stopPropagation();
            dragEnterTarget.current = event.target;
            (_b = (_a = optionsRef.current).onDragEnter) === null || _b === void 0 ? void 0 : _b.call(_a, event);
        };
        var onDragOver = function(event) {
            var _a, _b;
            event.preventDefault();
            (_b = (_a = optionsRef.current).onDragOver) === null || _b === void 0 ? void 0 : _b.call(_a, event);
        };
        var onDragLeave = function(event) {
            var _a, _b;
            if (event.target === dragEnterTarget.current) {
                (_b = (_a = optionsRef.current).onDragLeave) === null || _b === void 0 ? void 0 : _b.call(_a, event);
            }
        };
        var onDrop = function(event) {
            var _a, _b;
            event.preventDefault();
            onData(event.dataTransfer, event);
            (_b = (_a = optionsRef.current).onDrop) === null || _b === void 0 ? void 0 : _b.call(_a, event);
        };
        var onPaste = function(event) {
            var _a, _b;
            onData(event.clipboardData, event);
            (_b = (_a = optionsRef.current).onPaste) === null || _b === void 0 ? void 0 : _b.call(_a, event);
        };
        targetElement.addEventListener("dragenter", onDragEnter);
        targetElement.addEventListener("dragover", onDragOver);
        targetElement.addEventListener("dragleave", onDragLeave);
        targetElement.addEventListener("drop", onDrop);
        targetElement.addEventListener("paste", onPaste);
        return function() {
            targetElement.removeEventListener("dragenter", onDragEnter);
            targetElement.removeEventListener("dragover", onDragOver);
            targetElement.removeEventListener("dragleave", onDragLeave);
            targetElement.removeEventListener("drop", onDrop);
            targetElement.removeEventListener("paste", onPaste);
        };
    }, [], target);
};
var useDrop_default = useDrop;
// node_modules/ahooks/es/useDynamicList/index.js
var import_react36 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useDynamicList = function(initialList) {
    if (initialList === void 0) {
        initialList = [];
    }
    var counterRef = (0, import_react36.useRef)(-1);
    var keyList = (0, import_react36.useRef)([]);
    var setKey = (0, import_react36.useCallback)(function(index2) {
        counterRef.current += 1;
        keyList.current.splice(index2, 0, counterRef.current);
    }, []);
    var _a = __read((0, import_react36.useState)(function() {
        initialList.forEach(function(_, index2) {
            setKey(index2);
        });
        return initialList;
    }), 2), list = _a[0], setList = _a[1];
    var resetList = (0, import_react36.useCallback)(function(newList) {
        keyList.current = [];
        setList(function() {
            newList.forEach(function(_, index2) {
                setKey(index2);
            });
            return newList;
        });
    }, []);
    var insert = (0, import_react36.useCallback)(function(index2, item) {
        setList(function(l) {
            var temp = __spreadArray([], __read(l), false);
            temp.splice(index2, 0, item);
            setKey(index2);
            return temp;
        });
    }, []);
    var getKey = (0, import_react36.useCallback)(function(index2) {
        return keyList.current[index2];
    }, []);
    var getIndex = (0, import_react36.useCallback)(function(key) {
        return keyList.current.findIndex(function(ele) {
            return ele === key;
        });
    }, []);
    var merge = (0, import_react36.useCallback)(function(index2, items) {
        setList(function(l) {
            var temp = __spreadArray([], __read(l), false);
            items.forEach(function(_, i) {
                setKey(index2 + i);
            });
            temp.splice.apply(temp, __spreadArray([
                index2,
                0
            ], __read(items), false));
            return temp;
        });
    }, []);
    var replace = (0, import_react36.useCallback)(function(index2, item) {
        setList(function(l) {
            var temp = __spreadArray([], __read(l), false);
            temp[index2] = item;
            return temp;
        });
    }, []);
    var remove = (0, import_react36.useCallback)(function(index2) {
        setList(function(l) {
            var temp = __spreadArray([], __read(l), false);
            temp.splice(index2, 1);
            try {
                keyList.current.splice(index2, 1);
            } catch (e) {
                console.error(e);
            }
            return temp;
        });
    }, []);
    var move = (0, import_react36.useCallback)(function(oldIndex, newIndex) {
        if (oldIndex === newIndex) {
            return;
        }
        setList(function(l) {
            var newList = __spreadArray([], __read(l), false);
            var temp = newList.filter(function(_, index2) {
                return index2 !== oldIndex;
            });
            temp.splice(newIndex, 0, newList[oldIndex]);
            try {
                var keyTemp = keyList.current.filter(function(_, index2) {
                    return index2 !== oldIndex;
                });
                keyTemp.splice(newIndex, 0, keyList.current[oldIndex]);
                keyList.current = keyTemp;
            } catch (e) {
                console.error(e);
            }
            return temp;
        });
    }, []);
    var push = (0, import_react36.useCallback)(function(item) {
        setList(function(l) {
            setKey(l.length);
            return l.concat([
                item
            ]);
        });
    }, []);
    var pop = (0, import_react36.useCallback)(function() {
        try {
            keyList.current = keyList.current.slice(0, keyList.current.length - 1);
        } catch (e) {
            console.error(e);
        }
        setList(function(l) {
            return l.slice(0, l.length - 1);
        });
    }, []);
    var unshift = (0, import_react36.useCallback)(function(item) {
        setList(function(l) {
            setKey(0);
            return [
                item
            ].concat(l);
        });
    }, []);
    var shift = (0, import_react36.useCallback)(function() {
        try {
            keyList.current = keyList.current.slice(1, keyList.current.length);
        } catch (e) {
            console.error(e);
        }
        setList(function(l) {
            return l.slice(1, l.length);
        });
    }, []);
    var sortList = (0, import_react36.useCallback)(function(result) {
        return result.map(function(item, index2) {
            return {
                key: index2,
                item
            };
        }).sort(function(a, b) {
            return getIndex(a.key) - getIndex(b.key);
        }).filter(function(item) {
            return !!item.item;
        }).map(function(item) {
            return item.item;
        });
    }, // retrive the data
    []);
    return {
        list,
        insert,
        merge,
        replace,
        remove,
        getKey,
        getIndex,
        move,
        push,
        pop,
        unshift,
        shift,
        sortList,
        resetList
    };
};
var useDynamicList_default = useDynamicList;
// node_modules/ahooks/es/useEventEmitter/index.js
var import_react37 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var EventEmitter = /** @class */ /* @__PURE__ */ function() {
    function EventEmitter2() {
        var _this = this;
        this.subscriptions = /* @__PURE__ */ new Set();
        this.emit = function(val) {
            var e_1, _a;
            try {
                for(var _b = __values(_this.subscriptions), _c = _b.next(); !_c.done; _c = _b.next()){
                    var subscription = _c.value;
                    subscription(val);
                }
            } catch (e_1_1) {
                e_1 = {
                    error: e_1_1
                };
            } finally{
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                } finally{
                    if (e_1) throw e_1.error;
                }
            }
        };
        this.useSubscription = function(callback) {
            var callbackRef = (0, import_react37.useRef)();
            callbackRef.current = callback;
            (0, import_react37.useEffect)(function() {
                function subscription(val) {
                    if (callbackRef.current) {
                        callbackRef.current(val);
                    }
                }
                _this.subscriptions.add(subscription);
                return function() {
                    _this.subscriptions.delete(subscription);
                };
            }, []);
        };
    }
    return EventEmitter2;
}();
function useEventEmitter() {
    var ref = (0, import_react37.useRef)();
    if (!ref.current) {
        ref.current = new EventEmitter();
    }
    return ref.current;
}
// node_modules/ahooks/es/useEventTarget/index.js
var import_react38 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useEventTarget(options) {
    var _a = options || {}, initialValue = _a.initialValue, transformer = _a.transformer;
    var _b = __read((0, import_react38.useState)(initialValue), 2), value = _b[0], setValue = _b[1];
    var transformerRef = useLatest_default(transformer);
    var reset = (0, import_react38.useCallback)(function() {
        return setValue(initialValue);
    }, []);
    var onChange = (0, import_react38.useCallback)(function(e) {
        var _value = e.target.value;
        if (isFunction(transformerRef.current)) {
            return setValue(transformerRef.current(_value));
        }
        return setValue(_value);
    }, []);
    return [
        value,
        {
            onChange,
            reset
        }
    ];
}
var useEventTarget_default = useEventTarget;
// node_modules/ahooks/es/useExternal/index.js
var import_react39 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var EXTERNAL_USED_COUNT = {};
var loadScript = function(path, props) {
    if (props === void 0) {
        props = {};
    }
    var script = document.querySelector('script[src="'.concat(path, '"]'));
    if (!script) {
        var newScript_1 = document.createElement("script");
        newScript_1.src = path;
        Object.keys(props).forEach(function(key) {
            newScript_1[key] = props[key];
        });
        newScript_1.setAttribute("data-status", "loading");
        document.body.appendChild(newScript_1);
        return {
            ref: newScript_1,
            status: "loading"
        };
    }
    return {
        ref: script,
        status: script.getAttribute("data-status") || "ready"
    };
};
var loadCss = function(path, props) {
    if (props === void 0) {
        props = {};
    }
    var css = document.querySelector('link[href="'.concat(path, '"]'));
    if (!css) {
        var newCss_1 = document.createElement("link");
        newCss_1.rel = "stylesheet";
        newCss_1.href = path;
        Object.keys(props).forEach(function(key) {
            newCss_1[key] = props[key];
        });
        var isLegacyIECss = "hideFocus" in newCss_1;
        if (isLegacyIECss && newCss_1.relList) {
            newCss_1.rel = "preload";
            newCss_1.as = "style";
        }
        newCss_1.setAttribute("data-status", "loading");
        document.head.appendChild(newCss_1);
        return {
            ref: newCss_1,
            status: "loading"
        };
    }
    return {
        ref: css,
        status: css.getAttribute("data-status") || "ready"
    };
};
var useExternal = function(path, options) {
    var _a = __read((0, import_react39.useState)(path ? "loading" : "unset"), 2), status = _a[0], setStatus = _a[1];
    var ref = (0, import_react39.useRef)();
    (0, import_react39.useEffect)(function() {
        if (!path) {
            setStatus("unset");
            return;
        }
        var pathname = path.replace(/[|#].*$/, "");
        if ((options === null || options === void 0 ? void 0 : options.type) === "css" || !(options === null || options === void 0 ? void 0 : options.type) && /(^css!|\.css$)/.test(pathname)) {
            var result = loadCss(path, options === null || options === void 0 ? void 0 : options.css);
            ref.current = result.ref;
            setStatus(result.status);
        } else if ((options === null || options === void 0 ? void 0 : options.type) === "js" || !(options === null || options === void 0 ? void 0 : options.type) && /(^js!|\.js$)/.test(pathname)) {
            var result = loadScript(path, options === null || options === void 0 ? void 0 : options.js);
            ref.current = result.ref;
            setStatus(result.status);
        } else {
            console.error("Cannot infer the type of external resource, and please provide a type ('js' | 'css'). Refer to the https://ahooks.js.org/hooks/dom/use-external/#options");
        }
        if (!ref.current) {
            return;
        }
        if (EXTERNAL_USED_COUNT[path] === void 0) {
            EXTERNAL_USED_COUNT[path] = 1;
        } else {
            EXTERNAL_USED_COUNT[path] += 1;
        }
        var handler = function(event) {
            var _a2;
            var targetStatus = event.type === "load" ? "ready" : "error";
            (_a2 = ref.current) === null || _a2 === void 0 ? void 0 : _a2.setAttribute("data-status", targetStatus);
            setStatus(targetStatus);
        };
        ref.current.addEventListener("load", handler);
        ref.current.addEventListener("error", handler);
        return function() {
            var _a2, _b, _c;
            (_a2 = ref.current) === null || _a2 === void 0 ? void 0 : _a2.removeEventListener("load", handler);
            (_b = ref.current) === null || _b === void 0 ? void 0 : _b.removeEventListener("error", handler);
            EXTERNAL_USED_COUNT[path] -= 1;
            if (EXTERNAL_USED_COUNT[path] === 0 && !(options === null || options === void 0 ? void 0 : options.keepWhenUnused)) {
                (_c = ref.current) === null || _c === void 0 ? void 0 : _c.remove();
            }
            ref.current = void 0;
        };
    }, [
        path
    ]);
    return status;
};
var useExternal_default = useExternal;
// node_modules/ahooks/es/useFavicon/index.js
var import_react40 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var ImgTypeMap = {
    SVG: "image/svg+xml",
    ICO: "image/x-icon",
    GIF: "image/gif",
    PNG: "image/png"
};
var useFavicon = function(href) {
    (0, import_react40.useEffect)(function() {
        if (!href) return;
        var cutUrl = href.split(".");
        var imgSuffix = cutUrl[cutUrl.length - 1].toLocaleUpperCase();
        var link = document.querySelector("link[rel*='icon']") || document.createElement("link");
        link.type = ImgTypeMap[imgSuffix];
        link.href = href;
        link.rel = "shortcut icon";
        document.getElementsByTagName("head")[0].appendChild(link);
    }, [
        href
    ]);
};
var useFavicon_default = useFavicon;
// node_modules/ahooks/es/useFocusWithin/index.js
var import_react41 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useFocusWithin(target, options) {
    var _a = __read((0, import_react41.useState)(false), 2), isFocusWithin = _a[0], setIsFocusWithin = _a[1];
    var _b = options || {}, onFocus = _b.onFocus, onBlur = _b.onBlur, onChange = _b.onChange;
    useEventListener_default("focusin", function(e) {
        if (!isFocusWithin) {
            onFocus === null || onFocus === void 0 ? void 0 : onFocus(e);
            onChange === null || onChange === void 0 ? void 0 : onChange(true);
            setIsFocusWithin(true);
        }
    }, {
        target
    });
    useEventListener_default("focusout", function(e) {
        var _a2, _b2;
        if (isFocusWithin && !((_b2 = (_a2 = e.currentTarget) === null || _a2 === void 0 ? void 0 : _a2.contains) === null || _b2 === void 0 ? void 0 : _b2.call(_a2, e.relatedTarget))) {
            onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);
            onChange === null || onChange === void 0 ? void 0 : onChange(false);
            setIsFocusWithin(false);
        }
    }, {
        target
    });
    return isFocusWithin;
}
// node_modules/ahooks/es/useFullscreen/index.js
var import_react42 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var import_screenfull = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)(require_screenfull());
var useFullscreen = function(target, options) {
    var _a = options || {}, onExit = _a.onExit, onEnter = _a.onEnter, _b = _a.pageFullscreen, pageFullscreen = _b === void 0 ? false : _b;
    var _c = isBoolean(pageFullscreen) || !pageFullscreen ? {} : pageFullscreen, _d = _c.className, className = _d === void 0 ? "ahooks-page-fullscreen" : _d, _e = _c.zIndex, zIndex = _e === void 0 ? 999999 : _e;
    var onExitRef = useLatest_default(onExit);
    var onEnterRef = useLatest_default(onEnter);
    var _f = __read((0, import_react42.useState)(false), 2), state = _f[0], setState = _f[1];
    var invokeCallback = function(fullscreen) {
        var _a2, _b2;
        if (fullscreen) {
            (_a2 = onEnterRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(onEnterRef);
        } else {
            (_b2 = onExitRef.current) === null || _b2 === void 0 ? void 0 : _b2.call(onExitRef);
        }
    };
    var onScreenfullChange = useMemoizedFn_default(function() {
        if (import_screenfull.default.isEnabled) {
            var el = getTargetElement(target);
            if (!import_screenfull.default.element) {
                invokeCallback(false);
                setState(false);
                import_screenfull.default.off("change", onScreenfullChange);
            } else {
                var isFullscreen = import_screenfull.default.element === el;
                invokeCallback(isFullscreen);
                setState(isFullscreen);
            }
        }
    });
    var togglePageFullscreen = function(fullscreen) {
        var el = getTargetElement(target);
        if (!el) {
            return;
        }
        var styleElem = document.getElementById(className);
        if (fullscreen) {
            el.classList.add(className);
            if (!styleElem) {
                styleElem = document.createElement("style");
                styleElem.setAttribute("id", className);
                styleElem.textContent = "\n          .".concat(className, " {\n            position: fixed; left: 0; top: 0; right: 0; bottom: 0;\n            width: 100% !important; height: 100% !important;\n            z-index: ").concat(zIndex, ";\n          }");
                el.appendChild(styleElem);
            }
        } else {
            el.classList.remove(className);
            if (styleElem) {
                styleElem.remove();
            }
        }
        if (state !== fullscreen) {
            invokeCallback(fullscreen);
            setState(fullscreen);
        }
    };
    var enterFullscreen = function() {
        var el = getTargetElement(target);
        if (!el) {
            return;
        }
        if (pageFullscreen) {
            togglePageFullscreen(true);
            return;
        }
        if (import_screenfull.default.isEnabled) {
            try {
                import_screenfull.default.request(el);
                import_screenfull.default.on("change", onScreenfullChange);
            } catch (error) {
                console.error(error);
            }
        }
    };
    var exitFullscreen = function() {
        var el = getTargetElement(target);
        if (!el) {
            return;
        }
        if (pageFullscreen) {
            togglePageFullscreen(false);
            return;
        }
        if (import_screenfull.default.isEnabled && import_screenfull.default.element === el) {
            import_screenfull.default.exit();
        }
    };
    var toggleFullscreen = function() {
        if (state) {
            exitFullscreen();
        } else {
            enterFullscreen();
        }
    };
    useUnmount_default(function() {
        if (import_screenfull.default.isEnabled && !pageFullscreen) {
            import_screenfull.default.off("change", onScreenfullChange);
        }
    });
    return [
        state,
        {
            enterFullscreen: useMemoizedFn_default(enterFullscreen),
            exitFullscreen: useMemoizedFn_default(exitFullscreen),
            toggleFullscreen: useMemoizedFn_default(toggleFullscreen),
            isEnabled: import_screenfull.default.isEnabled
        }
    ];
};
var useFullscreen_default = useFullscreen;
// node_modules/ahooks/es/useFusionTable/fusionAdapter.js
var fieldAdapter = function(field) {
    return {
        getFieldInstance: function(name) {
            return field.getNames().includes(name);
        },
        setFieldsValue: field.setValues,
        getFieldsValue: field.getValues,
        resetFields: field.resetToDefault,
        validateFields: function(fields, callback) {
            field.validate(fields, callback);
        }
    };
};
var resultAdapter = function(result) {
    var tableProps = {
        dataSource: result.tableProps.dataSource,
        loading: result.tableProps.loading,
        onSort: function(dataIndex, order) {
            var _a;
            result.tableProps.onChange({
                current: result.pagination.current,
                pageSize: result.pagination.pageSize
            }, (_a = result.params[0]) === null || _a === void 0 ? void 0 : _a.filters, {
                field: dataIndex,
                order
            });
        },
        onFilter: function(filterParams) {
            var _a;
            result.tableProps.onChange({
                current: result.pagination.current,
                pageSize: result.pagination.pageSize
            }, filterParams, (_a = result.params[0]) === null || _a === void 0 ? void 0 : _a.sorter);
        }
    };
    var paginationProps = {
        onChange: result.pagination.changeCurrent,
        onPageSizeChange: result.pagination.changePageSize,
        current: result.pagination.current,
        pageSize: result.pagination.pageSize,
        total: result.pagination.total
    };
    return __assign(__assign({}, result), {
        tableProps,
        paginationProps
    });
};
// node_modules/ahooks/es/useFusionTable/index.js
var useFusionTable = function(service, options) {
    if (options === void 0) {
        options = {};
    }
    var ret = useAntdTable_default(service, __assign(__assign({}, options), {
        form: options.field ? fieldAdapter(options.field) : void 0
    }));
    return resultAdapter(ret);
};
var useFusionTable_default = useFusionTable;
// node_modules/ahooks/es/useGetState/index.js
var import_react43 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useGetState(initialState) {
    var _a = __read((0, import_react43.useState)(initialState), 2), state = _a[0], setState = _a[1];
    var stateRef = (0, import_react43.useRef)(state);
    stateRef.current = state;
    var getState = (0, import_react43.useCallback)(function() {
        return stateRef.current;
    }, []);
    return [
        state,
        setState,
        getState
    ];
}
var useGetState_default = useGetState;
// node_modules/ahooks/es/useHistoryTravel/index.js
var import_react44 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var dumpIndex = function(step, arr) {
    var index2 = step > 0 ? step - 1 : arr.length + step;
    if (index2 >= arr.length - 1) {
        index2 = arr.length - 1;
    }
    if (index2 < 0) {
        index2 = 0;
    }
    return index2;
};
var split = function(step, targetArr) {
    var index2 = dumpIndex(step, targetArr);
    return {
        _current: targetArr[index2],
        _before: targetArr.slice(0, index2),
        _after: targetArr.slice(index2 + 1)
    };
};
function useHistoryTravel(initialValue, maxLength) {
    if (maxLength === void 0) {
        maxLength = 0;
    }
    var _a = __read((0, import_react44.useState)({
        present: initialValue,
        past: [],
        future: []
    }), 2), history = _a[0], setHistory = _a[1];
    var present = history.present, past = history.past, future = history.future;
    var initialValueRef = (0, import_react44.useRef)(initialValue);
    var reset = function() {
        var params = [];
        for(var _i = 0; _i < arguments.length; _i++){
            params[_i] = arguments[_i];
        }
        var _initial = params.length > 0 ? params[0] : initialValueRef.current;
        initialValueRef.current = _initial;
        setHistory({
            present: _initial,
            future: [],
            past: []
        });
    };
    var updateValue = function(val) {
        var _past = __spreadArray(__spreadArray([], __read(past), false), [
            present
        ], false);
        var maxLengthNum = isNumber(maxLength) ? maxLength : Number(maxLength);
        if (maxLengthNum > 0 && _past.length > maxLengthNum) {
            _past.splice(0, 1);
        }
        setHistory({
            present: val,
            future: [],
            past: _past
        });
    };
    var _forward = function(step) {
        if (step === void 0) {
            step = 1;
        }
        if (future.length === 0) {
            return;
        }
        var _a2 = split(step, future), _before = _a2._before, _current = _a2._current, _after = _a2._after;
        setHistory({
            past: __spreadArray(__spreadArray(__spreadArray([], __read(past), false), [
                present
            ], false), __read(_before), false),
            present: _current,
            future: _after
        });
    };
    var _backward = function(step) {
        if (step === void 0) {
            step = -1;
        }
        if (past.length === 0) {
            return;
        }
        var _a2 = split(step, past), _before = _a2._before, _current = _a2._current, _after = _a2._after;
        setHistory({
            past: _before,
            present: _current,
            future: __spreadArray(__spreadArray(__spreadArray([], __read(_after), false), [
                present
            ], false), __read(future), false)
        });
    };
    var go = function(step) {
        var stepNum = isNumber(step) ? step : Number(step);
        if (stepNum === 0) {
            return;
        }
        if (stepNum > 0) {
            return _forward(stepNum);
        }
        _backward(stepNum);
    };
    return {
        value: present,
        backLength: past.length,
        forwardLength: future.length,
        setValue: useMemoizedFn_default(updateValue),
        go: useMemoizedFn_default(go),
        back: useMemoizedFn_default(function() {
            go(-1);
        }),
        forward: useMemoizedFn_default(function() {
            go(1);
        }),
        reset: useMemoizedFn_default(reset)
    };
}
// node_modules/ahooks/es/useHover/index.js
var useHover_default = function(target, options) {
    var _a = options || {}, onEnter = _a.onEnter, onLeave = _a.onLeave, onChange = _a.onChange;
    var _b = __read(useBoolean(false), 2), state = _b[0], _c = _b[1], setTrue = _c.setTrue, setFalse = _c.setFalse;
    useEventListener_default("mouseenter", function() {
        onEnter === null || onEnter === void 0 ? void 0 : onEnter();
        setTrue();
        onChange === null || onChange === void 0 ? void 0 : onChange(true);
    }, {
        target
    });
    useEventListener_default("mouseleave", function() {
        onLeave === null || onLeave === void 0 ? void 0 : onLeave();
        setFalse();
        onChange === null || onChange === void 0 ? void 0 : onChange(false);
    }, {
        target
    });
    return state;
};
// node_modules/ahooks/es/useInfiniteScroll/index.js
var import_react45 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/utils/rect.js
var getScrollTop = function(el) {
    if (el === document || el === document.body) {
        return Math.max(window.pageYOffset, document.documentElement.scrollTop, document.body.scrollTop);
    }
    return el.scrollTop;
};
var getScrollHeight = function(el) {
    return el.scrollHeight || Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);
};
var getClientHeight = function(el) {
    return el.clientHeight || Math.max(document.documentElement.clientHeight, document.body.clientHeight);
};
// node_modules/ahooks/es/useInfiniteScroll/index.js
var useInfiniteScroll = function(service, options) {
    if (options === void 0) {
        options = {};
    }
    var target = options.target, isNoMore = options.isNoMore, _a = options.threshold, threshold = _a === void 0 ? 100 : _a, _b = options.reloadDeps, reloadDeps = _b === void 0 ? [] : _b, manual = options.manual, onBefore = options.onBefore, onSuccess = options.onSuccess, onError = options.onError, onFinally = options.onFinally;
    var _c = __read((0, import_react45.useState)(), 2), finalData = _c[0], setFinalData = _c[1];
    var _d = __read((0, import_react45.useState)(false), 2), loadingMore = _d[0], setLoadingMore = _d[1];
    var noMore = (0, import_react45.useMemo)(function() {
        if (!isNoMore) return false;
        return isNoMore(finalData);
    }, [
        finalData
    ]);
    var _e = useRequest_default2(function(lastData) {
        return __awaiter(void 0, void 0, void 0, function() {
            var currentData;
            var _a2, _b2;
            return __generator(this, function(_c2) {
                switch(_c2.label){
                    case 0:
                        return [
                            4,
                            service(lastData)
                        ];
                    case 1:
                        currentData = _c2.sent();
                        if (!lastData) {
                            setFinalData(__assign(__assign({}, currentData), {
                                list: __spreadArray([], __read((_a2 = currentData.list) !== null && _a2 !== void 0 ? _a2 : []), false)
                            }));
                        } else {
                            setFinalData(__assign(__assign({}, currentData), {
                                list: __spreadArray(__spreadArray([], __read((_b2 = lastData.list) !== null && _b2 !== void 0 ? _b2 : []), false), __read(currentData.list), false)
                            }));
                        }
                        return [
                            2,
                            currentData
                        ];
                }
            });
        });
    }, {
        manual,
        onFinally: function(_, d, e) {
            setLoadingMore(false);
            onFinally === null || onFinally === void 0 ? void 0 : onFinally(d, e);
        },
        onBefore: function() {
            return onBefore === null || onBefore === void 0 ? void 0 : onBefore();
        },
        onSuccess: function(d) {
            setTimeout(function() {
                scrollMethod();
            });
            onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(d);
        },
        onError: function(e) {
            return onError === null || onError === void 0 ? void 0 : onError(e);
        }
    }), loading = _e.loading, run = _e.run, runAsync = _e.runAsync, cancel = _e.cancel;
    var loadMore = useMemoizedFn_default(function() {
        if (noMore) return;
        setLoadingMore(true);
        run(finalData);
    });
    var loadMoreAsync = useMemoizedFn_default(function() {
        if (noMore) return Promise.reject();
        setLoadingMore(true);
        return runAsync(finalData);
    });
    var reload = function() {
        setLoadingMore(false);
        return run();
    };
    var reloadAsync = function() {
        setLoadingMore(false);
        return runAsync();
    };
    var scrollMethod = function() {
        var el = getTargetElement(target);
        if (!el) {
            return;
        }
        el = el === document ? document.documentElement : el;
        var scrollTop = getScrollTop(el);
        var scrollHeight = getScrollHeight(el);
        var clientHeight = getClientHeight(el);
        if (scrollHeight - scrollTop <= clientHeight + threshold) {
            loadMore();
        }
    };
    useEventListener_default("scroll", function() {
        if (loading || loadingMore) {
            return;
        }
        scrollMethod();
    }, {
        target
    });
    useUpdateEffect_default(function() {
        run();
    }, __spreadArray([], __read(reloadDeps), false));
    return {
        data: finalData,
        loading: !loadingMore && loading,
        loadingMore,
        noMore,
        loadMore,
        loadMoreAsync,
        reload: useMemoizedFn_default(reload),
        reloadAsync: useMemoizedFn_default(reloadAsync),
        mutate: setFinalData,
        cancel
    };
};
var useInfiniteScroll_default = useInfiniteScroll;
// node_modules/ahooks/es/useInterval/index.js
var import_react46 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useInterval = function(fn, delay, options) {
    if (options === void 0) {
        options = {};
    }
    var timerCallback = useMemoizedFn_default(fn);
    var timerRef = (0, import_react46.useRef)(null);
    var clear = (0, import_react46.useCallback)(function() {
        if (timerRef.current) {
            clearInterval(timerRef.current);
        }
    }, []);
    (0, import_react46.useEffect)(function() {
        if (!isNumber(delay) || delay < 0) {
            return;
        }
        if (options.immediate) {
            timerCallback();
        }
        timerRef.current = setInterval(timerCallback, delay);
        return clear;
    }, [
        delay,
        options.immediate
    ]);
    return clear;
};
var useInterval_default = useInterval;
// node_modules/ahooks/node_modules/intersection-observer/intersection-observer.js
(function() {
    "use strict";
    if (typeof window !== "object") {
        return;
    }
    if ("IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype) {
        if (!("isIntersecting" in window.IntersectionObserverEntry.prototype)) {
            Object.defineProperty(window.IntersectionObserverEntry.prototype, "isIntersecting", {
                get: function() {
                    return this.intersectionRatio > 0;
                }
            });
        }
        return;
    }
    function getFrameElement(doc) {
        try {
            return doc.defaultView && doc.defaultView.frameElement || null;
        } catch (e) {
            return null;
        }
    }
    var document2 = function(startDoc) {
        var doc = startDoc;
        var frame = getFrameElement(doc);
        while(frame){
            doc = frame.ownerDocument;
            frame = getFrameElement(doc);
        }
        return doc;
    }(window.document);
    var registry = [];
    var crossOriginUpdater = null;
    var crossOriginRect = null;
    function IntersectionObserverEntry(entry) {
        this.time = entry.time;
        this.target = entry.target;
        this.rootBounds = ensureDOMRect(entry.rootBounds);
        this.boundingClientRect = ensureDOMRect(entry.boundingClientRect);
        this.intersectionRect = ensureDOMRect(entry.intersectionRect || getEmptyRect());
        this.isIntersecting = !!entry.intersectionRect;
        var targetRect = this.boundingClientRect;
        var targetArea = targetRect.width * targetRect.height;
        var intersectionRect = this.intersectionRect;
        var intersectionArea = intersectionRect.width * intersectionRect.height;
        if (targetArea) {
            this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));
        } else {
            this.intersectionRatio = this.isIntersecting ? 1 : 0;
        }
    }
    function IntersectionObserver2(callback, opt_options) {
        var options = opt_options || {};
        if (typeof callback != "function") {
            throw new Error("callback must be a function");
        }
        if (options.root && options.root.nodeType != 1 && options.root.nodeType != 9) {
            throw new Error("root must be a Document or Element");
        }
        this._checkForIntersections = throttle4(this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);
        this._callback = callback;
        this._observationTargets = [];
        this._queuedEntries = [];
        this._rootMarginValues = this._parseRootMargin(options.rootMargin);
        this.thresholds = this._initThresholds(options.threshold);
        this.root = options.root || null;
        this.rootMargin = this._rootMarginValues.map(function(margin) {
            return margin.value + margin.unit;
        }).join(" ");
        this._monitoringDocuments = [];
        this._monitoringUnsubscribes = [];
    }
    IntersectionObserver2.prototype.THROTTLE_TIMEOUT = 100;
    IntersectionObserver2.prototype.POLL_INTERVAL = null;
    IntersectionObserver2.prototype.USE_MUTATION_OBSERVER = true;
    IntersectionObserver2._setupCrossOriginUpdater = function() {
        if (!crossOriginUpdater) {
            crossOriginUpdater = function(boundingClientRect, intersectionRect) {
                if (!boundingClientRect || !intersectionRect) {
                    crossOriginRect = getEmptyRect();
                } else {
                    crossOriginRect = convertFromParentRect(boundingClientRect, intersectionRect);
                }
                registry.forEach(function(observer2) {
                    observer2._checkForIntersections();
                });
            };
        }
        return crossOriginUpdater;
    };
    IntersectionObserver2._resetCrossOriginUpdater = function() {
        crossOriginUpdater = null;
        crossOriginRect = null;
    };
    IntersectionObserver2.prototype.observe = function(target) {
        var isTargetAlreadyObserved = this._observationTargets.some(function(item) {
            return item.element == target;
        });
        if (isTargetAlreadyObserved) {
            return;
        }
        if (!(target && target.nodeType == 1)) {
            throw new Error("target must be an Element");
        }
        this._registerInstance();
        this._observationTargets.push({
            element: target,
            entry: null
        });
        this._monitorIntersections(target.ownerDocument);
        this._checkForIntersections();
    };
    IntersectionObserver2.prototype.unobserve = function(target) {
        this._observationTargets = this._observationTargets.filter(function(item) {
            return item.element != target;
        });
        this._unmonitorIntersections(target.ownerDocument);
        if (this._observationTargets.length == 0) {
            this._unregisterInstance();
        }
    };
    IntersectionObserver2.prototype.disconnect = function() {
        this._observationTargets = [];
        this._unmonitorAllIntersections();
        this._unregisterInstance();
    };
    IntersectionObserver2.prototype.takeRecords = function() {
        var records = this._queuedEntries.slice();
        this._queuedEntries = [];
        return records;
    };
    IntersectionObserver2.prototype._initThresholds = function(opt_threshold) {
        var threshold = opt_threshold || [
            0
        ];
        if (!Array.isArray(threshold)) threshold = [
            threshold
        ];
        return threshold.sort().filter(function(t, i, a) {
            if (typeof t != "number" || isNaN(t) || t < 0 || t > 1) {
                throw new Error("threshold must be a number between 0 and 1 inclusively");
            }
            return t !== a[i - 1];
        });
    };
    IntersectionObserver2.prototype._parseRootMargin = function(opt_rootMargin) {
        var marginString = opt_rootMargin || "0px";
        var margins = marginString.split(/\s+/).map(function(margin) {
            var parts = /^(-?\d*\.?\d+)(px|%)$/.exec(margin);
            if (!parts) {
                throw new Error("rootMargin must be specified in pixels or percent");
            }
            return {
                value: parseFloat(parts[1]),
                unit: parts[2]
            };
        });
        margins[1] = margins[1] || margins[0];
        margins[2] = margins[2] || margins[0];
        margins[3] = margins[3] || margins[1];
        return margins;
    };
    IntersectionObserver2.prototype._monitorIntersections = function(doc) {
        var win = doc.defaultView;
        if (!win) {
            return;
        }
        if (this._monitoringDocuments.indexOf(doc) != -1) {
            return;
        }
        var callback = this._checkForIntersections;
        var monitoringInterval = null;
        var domObserver = null;
        if (this.POLL_INTERVAL) {
            monitoringInterval = win.setInterval(callback, this.POLL_INTERVAL);
        } else {
            addEvent(win, "resize", callback, true);
            addEvent(doc, "scroll", callback, true);
            if (this.USE_MUTATION_OBSERVER && "MutationObserver" in win) {
                domObserver = new win.MutationObserver(callback);
                domObserver.observe(doc, {
                    attributes: true,
                    childList: true,
                    characterData: true,
                    subtree: true
                });
            }
        }
        this._monitoringDocuments.push(doc);
        this._monitoringUnsubscribes.push(function() {
            var win2 = doc.defaultView;
            if (win2) {
                if (monitoringInterval) {
                    win2.clearInterval(monitoringInterval);
                }
                removeEvent(win2, "resize", callback, true);
            }
            removeEvent(doc, "scroll", callback, true);
            if (domObserver) {
                domObserver.disconnect();
            }
        });
        var rootDoc = this.root && (this.root.ownerDocument || this.root) || document2;
        if (doc != rootDoc) {
            var frame = getFrameElement(doc);
            if (frame) {
                this._monitorIntersections(frame.ownerDocument);
            }
        }
    };
    IntersectionObserver2.prototype._unmonitorIntersections = function(doc) {
        var index2 = this._monitoringDocuments.indexOf(doc);
        if (index2 == -1) {
            return;
        }
        var rootDoc = this.root && (this.root.ownerDocument || this.root) || document2;
        var hasDependentTargets = this._observationTargets.some(function(item) {
            var itemDoc = item.element.ownerDocument;
            if (itemDoc == doc) {
                return true;
            }
            while(itemDoc && itemDoc != rootDoc){
                var frame2 = getFrameElement(itemDoc);
                itemDoc = frame2 && frame2.ownerDocument;
                if (itemDoc == doc) {
                    return true;
                }
            }
            return false;
        });
        if (hasDependentTargets) {
            return;
        }
        var unsubscribe = this._monitoringUnsubscribes[index2];
        this._monitoringDocuments.splice(index2, 1);
        this._monitoringUnsubscribes.splice(index2, 1);
        unsubscribe();
        if (doc != rootDoc) {
            var frame = getFrameElement(doc);
            if (frame) {
                this._unmonitorIntersections(frame.ownerDocument);
            }
        }
    };
    IntersectionObserver2.prototype._unmonitorAllIntersections = function() {
        var unsubscribes = this._monitoringUnsubscribes.slice(0);
        this._monitoringDocuments.length = 0;
        this._monitoringUnsubscribes.length = 0;
        for(var i = 0; i < unsubscribes.length; i++){
            unsubscribes[i]();
        }
    };
    IntersectionObserver2.prototype._checkForIntersections = function() {
        if (!this.root && crossOriginUpdater && !crossOriginRect) {
            return;
        }
        var rootIsInDom = this._rootIsInDom();
        var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();
        this._observationTargets.forEach(function(item) {
            var target = item.element;
            var targetRect = getBoundingClientRect(target);
            var rootContainsTarget = this._rootContainsTarget(target);
            var oldEntry = item.entry;
            var intersectionRect = rootIsInDom && rootContainsTarget && this._computeTargetAndRootIntersection(target, targetRect, rootRect);
            var rootBounds = null;
            if (!this._rootContainsTarget(target)) {
                rootBounds = getEmptyRect();
            } else if (!crossOriginUpdater || this.root) {
                rootBounds = rootRect;
            }
            var newEntry = item.entry = new IntersectionObserverEntry({
                time: now(),
                target,
                boundingClientRect: targetRect,
                rootBounds,
                intersectionRect
            });
            if (!oldEntry) {
                this._queuedEntries.push(newEntry);
            } else if (rootIsInDom && rootContainsTarget) {
                if (this._hasCrossedThreshold(oldEntry, newEntry)) {
                    this._queuedEntries.push(newEntry);
                }
            } else {
                if (oldEntry && oldEntry.isIntersecting) {
                    this._queuedEntries.push(newEntry);
                }
            }
        }, this);
        if (this._queuedEntries.length) {
            this._callback(this.takeRecords(), this);
        }
    };
    IntersectionObserver2.prototype._computeTargetAndRootIntersection = function(target, targetRect, rootRect) {
        if (window.getComputedStyle(target).display == "none") return;
        var intersectionRect = targetRect;
        var parent = getParentNode(target);
        var atRoot = false;
        while(!atRoot && parent){
            var parentRect = null;
            var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {};
            if (parentComputedStyle.display == "none") return null;
            if (parent == this.root || parent.nodeType == /* DOCUMENT */ 9) {
                atRoot = true;
                if (parent == this.root || parent == document2) {
                    if (crossOriginUpdater && !this.root) {
                        if (!crossOriginRect || crossOriginRect.width == 0 && crossOriginRect.height == 0) {
                            parent = null;
                            parentRect = null;
                            intersectionRect = null;
                        } else {
                            parentRect = crossOriginRect;
                        }
                    } else {
                        parentRect = rootRect;
                    }
                } else {
                    var frame = getParentNode(parent);
                    var frameRect = frame && getBoundingClientRect(frame);
                    var frameIntersect = frame && this._computeTargetAndRootIntersection(frame, frameRect, rootRect);
                    if (frameRect && frameIntersect) {
                        parent = frame;
                        parentRect = convertFromParentRect(frameRect, frameIntersect);
                    } else {
                        parent = null;
                        intersectionRect = null;
                    }
                }
            } else {
                var doc = parent.ownerDocument;
                if (parent != doc.body && parent != doc.documentElement && parentComputedStyle.overflow != "visible") {
                    parentRect = getBoundingClientRect(parent);
                }
            }
            if (parentRect) {
                intersectionRect = computeRectIntersection(parentRect, intersectionRect);
            }
            if (!intersectionRect) break;
            parent = parent && getParentNode(parent);
        }
        return intersectionRect;
    };
    IntersectionObserver2.prototype._getRootRect = function() {
        var rootRect;
        if (this.root && !isDoc(this.root)) {
            rootRect = getBoundingClientRect(this.root);
        } else {
            var doc = isDoc(this.root) ? this.root : document2;
            var html = doc.documentElement;
            var body = doc.body;
            rootRect = {
                top: 0,
                left: 0,
                right: html.clientWidth || body.clientWidth,
                width: html.clientWidth || body.clientWidth,
                bottom: html.clientHeight || body.clientHeight,
                height: html.clientHeight || body.clientHeight
            };
        }
        return this._expandRectByRootMargin(rootRect);
    };
    IntersectionObserver2.prototype._expandRectByRootMargin = function(rect) {
        var margins = this._rootMarginValues.map(function(margin, i) {
            return margin.unit == "px" ? margin.value : margin.value * (i % 2 ? rect.width : rect.height) / 100;
        });
        var newRect = {
            top: rect.top - margins[0],
            right: rect.right + margins[1],
            bottom: rect.bottom + margins[2],
            left: rect.left - margins[3]
        };
        newRect.width = newRect.right - newRect.left;
        newRect.height = newRect.bottom - newRect.top;
        return newRect;
    };
    IntersectionObserver2.prototype._hasCrossedThreshold = function(oldEntry, newEntry) {
        var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;
        var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1;
        if (oldRatio === newRatio) return;
        for(var i = 0; i < this.thresholds.length; i++){
            var threshold = this.thresholds[i];
            if (threshold == oldRatio || threshold == newRatio || threshold < oldRatio !== threshold < newRatio) {
                return true;
            }
        }
    };
    IntersectionObserver2.prototype._rootIsInDom = function() {
        return !this.root || containsDeep(document2, this.root);
    };
    IntersectionObserver2.prototype._rootContainsTarget = function(target) {
        var rootDoc = this.root && (this.root.ownerDocument || this.root) || document2;
        return containsDeep(rootDoc, target) && (!this.root || rootDoc == target.ownerDocument);
    };
    IntersectionObserver2.prototype._registerInstance = function() {
        if (registry.indexOf(this) < 0) {
            registry.push(this);
        }
    };
    IntersectionObserver2.prototype._unregisterInstance = function() {
        var index2 = registry.indexOf(this);
        if (index2 != -1) registry.splice(index2, 1);
    };
    function now() {
        return window.performance && performance.now && performance.now();
    }
    function throttle4(fn, timeout) {
        var timer = null;
        return function() {
            if (!timer) {
                timer = setTimeout(function() {
                    fn();
                    timer = null;
                }, timeout);
            }
        };
    }
    function addEvent(node, event, fn, opt_useCapture) {
        if (typeof node.addEventListener == "function") {
            node.addEventListener(event, fn, opt_useCapture || false);
        } else if (typeof node.attachEvent == "function") {
            node.attachEvent("on" + event, fn);
        }
    }
    function removeEvent(node, event, fn, opt_useCapture) {
        if (typeof node.removeEventListener == "function") {
            node.removeEventListener(event, fn, opt_useCapture || false);
        } else if (typeof node.detachEvent == "function") {
            node.detachEvent("on" + event, fn);
        }
    }
    function computeRectIntersection(rect1, rect2) {
        var top = Math.max(rect1.top, rect2.top);
        var bottom = Math.min(rect1.bottom, rect2.bottom);
        var left = Math.max(rect1.left, rect2.left);
        var right = Math.min(rect1.right, rect2.right);
        var width = right - left;
        var height = bottom - top;
        return width >= 0 && height >= 0 && {
            top,
            bottom,
            left,
            right,
            width,
            height
        } || null;
    }
    function getBoundingClientRect(el) {
        var rect;
        try {
            rect = el.getBoundingClientRect();
        } catch (err) {}
        if (!rect) return getEmptyRect();
        if (!(rect.width && rect.height)) {
            rect = {
                top: rect.top,
                right: rect.right,
                bottom: rect.bottom,
                left: rect.left,
                width: rect.right - rect.left,
                height: rect.bottom - rect.top
            };
        }
        return rect;
    }
    function getEmptyRect() {
        return {
            top: 0,
            bottom: 0,
            left: 0,
            right: 0,
            width: 0,
            height: 0
        };
    }
    function ensureDOMRect(rect) {
        if (!rect || "x" in rect) {
            return rect;
        }
        return {
            top: rect.top,
            y: rect.top,
            bottom: rect.bottom,
            left: rect.left,
            x: rect.left,
            right: rect.right,
            width: rect.width,
            height: rect.height
        };
    }
    function convertFromParentRect(parentBoundingRect, parentIntersectionRect) {
        var top = parentIntersectionRect.top - parentBoundingRect.top;
        var left = parentIntersectionRect.left - parentBoundingRect.left;
        return {
            top,
            left,
            height: parentIntersectionRect.height,
            width: parentIntersectionRect.width,
            bottom: top + parentIntersectionRect.height,
            right: left + parentIntersectionRect.width
        };
    }
    function containsDeep(parent, child) {
        var node = child;
        while(node){
            if (node == parent) return true;
            node = getParentNode(node);
        }
        return false;
    }
    function getParentNode(node) {
        var parent = node.parentNode;
        if (node.nodeType == /* DOCUMENT */ 9 && node != document2) {
            return getFrameElement(node);
        }
        if (parent && parent.assignedSlot) {
            parent = parent.assignedSlot.parentNode;
        }
        if (parent && parent.nodeType == 11 && parent.host) {
            return parent.host;
        }
        return parent;
    }
    function isDoc(node) {
        return node && node.nodeType === 9;
    }
    window.IntersectionObserver = IntersectionObserver2;
    window.IntersectionObserverEntry = IntersectionObserverEntry;
})();
// node_modules/ahooks/es/useInViewport/index.js
var import_react47 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useInViewport(target, options) {
    var _a = __read((0, import_react47.useState)(), 2), state = _a[0], setState = _a[1];
    var _b = __read((0, import_react47.useState)(), 2), ratio = _b[0], setRatio = _b[1];
    useEffectWithTarget_default(function() {
        var el = getTargetElement(target);
        if (!el) {
            return;
        }
        var observer2 = new IntersectionObserver(function(entries) {
            var e_1, _a2;
            try {
                for(var entries_1 = __values(entries), entries_1_1 = entries_1.next(); !entries_1_1.done; entries_1_1 = entries_1.next()){
                    var entry = entries_1_1.value;
                    setRatio(entry.intersectionRatio);
                    setState(entry.isIntersecting);
                }
            } catch (e_1_1) {
                e_1 = {
                    error: e_1_1
                };
            } finally{
                try {
                    if (entries_1_1 && !entries_1_1.done && (_a2 = entries_1.return)) _a2.call(entries_1);
                } finally{
                    if (e_1) throw e_1.error;
                }
            }
        }, __assign(__assign({}, options), {
            root: getTargetElement(options === null || options === void 0 ? void 0 : options.root)
        }));
        observer2.observe(el);
        return function() {
            observer2.disconnect();
        };
    }, [
        options === null || options === void 0 ? void 0 : options.rootMargin,
        options === null || options === void 0 ? void 0 : options.threshold
    ], target);
    return [
        state,
        ratio
    ];
}
var useInViewport_default = useInViewport;
// node_modules/ahooks/es/useIsomorphicLayoutEffect/index.js
var import_react48 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useIsomorphicLayoutEffect = isBrowser_default ? import_react48.useLayoutEffect : import_react48.useEffect;
var useIsomorphicLayoutEffect_default = useIsomorphicLayoutEffect;
// node_modules/ahooks/es/utils/useDeepCompareWithTarget.js
var import_react49 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useDeepCompareEffectWithTarget = function(effect, deps, target) {
    var ref = (0, import_react49.useRef)();
    var signalRef = (0, import_react49.useRef)(0);
    if (!depsEqual(deps, ref.current)) {
        ref.current = deps;
        signalRef.current += 1;
    }
    useEffectWithTarget_default(effect, [
        signalRef.current
    ], target);
};
var useDeepCompareWithTarget_default = useDeepCompareEffectWithTarget;
// node_modules/ahooks/es/utils/isAppleDevice.js
var isAppleDevice = /(mac|iphone|ipod|ipad)/i.test(typeof navigator !== "undefined" ? navigator === null || navigator === void 0 ? void 0 : navigator.platform : "");
var isAppleDevice_default = isAppleDevice;
// node_modules/ahooks/es/useKeyPress/index.js
var aliasKeyCodeMap = {
    "0": 48,
    "1": 49,
    "2": 50,
    "3": 51,
    "4": 52,
    "5": 53,
    "6": 54,
    "7": 55,
    "8": 56,
    "9": 57,
    backspace: 8,
    tab: 9,
    enter: 13,
    shift: 16,
    ctrl: 17,
    alt: 18,
    pausebreak: 19,
    capslock: 20,
    esc: 27,
    space: 32,
    pageup: 33,
    pagedown: 34,
    end: 35,
    home: 36,
    leftarrow: 37,
    uparrow: 38,
    rightarrow: 39,
    downarrow: 40,
    insert: 45,
    delete: 46,
    a: 65,
    b: 66,
    c: 67,
    d: 68,
    e: 69,
    f: 70,
    g: 71,
    h: 72,
    i: 73,
    j: 74,
    k: 75,
    l: 76,
    m: 77,
    n: 78,
    o: 79,
    p: 80,
    q: 81,
    r: 82,
    s: 83,
    t: 84,
    u: 85,
    v: 86,
    w: 87,
    x: 88,
    y: 89,
    z: 90,
    leftwindowkey: 91,
    rightwindowkey: 92,
    meta: isAppleDevice_default ? [
        91,
        93
    ] : [
        91,
        92
    ],
    selectkey: 93,
    numpad0: 96,
    numpad1: 97,
    numpad2: 98,
    numpad3: 99,
    numpad4: 100,
    numpad5: 101,
    numpad6: 102,
    numpad7: 103,
    numpad8: 104,
    numpad9: 105,
    multiply: 106,
    add: 107,
    subtract: 109,
    decimalpoint: 110,
    divide: 111,
    f1: 112,
    f2: 113,
    f3: 114,
    f4: 115,
    f5: 116,
    f6: 117,
    f7: 118,
    f8: 119,
    f9: 120,
    f10: 121,
    f11: 122,
    f12: 123,
    numlock: 144,
    scrolllock: 145,
    semicolon: 186,
    equalsign: 187,
    comma: 188,
    dash: 189,
    period: 190,
    forwardslash: 191,
    graveaccent: 192,
    openbracket: 219,
    backslash: 220,
    closebracket: 221,
    singlequote: 222
};
var modifierKey = {
    ctrl: function(event) {
        return event.ctrlKey;
    },
    shift: function(event) {
        return event.shiftKey;
    },
    alt: function(event) {
        return event.altKey;
    },
    meta: function(event) {
        if (event.type === "keyup") {
            return aliasKeyCodeMap.meta.includes(event.keyCode);
        }
        return event.metaKey;
    }
};
function countKeyByEvent(event) {
    var countOfModifier = Object.keys(modifierKey).reduce(function(total, key) {
        if (modifierKey[key](event)) {
            return total + 1;
        }
        return total;
    }, 0);
    return [
        16,
        17,
        18,
        91,
        92
    ].includes(event.keyCode) ? countOfModifier : countOfModifier + 1;
}
function genFilterKey(event, keyFilter, exactMatch) {
    var e_1, _a;
    if (!event.key) {
        return false;
    }
    if (isNumber(keyFilter)) {
        return event.keyCode === keyFilter;
    }
    var genArr = keyFilter.split(".");
    var genLen = 0;
    try {
        for(var genArr_1 = __values(genArr), genArr_1_1 = genArr_1.next(); !genArr_1_1.done; genArr_1_1 = genArr_1.next()){
            var key = genArr_1_1.value;
            var genModifier = modifierKey[key];
            var aliasKeyCode = aliasKeyCodeMap[key.toLowerCase()];
            if (genModifier && genModifier(event) || aliasKeyCode && aliasKeyCode === event.keyCode) {
                genLen++;
            }
        }
    } catch (e_1_1) {
        e_1 = {
            error: e_1_1
        };
    } finally{
        try {
            if (genArr_1_1 && !genArr_1_1.done && (_a = genArr_1.return)) _a.call(genArr_1);
        } finally{
            if (e_1) throw e_1.error;
        }
    }
    if (exactMatch) {
        return genLen === genArr.length && countKeyByEvent(event) === genArr.length;
    }
    return genLen === genArr.length;
}
function genKeyFormatter(keyFilter, exactMatch) {
    if (isFunction(keyFilter)) {
        return keyFilter;
    }
    if (isString(keyFilter) || isNumber(keyFilter)) {
        return function(event) {
            return genFilterKey(event, keyFilter, exactMatch);
        };
    }
    if (Array.isArray(keyFilter)) {
        return function(event) {
            return keyFilter.some(function(item) {
                return genFilterKey(event, item, exactMatch);
            });
        };
    }
    return function() {
        return Boolean(keyFilter);
    };
}
var defaultEvents = [
    "keydown"
];
function useKeyPress(keyFilter, eventHandler, option) {
    var _a = option || {}, _b = _a.events, events = _b === void 0 ? defaultEvents : _b, target = _a.target, _c = _a.exactMatch, exactMatch = _c === void 0 ? false : _c, _d = _a.useCapture, useCapture = _d === void 0 ? false : _d;
    var eventHandlerRef = useLatest_default(eventHandler);
    var keyFilterRef = useLatest_default(keyFilter);
    useDeepCompareWithTarget_default(function() {
        var e_2, _a2;
        var _b2;
        var el = getTargetElement(target, window);
        if (!el) {
            return;
        }
        var callbackHandler = function(event) {
            var _a3;
            var genGuard = genKeyFormatter(keyFilterRef.current, exactMatch);
            if (genGuard(event)) {
                return (_a3 = eventHandlerRef.current) === null || _a3 === void 0 ? void 0 : _a3.call(eventHandlerRef, event);
            }
        };
        try {
            for(var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()){
                var eventName = events_1_1.value;
                (_b2 = el === null || el === void 0 ? void 0 : el.addEventListener) === null || _b2 === void 0 ? void 0 : _b2.call(el, eventName, callbackHandler, useCapture);
            }
        } catch (e_2_1) {
            e_2 = {
                error: e_2_1
            };
        } finally{
            try {
                if (events_1_1 && !events_1_1.done && (_a2 = events_1.return)) _a2.call(events_1);
            } finally{
                if (e_2) throw e_2.error;
            }
        }
        return function() {
            var e_3, _a3;
            var _b3;
            try {
                for(var events_2 = __values(events), events_2_1 = events_2.next(); !events_2_1.done; events_2_1 = events_2.next()){
                    var eventName2 = events_2_1.value;
                    (_b3 = el === null || el === void 0 ? void 0 : el.removeEventListener) === null || _b3 === void 0 ? void 0 : _b3.call(el, eventName2, callbackHandler, useCapture);
                }
            } catch (e_3_1) {
                e_3 = {
                    error: e_3_1
                };
            } finally{
                try {
                    if (events_2_1 && !events_2_1.done && (_a3 = events_2.return)) _a3.call(events_2);
                } finally{
                    if (e_3) throw e_3.error;
                }
            }
        };
    }, [
        events
    ], target);
}
var useKeyPress_default = useKeyPress;
// node_modules/ahooks/es/createUseStorageState/index.js
var import_react50 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function createUseStorageState(getStorage) {
    function useStorageState(key, options) {
        if (options === void 0) {
            options = {};
        }
        var storage;
        var _a = options.onError, onError = _a === void 0 ? function(e) {
            console.error(e);
        } : _a;
        try {
            storage = getStorage();
        } catch (err) {
            onError(err);
        }
        var serializer = function(value) {
            if (options === null || options === void 0 ? void 0 : options.serializer) {
                return options === null || options === void 0 ? void 0 : options.serializer(value);
            }
            return JSON.stringify(value);
        };
        var deserializer = function(value) {
            if (options === null || options === void 0 ? void 0 : options.deserializer) {
                return options === null || options === void 0 ? void 0 : options.deserializer(value);
            }
            return JSON.parse(value);
        };
        function getStoredValue() {
            try {
                var raw = storage === null || storage === void 0 ? void 0 : storage.getItem(key);
                if (raw) {
                    return deserializer(raw);
                }
            } catch (e) {
                onError(e);
            }
            if (isFunction(options === null || options === void 0 ? void 0 : options.defaultValue)) {
                return options === null || options === void 0 ? void 0 : options.defaultValue();
            }
            return options === null || options === void 0 ? void 0 : options.defaultValue;
        }
        var _b = __read((0, import_react50.useState)(function() {
            return getStoredValue();
        }), 2), state = _b[0], setState = _b[1];
        useUpdateEffect_default(function() {
            setState(getStoredValue());
        }, [
            key
        ]);
        var updateState = function(value) {
            var currentState = isFunction(value) ? value(state) : value;
            setState(currentState);
            if (isUndef(currentState)) {
                storage === null || storage === void 0 ? void 0 : storage.removeItem(key);
            } else {
                try {
                    storage === null || storage === void 0 ? void 0 : storage.setItem(key, serializer(currentState));
                } catch (e) {
                    console.error(e);
                }
            }
        };
        return [
            state,
            useMemoizedFn_default(updateState)
        ];
    }
    return useStorageState;
}
// node_modules/ahooks/es/useLocalStorageState/index.js
var useLocalStorageState = createUseStorageState(function() {
    return isBrowser_default ? localStorage : void 0;
});
var useLocalStorageState_default = useLocalStorageState;
// node_modules/ahooks/es/useLockFn/index.js
var import_react51 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useLockFn(fn) {
    var _this = this;
    var lockRef = (0, import_react51.useRef)(false);
    return (0, import_react51.useCallback)(function() {
        var args = [];
        for(var _i = 0; _i < arguments.length; _i++){
            args[_i] = arguments[_i];
        }
        return __awaiter(_this, void 0, void 0, function() {
            var ret, e_1;
            return __generator(this, function(_a) {
                switch(_a.label){
                    case 0:
                        if (lockRef.current) return [
                            2
                        ];
                        lockRef.current = true;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([
                            1,
                            3,
                            ,
                            4
                        ]);
                        return [
                            4,
                            fn.apply(void 0, __spreadArray([], __read(args), false))
                        ];
                    case 2:
                        ret = _a.sent();
                        lockRef.current = false;
                        return [
                            2,
                            ret
                        ];
                    case 3:
                        e_1 = _a.sent();
                        lockRef.current = false;
                        throw e_1;
                    case 4:
                        return [
                            2
                        ];
                }
            });
        });
    }, [
        fn
    ]);
}
var useLockFn_default = useLockFn;
// node_modules/ahooks/es/useLongPress/index.js
var import_react52 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var touchSupported = isBrowser_default && // @ts-ignore
("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch);
function useLongPress(onLongPress, target, _a) {
    var _b = _a === void 0 ? {} : _a, _c = _b.delay, delay = _c === void 0 ? 300 : _c, moveThreshold = _b.moveThreshold, onClick = _b.onClick, onLongPressEnd = _b.onLongPressEnd;
    var onLongPressRef = useLatest_default(onLongPress);
    var onClickRef = useLatest_default(onClick);
    var onLongPressEndRef = useLatest_default(onLongPressEnd);
    var timerRef = (0, import_react52.useRef)();
    var isTriggeredRef = (0, import_react52.useRef)(false);
    var pervPositionRef = (0, import_react52.useRef)({
        x: 0,
        y: 0
    });
    var hasMoveThreshold = !!((moveThreshold === null || moveThreshold === void 0 ? void 0 : moveThreshold.x) && moveThreshold.x > 0 || (moveThreshold === null || moveThreshold === void 0 ? void 0 : moveThreshold.y) && moveThreshold.y > 0);
    useEffectWithTarget_default(function() {
        var targetElement = getTargetElement(target);
        if (!(targetElement === null || targetElement === void 0 ? void 0 : targetElement.addEventListener)) {
            return;
        }
        var overThreshold = function(event) {
            var _a2 = getClientPosition(event), clientX = _a2.clientX, clientY = _a2.clientY;
            var offsetX = Math.abs(clientX - pervPositionRef.current.x);
            var offsetY = Math.abs(clientY - pervPositionRef.current.y);
            return !!((moveThreshold === null || moveThreshold === void 0 ? void 0 : moveThreshold.x) && offsetX > moveThreshold.x || (moveThreshold === null || moveThreshold === void 0 ? void 0 : moveThreshold.y) && offsetY > moveThreshold.y);
        };
        function getClientPosition(event) {
            if (event instanceof TouchEvent) {
                return {
                    clientX: event.touches[0].clientX,
                    clientY: event.touches[0].clientY
                };
            }
            if (event instanceof MouseEvent) {
                return {
                    clientX: event.clientX,
                    clientY: event.clientY
                };
            }
            console.warn("Unsupported event type");
            return {
                clientX: 0,
                clientY: 0
            };
        }
        var onStart = function(event) {
            if (hasMoveThreshold) {
                var _a2 = getClientPosition(event), clientX = _a2.clientX, clientY = _a2.clientY;
                pervPositionRef.current.x = clientX;
                pervPositionRef.current.y = clientY;
            }
            timerRef.current = setTimeout(function() {
                onLongPressRef.current(event);
                isTriggeredRef.current = true;
            }, delay);
        };
        var onMove = function(event) {
            if (timerRef.current && overThreshold(event)) {
                clearInterval(timerRef.current);
                timerRef.current = void 0;
            }
        };
        var onEnd = function(event, shouldTriggerClick) {
            var _a2;
            if (shouldTriggerClick === void 0) {
                shouldTriggerClick = false;
            }
            if (timerRef.current) {
                clearTimeout(timerRef.current);
            }
            if (isTriggeredRef.current) {
                (_a2 = onLongPressEndRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(onLongPressEndRef, event);
            }
            if (shouldTriggerClick && !isTriggeredRef.current && onClickRef.current) {
                onClickRef.current(event);
            }
            isTriggeredRef.current = false;
        };
        var onEndWithClick = function(event) {
            return onEnd(event, true);
        };
        if (!touchSupported) {
            targetElement.addEventListener("mousedown", onStart);
            targetElement.addEventListener("mouseup", onEndWithClick);
            targetElement.addEventListener("mouseleave", onEnd);
            if (hasMoveThreshold) targetElement.addEventListener("mousemove", onMove);
        } else {
            targetElement.addEventListener("touchstart", onStart);
            targetElement.addEventListener("touchend", onEndWithClick);
            if (hasMoveThreshold) targetElement.addEventListener("touchmove", onMove);
        }
        return function() {
            if (timerRef.current) {
                clearTimeout(timerRef.current);
                isTriggeredRef.current = false;
            }
            if (!touchSupported) {
                targetElement.removeEventListener("mousedown", onStart);
                targetElement.removeEventListener("mouseup", onEndWithClick);
                targetElement.removeEventListener("mouseleave", onEnd);
                if (hasMoveThreshold) targetElement.removeEventListener("mousemove", onMove);
            } else {
                targetElement.removeEventListener("touchstart", onStart);
                targetElement.removeEventListener("touchend", onEndWithClick);
                if (hasMoveThreshold) targetElement.removeEventListener("touchmove", onMove);
            }
        };
    }, [], target);
}
var useLongPress_default = useLongPress;
// node_modules/ahooks/es/useMap/index.js
var import_react53 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useMap(initialValue) {
    var getInitValue = function() {
        return new Map(initialValue);
    };
    var _a = __read((0, import_react53.useState)(getInitValue), 2), map = _a[0], setMap = _a[1];
    var set = function(key, entry) {
        setMap(function(prev) {
            var temp = new Map(prev);
            temp.set(key, entry);
            return temp;
        });
    };
    var setAll = function(newMap) {
        setMap(new Map(newMap));
    };
    var remove = function(key) {
        setMap(function(prev) {
            var temp = new Map(prev);
            temp.delete(key);
            return temp;
        });
    };
    var reset = function() {
        return setMap(getInitValue());
    };
    var get = function(key) {
        return map.get(key);
    };
    return [
        map,
        {
            set: useMemoizedFn_default(set),
            setAll: useMemoizedFn_default(setAll),
            remove: useMemoizedFn_default(remove),
            reset: useMemoizedFn_default(reset),
            get: useMemoizedFn_default(get)
        }
    ];
}
var useMap_default = useMap;
// node_modules/ahooks/es/useRafState/index.js
var import_react54 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useRafState(initialState) {
    var ref = (0, import_react54.useRef)(0);
    var _a = __read((0, import_react54.useState)(initialState), 2), state = _a[0], setState = _a[1];
    var setRafState = (0, import_react54.useCallback)(function(value) {
        cancelAnimationFrame(ref.current);
        ref.current = requestAnimationFrame(function() {
            setState(value);
        });
    }, []);
    useUnmount_default(function() {
        cancelAnimationFrame(ref.current);
    });
    return [
        state,
        setRafState
    ];
}
var useRafState_default = useRafState;
// node_modules/ahooks/es/useMouse/index.js
var initState = {
    screenX: NaN,
    screenY: NaN,
    clientX: NaN,
    clientY: NaN,
    pageX: NaN,
    pageY: NaN,
    elementX: NaN,
    elementY: NaN,
    elementH: NaN,
    elementW: NaN,
    elementPosX: NaN,
    elementPosY: NaN
};
var useMouse_default = function(target) {
    var _a = __read(useRafState_default(initState), 2), state = _a[0], setState = _a[1];
    useEventListener_default("mousemove", function(event) {
        var screenX = event.screenX, screenY = event.screenY, clientX = event.clientX, clientY = event.clientY, pageX = event.pageX, pageY = event.pageY;
        var newState = {
            screenX,
            screenY,
            clientX,
            clientY,
            pageX,
            pageY,
            elementX: NaN,
            elementY: NaN,
            elementH: NaN,
            elementW: NaN,
            elementPosX: NaN,
            elementPosY: NaN
        };
        var targetElement = getTargetElement(target);
        if (targetElement) {
            var _a2 = targetElement.getBoundingClientRect(), left = _a2.left, top_1 = _a2.top, width = _a2.width, height = _a2.height;
            newState.elementPosX = left + window.pageXOffset;
            newState.elementPosY = top_1 + window.pageYOffset;
            newState.elementX = pageX - newState.elementPosX;
            newState.elementY = pageY - newState.elementPosY;
            newState.elementW = width;
            newState.elementH = height;
        }
        setState(newState);
    }, {
        target: function() {
            return document;
        }
    });
    return state;
};
// node_modules/ahooks/es/useNetwork/index.js
var import_react55 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var NetworkEventType;
(function(NetworkEventType2) {
    NetworkEventType2["ONLINE"] = "online";
    NetworkEventType2["OFFLINE"] = "offline";
    NetworkEventType2["CHANGE"] = "change";
})(NetworkEventType || (NetworkEventType = {}));
function getConnection() {
    var nav = navigator;
    if (!isObject(nav)) return null;
    return nav.connection || nav.mozConnection || nav.webkitConnection;
}
function getConnectionProperty() {
    var c = getConnection();
    if (!c) return {};
    return {
        rtt: c.rtt,
        type: c.type,
        saveData: c.saveData,
        downlink: c.downlink,
        downlinkMax: c.downlinkMax,
        effectiveType: c.effectiveType
    };
}
function useNetwork() {
    var _a = __read((0, import_react55.useState)(function() {
        return __assign({
            since: void 0,
            online: navigator === null || navigator === void 0 ? void 0 : navigator.onLine
        }, getConnectionProperty());
    }), 2), state = _a[0], setState = _a[1];
    (0, import_react55.useEffect)(function() {
        var onOnline = function() {
            setState(function(prevState) {
                return __assign(__assign({}, prevState), {
                    online: true,
                    since: /* @__PURE__ */ new Date()
                });
            });
        };
        var onOffline = function() {
            setState(function(prevState) {
                return __assign(__assign({}, prevState), {
                    online: false,
                    since: /* @__PURE__ */ new Date()
                });
            });
        };
        var onConnectionChange = function() {
            setState(function(prevState) {
                return __assign(__assign({}, prevState), getConnectionProperty());
            });
        };
        window.addEventListener(NetworkEventType.ONLINE, onOnline);
        window.addEventListener(NetworkEventType.OFFLINE, onOffline);
        var connection = getConnection();
        connection === null || connection === void 0 ? void 0 : connection.addEventListener(NetworkEventType.CHANGE, onConnectionChange);
        return function() {
            window.removeEventListener(NetworkEventType.ONLINE, onOnline);
            window.removeEventListener(NetworkEventType.OFFLINE, onOffline);
            connection === null || connection === void 0 ? void 0 : connection.removeEventListener(NetworkEventType.CHANGE, onConnectionChange);
        };
    }, []);
    return state;
}
var useNetwork_default = useNetwork;
// node_modules/ahooks/es/usePrevious/index.js
var import_react56 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var defaultShouldUpdate = function(a, b) {
    return !Object.is(a, b);
};
function usePrevious(state, shouldUpdate) {
    if (shouldUpdate === void 0) {
        shouldUpdate = defaultShouldUpdate;
    }
    var prevRef = (0, import_react56.useRef)();
    var curRef = (0, import_react56.useRef)();
    if (shouldUpdate(curRef.current, state)) {
        prevRef.current = curRef.current;
        curRef.current = state;
    }
    return prevRef.current;
}
var usePrevious_default = usePrevious;
// node_modules/ahooks/es/useRafInterval/index.js
var import_react57 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var setRafInterval = function(callback, delay) {
    if (delay === void 0) {
        delay = 0;
    }
    if (typeof requestAnimationFrame === "undefined") {
        return {
            id: setInterval(callback, delay)
        };
    }
    var start = /* @__PURE__ */ new Date().getTime();
    var handle = {
        id: 0
    };
    var loop = function() {
        var current = /* @__PURE__ */ new Date().getTime();
        if (current - start >= delay) {
            callback();
            start = /* @__PURE__ */ new Date().getTime();
        }
        handle.id = requestAnimationFrame(loop);
    };
    handle.id = requestAnimationFrame(loop);
    return handle;
};
function cancelAnimationFrameIsNotDefined(t) {
    return typeof cancelAnimationFrame === "undefined";
}
var clearRafInterval = function(handle) {
    if (cancelAnimationFrameIsNotDefined(handle.id)) {
        return clearInterval(handle.id);
    }
    cancelAnimationFrame(handle.id);
};
function useRafInterval(fn, delay, options) {
    var immediate = options === null || options === void 0 ? void 0 : options.immediate;
    var fnRef = useLatest_default(fn);
    var timerRef = (0, import_react57.useRef)();
    (0, import_react57.useEffect)(function() {
        if (!isNumber(delay) || delay < 0) return;
        if (immediate) {
            fnRef.current();
        }
        timerRef.current = setRafInterval(function() {
            fnRef.current();
        }, delay);
        return function() {
            if (timerRef.current) {
                clearRafInterval(timerRef.current);
            }
        };
    }, [
        delay
    ]);
    var clear = (0, import_react57.useCallback)(function() {
        if (timerRef.current) {
            clearRafInterval(timerRef.current);
        }
    }, []);
    return clear;
}
var useRafInterval_default = useRafInterval;
// node_modules/ahooks/es/useRafTimeout/index.js
var import_react58 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var setRafTimeout = function(callback, delay) {
    if (delay === void 0) {
        delay = 0;
    }
    if (typeof requestAnimationFrame === "undefined") {
        return {
            id: setTimeout(callback, delay)
        };
    }
    var handle = {
        id: 0
    };
    var startTime = /* @__PURE__ */ new Date().getTime();
    var loop = function() {
        var current = /* @__PURE__ */ new Date().getTime();
        if (current - startTime >= delay) {
            callback();
        } else {
            handle.id = requestAnimationFrame(loop);
        }
    };
    handle.id = requestAnimationFrame(loop);
    return handle;
};
function cancelAnimationFrameIsNotDefined2(t) {
    return typeof cancelAnimationFrame === "undefined";
}
var clearRafTimeout = function(handle) {
    if (cancelAnimationFrameIsNotDefined2(handle.id)) {
        return clearTimeout(handle.id);
    }
    cancelAnimationFrame(handle.id);
};
function useRafTimeout(fn, delay) {
    var fnRef = useLatest_default(fn);
    var timerRef = (0, import_react58.useRef)();
    (0, import_react58.useEffect)(function() {
        if (!isNumber(delay) || delay < 0) return;
        timerRef.current = setRafTimeout(function() {
            fnRef.current();
        }, delay);
        return function() {
            if (timerRef.current) {
                clearRafTimeout(timerRef.current);
            }
        };
    }, [
        delay
    ]);
    var clear = (0, import_react58.useCallback)(function() {
        if (timerRef.current) {
            clearRafTimeout(timerRef.current);
        }
    }, []);
    return clear;
}
var useRafTimeout_default = useRafTimeout;
// node_modules/ahooks/es/useReactive/index.js
var import_react59 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var import_isPlainObject = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)(require_isPlainObject());
var proxyMap = /* @__PURE__ */ new WeakMap();
var rawMap = /* @__PURE__ */ new WeakMap();
function observer(initialVal, cb) {
    var existingProxy = proxyMap.get(initialVal);
    if (existingProxy) {
        return existingProxy;
    }
    if (rawMap.has(initialVal)) {
        return initialVal;
    }
    var proxy = new Proxy(initialVal, {
        get: function(target, key, receiver) {
            var res = Reflect.get(target, key, receiver);
            return (0, import_isPlainObject.default)(res) || Array.isArray(res) ? observer(res, cb) : res;
        },
        set: function(target, key, val) {
            var ret = Reflect.set(target, key, val);
            cb();
            return ret;
        },
        deleteProperty: function(target, key) {
            var ret = Reflect.deleteProperty(target, key);
            cb();
            return ret;
        }
    });
    proxyMap.set(initialVal, proxy);
    rawMap.set(proxy, initialVal);
    return proxy;
}
function useReactive(initialState) {
    var update = useUpdate_default();
    var stateRef = (0, import_react59.useRef)(initialState);
    var state = useCreation(function() {
        return observer(stateRef.current, function() {
            update();
        });
    }, []);
    return state;
}
var useReactive_default = useReactive;
// node_modules/ahooks/es/useResetState/index.js
var import_react60 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useResetState = function(initialState) {
    var _a = __read((0, import_react60.useState)(initialState), 2), state = _a[0], setState = _a[1];
    var resetState = useMemoizedFn_default(function() {
        setState(initialState);
    });
    return [
        state,
        setState,
        resetState
    ];
};
var useResetState_default = useResetState;
// node_modules/ahooks/es/useResponsive/index.js
var import_react61 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var subscribers = /* @__PURE__ */ new Set();
var info;
var responsiveConfig = {
    xs: 0,
    sm: 576,
    md: 768,
    lg: 992,
    xl: 1200
};
function handleResize() {
    var e_1, _a;
    var oldInfo = info;
    calculate();
    if (oldInfo === info) return;
    try {
        for(var subscribers_1 = __values(subscribers), subscribers_1_1 = subscribers_1.next(); !subscribers_1_1.done; subscribers_1_1 = subscribers_1.next()){
            var subscriber = subscribers_1_1.value;
            subscriber();
        }
    } catch (e_1_1) {
        e_1 = {
            error: e_1_1
        };
    } finally{
        try {
            if (subscribers_1_1 && !subscribers_1_1.done && (_a = subscribers_1.return)) _a.call(subscribers_1);
        } finally{
            if (e_1) throw e_1.error;
        }
    }
}
var listening = false;
function calculate() {
    var e_2, _a;
    var width = window.innerWidth;
    var newInfo = {};
    var shouldUpdate = false;
    try {
        for(var _b = __values(Object.keys(responsiveConfig)), _c = _b.next(); !_c.done; _c = _b.next()){
            var key = _c.value;
            newInfo[key] = width >= responsiveConfig[key];
            if (newInfo[key] !== info[key]) {
                shouldUpdate = true;
            }
        }
    } catch (e_2_1) {
        e_2 = {
            error: e_2_1
        };
    } finally{
        try {
            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
        } finally{
            if (e_2) throw e_2.error;
        }
    }
    if (shouldUpdate) {
        info = newInfo;
    }
}
function configResponsive(config) {
    responsiveConfig = config;
    if (info) calculate();
}
function useResponsive() {
    if (isBrowser_default && !listening) {
        info = {};
        calculate();
        window.addEventListener("resize", handleResize);
        listening = true;
    }
    var _a = __read((0, import_react61.useState)(info), 2), state = _a[0], setState = _a[1];
    (0, import_react61.useEffect)(function() {
        if (!isBrowser_default) return;
        if (!listening) {
            window.addEventListener("resize", handleResize);
        }
        var subscriber = function() {
            setState(info);
        };
        subscribers.add(subscriber);
        return function() {
            subscribers.delete(subscriber);
            if (subscribers.size === 0) {
                window.removeEventListener("resize", handleResize);
                listening = false;
            }
        };
    }, []);
    return state;
}
// node_modules/ahooks/es/useSafeState/index.js
var import_react63 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/useUnmountedRef/index.js
var import_react62 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useUnmountedRef = function() {
    var unmountedRef = (0, import_react62.useRef)(false);
    (0, import_react62.useEffect)(function() {
        unmountedRef.current = false;
        return function() {
            unmountedRef.current = true;
        };
    }, []);
    return unmountedRef;
};
var useUnmountedRef_default = useUnmountedRef;
// node_modules/ahooks/es/useSafeState/index.js
function useSafeState(initialState) {
    var unmountedRef = useUnmountedRef_default();
    var _a = __read((0, import_react63.useState)(initialState), 2), state = _a[0], setState = _a[1];
    var setCurrentState = (0, import_react63.useCallback)(function(currentState) {
        if (unmountedRef.current) return;
        setState(currentState);
    }, []);
    return [
        state,
        setCurrentState
    ];
}
var useSafeState_default = useSafeState;
// node_modules/ahooks/es/useScroll/index.js
function useScroll(target, shouldUpdate) {
    if (shouldUpdate === void 0) {
        shouldUpdate = function() {
            return true;
        };
    }
    var _a = __read(useRafState_default(), 2), position = _a[0], setPosition = _a[1];
    var shouldUpdateRef = useLatest_default(shouldUpdate);
    useEffectWithTarget_default(function() {
        var el = getTargetElement(target, document);
        if (!el) {
            return;
        }
        var updatePosition = function() {
            var newPosition;
            if (el === document) {
                if (document.scrollingElement) {
                    newPosition = {
                        left: document.scrollingElement.scrollLeft,
                        top: document.scrollingElement.scrollTop
                    };
                } else {
                    newPosition = {
                        left: Math.max(window.pageXOffset, document.documentElement.scrollLeft, document.body.scrollLeft),
                        top: Math.max(window.pageYOffset, document.documentElement.scrollTop, document.body.scrollTop)
                    };
                }
            } else {
                newPosition = {
                    left: el.scrollLeft,
                    top: el.scrollTop
                };
            }
            if (shouldUpdateRef.current(newPosition)) {
                setPosition(newPosition);
            }
        };
        updatePosition();
        el.addEventListener("scroll", updatePosition);
        return function() {
            el.removeEventListener("scroll", updatePosition);
        };
    }, [], target);
    return position;
}
var useScroll_default = useScroll;
// node_modules/ahooks/es/useSelections/index.js
var import_react64 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useSelections(items, defaultSelected) {
    if (defaultSelected === void 0) {
        defaultSelected = [];
    }
    var _a = __read((0, import_react64.useState)(defaultSelected), 2), selected = _a[0], setSelected = _a[1];
    var selectedSet = (0, import_react64.useMemo)(function() {
        return new Set(selected);
    }, [
        selected
    ]);
    var isSelected = function(item) {
        return selectedSet.has(item);
    };
    var select = function(item) {
        selectedSet.add(item);
        return setSelected(Array.from(selectedSet));
    };
    var unSelect = function(item) {
        selectedSet.delete(item);
        return setSelected(Array.from(selectedSet));
    };
    var toggle = function(item) {
        if (isSelected(item)) {
            unSelect(item);
        } else {
            select(item);
        }
    };
    var selectAll = function() {
        items.forEach(function(o) {
            selectedSet.add(o);
        });
        setSelected(Array.from(selectedSet));
    };
    var unSelectAll = function() {
        items.forEach(function(o) {
            selectedSet.delete(o);
        });
        setSelected(Array.from(selectedSet));
    };
    var noneSelected = (0, import_react64.useMemo)(function() {
        return items.every(function(o) {
            return !selectedSet.has(o);
        });
    }, [
        items,
        selectedSet
    ]);
    var allSelected = (0, import_react64.useMemo)(function() {
        return items.every(function(o) {
            return selectedSet.has(o);
        }) && !noneSelected;
    }, [
        items,
        selectedSet,
        noneSelected
    ]);
    var partiallySelected = (0, import_react64.useMemo)(function() {
        return !noneSelected && !allSelected;
    }, [
        noneSelected,
        allSelected
    ]);
    var toggleAll = function() {
        return allSelected ? unSelectAll() : selectAll();
    };
    return {
        selected,
        noneSelected,
        allSelected,
        partiallySelected,
        setSelected,
        isSelected,
        select: useMemoizedFn_default(select),
        unSelect: useMemoizedFn_default(unSelect),
        toggle: useMemoizedFn_default(toggle),
        selectAll: useMemoizedFn_default(selectAll),
        unSelectAll: useMemoizedFn_default(unSelectAll),
        toggleAll: useMemoizedFn_default(toggleAll)
    };
}
// node_modules/ahooks/es/useSessionStorageState/index.js
var useSessionStorageState = createUseStorageState(function() {
    return isBrowser_default ? sessionStorage : void 0;
});
var useSessionStorageState_default = useSessionStorageState;
// node_modules/ahooks/es/useSet/index.js
var import_react65 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useSet(initialValue) {
    var getInitValue = function() {
        return new Set(initialValue);
    };
    var _a = __read((0, import_react65.useState)(getInitValue), 2), set = _a[0], setSet = _a[1];
    var add = function(key) {
        if (set.has(key)) {
            return;
        }
        setSet(function(prevSet) {
            var temp = new Set(prevSet);
            temp.add(key);
            return temp;
        });
    };
    var remove = function(key) {
        if (!set.has(key)) {
            return;
        }
        setSet(function(prevSet) {
            var temp = new Set(prevSet);
            temp.delete(key);
            return temp;
        });
    };
    var reset = function() {
        return setSet(getInitValue());
    };
    return [
        set,
        {
            add: useMemoizedFn_default(add),
            remove: useMemoizedFn_default(remove),
            reset: useMemoizedFn_default(reset)
        }
    ];
}
var useSet_default = useSet;
// node_modules/ahooks/es/useSetState/index.js
var import_react66 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useSetState = function(initialState) {
    var _a = __read((0, import_react66.useState)(initialState), 2), state = _a[0], setState = _a[1];
    var setMergeState = (0, import_react66.useCallback)(function(patch) {
        setState(function(prevState) {
            var newState = isFunction(patch) ? patch(prevState) : patch;
            return newState ? __assign(__assign({}, prevState), newState) : prevState;
        });
    }, []);
    return [
        state,
        setMergeState
    ];
};
var useSetState_default = useSetState;
// node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js
var MapShim = function() {
    if (typeof Map !== "undefined") {
        return Map;
    }
    function getIndex(arr, key) {
        var result = -1;
        arr.some(function(entry, index2) {
            if (entry[0] === key) {
                result = index2;
                return true;
            }
            return false;
        });
        return result;
    }
    return /** @class */ function() {
        function class_1() {
            this.__entries__ = [];
        }
        Object.defineProperty(class_1.prototype, "size", {
            /**
         * @returns {boolean}
         */ get: function() {
                return this.__entries__.length;
            },
            enumerable: true,
            configurable: true
        });
        class_1.prototype.get = function(key) {
            var index2 = getIndex(this.__entries__, key);
            var entry = this.__entries__[index2];
            return entry && entry[1];
        };
        class_1.prototype.set = function(key, value) {
            var index2 = getIndex(this.__entries__, key);
            if (~index2) {
                this.__entries__[index2][1] = value;
            } else {
                this.__entries__.push([
                    key,
                    value
                ]);
            }
        };
        class_1.prototype.delete = function(key) {
            var entries = this.__entries__;
            var index2 = getIndex(entries, key);
            if (~index2) {
                entries.splice(index2, 1);
            }
        };
        class_1.prototype.has = function(key) {
            return !!~getIndex(this.__entries__, key);
        };
        class_1.prototype.clear = function() {
            this.__entries__.splice(0);
        };
        class_1.prototype.forEach = function(callback, ctx) {
            if (ctx === void 0) {
                ctx = null;
            }
            for(var _i = 0, _a = this.__entries__; _i < _a.length; _i++){
                var entry = _a[_i];
                callback.call(ctx, entry[1], entry[0]);
            }
        };
        return class_1;
    }();
}();
var isBrowser2 = typeof window !== "undefined" && typeof document !== "undefined" && window.document === document;
var global$1 = function() {
    if (typeof __webpack_require__.g !== "undefined" && __webpack_require__.g.Math === Math) {
        return __webpack_require__.g;
    }
    if (typeof self !== "undefined" && self.Math === Math) {
        return self;
    }
    if (typeof window !== "undefined" && window.Math === Math) {
        return window;
    }
    return Function("return this")();
}();
var requestAnimationFrame$1 = function() {
    if (typeof requestAnimationFrame === "function") {
        return requestAnimationFrame.bind(global$1);
    }
    return function(callback) {
        return setTimeout(function() {
            return callback(Date.now());
        }, 1e3 / 60);
    };
}();
var trailingTimeout = 2;
function throttle2(callback, delay) {
    var leadingCall = false, trailingCall = false, lastCallTime = 0;
    function resolvePending() {
        if (leadingCall) {
            leadingCall = false;
            callback();
        }
        if (trailingCall) {
            proxy();
        }
    }
    function timeoutCallback() {
        requestAnimationFrame$1(resolvePending);
    }
    function proxy() {
        var timeStamp = Date.now();
        if (leadingCall) {
            if (timeStamp - lastCallTime < trailingTimeout) {
                return;
            }
            trailingCall = true;
        } else {
            leadingCall = true;
            trailingCall = false;
            setTimeout(timeoutCallback, delay);
        }
        lastCallTime = timeStamp;
    }
    return proxy;
}
var REFRESH_DELAY = 20;
var transitionKeys = [
    "top",
    "right",
    "bottom",
    "left",
    "width",
    "height",
    "size",
    "weight"
];
var mutationObserverSupported = typeof MutationObserver !== "undefined";
var ResizeObserverController = /** @class */ function() {
    function ResizeObserverController2() {
        this.connected_ = false;
        this.mutationEventsAdded_ = false;
        this.mutationsObserver_ = null;
        this.observers_ = [];
        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);
        this.refresh = throttle2(this.refresh.bind(this), REFRESH_DELAY);
    }
    ResizeObserverController2.prototype.addObserver = function(observer2) {
        if (!~this.observers_.indexOf(observer2)) {
            this.observers_.push(observer2);
        }
        if (!this.connected_) {
            this.connect_();
        }
    };
    ResizeObserverController2.prototype.removeObserver = function(observer2) {
        var observers2 = this.observers_;
        var index2 = observers2.indexOf(observer2);
        if (~index2) {
            observers2.splice(index2, 1);
        }
        if (!observers2.length && this.connected_) {
            this.disconnect_();
        }
    };
    ResizeObserverController2.prototype.refresh = function() {
        var changesDetected = this.updateObservers_();
        if (changesDetected) {
            this.refresh();
        }
    };
    ResizeObserverController2.prototype.updateObservers_ = function() {
        var activeObservers = this.observers_.filter(function(observer2) {
            return observer2.gatherActive(), observer2.hasActive();
        });
        activeObservers.forEach(function(observer2) {
            return observer2.broadcastActive();
        });
        return activeObservers.length > 0;
    };
    ResizeObserverController2.prototype.connect_ = function() {
        if (!isBrowser2 || this.connected_) {
            return;
        }
        document.addEventListener("transitionend", this.onTransitionEnd_);
        window.addEventListener("resize", this.refresh);
        if (mutationObserverSupported) {
            this.mutationsObserver_ = new MutationObserver(this.refresh);
            this.mutationsObserver_.observe(document, {
                attributes: true,
                childList: true,
                characterData: true,
                subtree: true
            });
        } else {
            document.addEventListener("DOMSubtreeModified", this.refresh);
            this.mutationEventsAdded_ = true;
        }
        this.connected_ = true;
    };
    ResizeObserverController2.prototype.disconnect_ = function() {
        if (!isBrowser2 || !this.connected_) {
            return;
        }
        document.removeEventListener("transitionend", this.onTransitionEnd_);
        window.removeEventListener("resize", this.refresh);
        if (this.mutationsObserver_) {
            this.mutationsObserver_.disconnect();
        }
        if (this.mutationEventsAdded_) {
            document.removeEventListener("DOMSubtreeModified", this.refresh);
        }
        this.mutationsObserver_ = null;
        this.mutationEventsAdded_ = false;
        this.connected_ = false;
    };
    ResizeObserverController2.prototype.onTransitionEnd_ = function(_a) {
        var _b = _a.propertyName, propertyName = _b === void 0 ? "" : _b;
        var isReflowProperty = transitionKeys.some(function(key) {
            return !!~propertyName.indexOf(key);
        });
        if (isReflowProperty) {
            this.refresh();
        }
    };
    ResizeObserverController2.getInstance = function() {
        if (!this.instance_) {
            this.instance_ = new ResizeObserverController2();
        }
        return this.instance_;
    };
    ResizeObserverController2.instance_ = null;
    return ResizeObserverController2;
}();
var defineConfigurable = function(target, props) {
    for(var _i = 0, _a = Object.keys(props); _i < _a.length; _i++){
        var key = _a[_i];
        Object.defineProperty(target, key, {
            value: props[key],
            enumerable: false,
            writable: false,
            configurable: true
        });
    }
    return target;
};
var getWindowOf = function(target) {
    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;
    return ownerGlobal || global$1;
};
var emptyRect = createRectInit(0, 0, 0, 0);
function toFloat(value) {
    return parseFloat(value) || 0;
}
function getBordersSize(styles) {
    var positions = [];
    for(var _i = 1; _i < arguments.length; _i++){
        positions[_i - 1] = arguments[_i];
    }
    return positions.reduce(function(size, position) {
        var value = styles["border-" + position + "-width"];
        return size + toFloat(value);
    }, 0);
}
function getPaddings(styles) {
    var positions = [
        "top",
        "right",
        "bottom",
        "left"
    ];
    var paddings = {};
    for(var _i = 0, positions_1 = positions; _i < positions_1.length; _i++){
        var position = positions_1[_i];
        var value = styles["padding-" + position];
        paddings[position] = toFloat(value);
    }
    return paddings;
}
function getSVGContentRect(target) {
    var bbox = target.getBBox();
    return createRectInit(0, 0, bbox.width, bbox.height);
}
function getHTMLElementContentRect(target) {
    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;
    if (!clientWidth && !clientHeight) {
        return emptyRect;
    }
    var styles = getWindowOf(target).getComputedStyle(target);
    var paddings = getPaddings(styles);
    var horizPad = paddings.left + paddings.right;
    var vertPad = paddings.top + paddings.bottom;
    var width = toFloat(styles.width), height = toFloat(styles.height);
    if (styles.boxSizing === "border-box") {
        if (Math.round(width + horizPad) !== clientWidth) {
            width -= getBordersSize(styles, "left", "right") + horizPad;
        }
        if (Math.round(height + vertPad) !== clientHeight) {
            height -= getBordersSize(styles, "top", "bottom") + vertPad;
        }
    }
    if (!isDocumentElement(target)) {
        var vertScrollbar = Math.round(width + horizPad) - clientWidth;
        var horizScrollbar = Math.round(height + vertPad) - clientHeight;
        if (Math.abs(vertScrollbar) !== 1) {
            width -= vertScrollbar;
        }
        if (Math.abs(horizScrollbar) !== 1) {
            height -= horizScrollbar;
        }
    }
    return createRectInit(paddings.left, paddings.top, width, height);
}
var isSVGGraphicsElement = function() {
    if (typeof SVGGraphicsElement !== "undefined") {
        return function(target) {
            return target instanceof getWindowOf(target).SVGGraphicsElement;
        };
    }
    return function(target) {
        return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === "function";
    };
}();
function isDocumentElement(target) {
    return target === getWindowOf(target).document.documentElement;
}
function getContentRect(target) {
    if (!isBrowser2) {
        return emptyRect;
    }
    if (isSVGGraphicsElement(target)) {
        return getSVGContentRect(target);
    }
    return getHTMLElementContentRect(target);
}
function createReadOnlyRect(_a) {
    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;
    var Constr = typeof DOMRectReadOnly !== "undefined" ? DOMRectReadOnly : Object;
    var rect = Object.create(Constr.prototype);
    defineConfigurable(rect, {
        x,
        y,
        width,
        height,
        top: y,
        right: x + width,
        bottom: height + y,
        left: x
    });
    return rect;
}
function createRectInit(x, y, width, height) {
    return {
        x,
        y,
        width,
        height
    };
}
var ResizeObservation = /** @class */ function() {
    function ResizeObservation2(target) {
        this.broadcastWidth = 0;
        this.broadcastHeight = 0;
        this.contentRect_ = createRectInit(0, 0, 0, 0);
        this.target = target;
    }
    ResizeObservation2.prototype.isActive = function() {
        var rect = getContentRect(this.target);
        this.contentRect_ = rect;
        return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;
    };
    ResizeObservation2.prototype.broadcastRect = function() {
        var rect = this.contentRect_;
        this.broadcastWidth = rect.width;
        this.broadcastHeight = rect.height;
        return rect;
    };
    return ResizeObservation2;
}();
var ResizeObserverEntry = /** @class */ /* @__PURE__ */ function() {
    function ResizeObserverEntry2(target, rectInit) {
        var contentRect = createReadOnlyRect(rectInit);
        defineConfigurable(this, {
            target,
            contentRect
        });
    }
    return ResizeObserverEntry2;
}();
var ResizeObserverSPI = /** @class */ function() {
    function ResizeObserverSPI2(callback, controller, callbackCtx) {
        this.activeObservations_ = [];
        this.observations_ = new MapShim();
        if (typeof callback !== "function") {
            throw new TypeError("The callback provided as parameter 1 is not a function.");
        }
        this.callback_ = callback;
        this.controller_ = controller;
        this.callbackCtx_ = callbackCtx;
    }
    ResizeObserverSPI2.prototype.observe = function(target) {
        if (!arguments.length) {
            throw new TypeError("1 argument required, but only 0 present.");
        }
        if (typeof Element === "undefined" || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        if (observations.has(target)) {
            return;
        }
        observations.set(target, new ResizeObservation(target));
        this.controller_.addObserver(this);
        this.controller_.refresh();
    };
    ResizeObserverSPI2.prototype.unobserve = function(target) {
        if (!arguments.length) {
            throw new TypeError("1 argument required, but only 0 present.");
        }
        if (typeof Element === "undefined" || !(Element instanceof Object)) {
            return;
        }
        if (!(target instanceof getWindowOf(target).Element)) {
            throw new TypeError('parameter 1 is not of type "Element".');
        }
        var observations = this.observations_;
        if (!observations.has(target)) {
            return;
        }
        observations.delete(target);
        if (!observations.size) {
            this.controller_.removeObserver(this);
        }
    };
    ResizeObserverSPI2.prototype.disconnect = function() {
        this.clearActive();
        this.observations_.clear();
        this.controller_.removeObserver(this);
    };
    ResizeObserverSPI2.prototype.gatherActive = function() {
        var _this = this;
        this.clearActive();
        this.observations_.forEach(function(observation) {
            if (observation.isActive()) {
                _this.activeObservations_.push(observation);
            }
        });
    };
    ResizeObserverSPI2.prototype.broadcastActive = function() {
        if (!this.hasActive()) {
            return;
        }
        var ctx = this.callbackCtx_;
        var entries = this.activeObservations_.map(function(observation) {
            return new ResizeObserverEntry(observation.target, observation.broadcastRect());
        });
        this.callback_.call(ctx, entries, ctx);
        this.clearActive();
    };
    ResizeObserverSPI2.prototype.clearActive = function() {
        this.activeObservations_.splice(0);
    };
    ResizeObserverSPI2.prototype.hasActive = function() {
        return this.activeObservations_.length > 0;
    };
    return ResizeObserverSPI2;
}();
var observers = typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : new MapShim();
var ResizeObserver = /** @class */ /* @__PURE__ */ function() {
    function ResizeObserver2(callback) {
        if (!(this instanceof ResizeObserver2)) {
            throw new TypeError("Cannot call a class as a function.");
        }
        if (!arguments.length) {
            throw new TypeError("1 argument required, but only 0 present.");
        }
        var controller = ResizeObserverController.getInstance();
        var observer2 = new ResizeObserverSPI(callback, controller, this);
        observers.set(this, observer2);
    }
    return ResizeObserver2;
}();
[
    "observe",
    "unobserve",
    "disconnect"
].forEach(function(method) {
    ResizeObserver.prototype[method] = function() {
        var _a;
        return (_a = observers.get(this))[method].apply(_a, arguments);
    };
});
var index = function() {
    if (typeof global$1.ResizeObserver !== "undefined") {
        return global$1.ResizeObserver;
    }
    return ResizeObserver;
}();
var ResizeObserver_es_default = index;
// node_modules/ahooks/es/utils/useLayoutEffectWithTarget.js
var import_react67 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useEffectWithTarget2 = createEffectWithTarget_default(import_react67.useLayoutEffect);
var useLayoutEffectWithTarget_default = useEffectWithTarget2;
// node_modules/ahooks/es/utils/useIsomorphicLayoutEffectWithTarget.js
var useIsomorphicLayoutEffectWithTarget = isBrowser_default ? useLayoutEffectWithTarget_default : useEffectWithTarget_default;
var useIsomorphicLayoutEffectWithTarget_default = useIsomorphicLayoutEffectWithTarget;
// node_modules/ahooks/es/useSize/index.js
function useSize(target) {
    var _a = __read(useRafState_default(function() {
        var el = getTargetElement(target);
        return el ? {
            width: el.clientWidth,
            height: el.clientHeight
        } : void 0;
    }), 2), state = _a[0], setState = _a[1];
    useIsomorphicLayoutEffectWithTarget_default(function() {
        var el = getTargetElement(target);
        if (!el) {
            return;
        }
        var resizeObserver = new ResizeObserver_es_default(function(entries) {
            entries.forEach(function(entry) {
                var _a2 = entry.target, clientWidth = _a2.clientWidth, clientHeight = _a2.clientHeight;
                setState({
                    width: clientWidth,
                    height: clientHeight
                });
            });
        });
        resizeObserver.observe(el);
        return function() {
            resizeObserver.disconnect();
        };
    }, [], target);
    return state;
}
var useSize_default = useSize;
// node_modules/ahooks/es/useTextSelection/index.js
var import_react68 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var initRect = {
    top: NaN,
    left: NaN,
    bottom: NaN,
    right: NaN,
    height: NaN,
    width: NaN
};
var initState2 = __assign({
    text: ""
}, initRect);
function getRectFromSelection(selection) {
    if (!selection) {
        return initRect;
    }
    if (selection.rangeCount < 1) {
        return initRect;
    }
    var range = selection.getRangeAt(0);
    var _a = range.getBoundingClientRect(), height = _a.height, width = _a.width, top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;
    return {
        height,
        width,
        top,
        left,
        right,
        bottom
    };
}
function useTextSelection(target) {
    var _a = __read((0, import_react68.useState)(initState2), 2), state = _a[0], setState = _a[1];
    var stateRef = (0, import_react68.useRef)(state);
    var isInRangeRef = (0, import_react68.useRef)(false);
    stateRef.current = state;
    useEffectWithTarget_default(function() {
        var el = getTargetElement(target, document);
        if (!el) {
            return;
        }
        var mouseupHandler = function() {
            var selObj = null;
            var text = "";
            var rect = initRect;
            if (!window.getSelection) return;
            selObj = window.getSelection();
            text = selObj ? selObj.toString() : "";
            if (text && isInRangeRef.current) {
                rect = getRectFromSelection(selObj);
                setState(__assign(__assign(__assign({}, state), {
                    text
                }), rect));
            }
        };
        var mousedownHandler = function(e) {
            if (!window.getSelection) return;
            if (stateRef.current.text) {
                setState(__assign({}, initState2));
            }
            isInRangeRef.current = false;
            var selObj = window.getSelection();
            if (!selObj) return;
            selObj.removeAllRanges();
            isInRangeRef.current = el.contains(e.target);
        };
        el.addEventListener("mouseup", mouseupHandler);
        document.addEventListener("mousedown", mousedownHandler);
        return function() {
            el.removeEventListener("mouseup", mouseupHandler);
            document.removeEventListener("mousedown", mousedownHandler);
        };
    }, [], target);
    return state;
}
var useTextSelection_default = useTextSelection;
// node_modules/ahooks/es/useThrottle/index.js
var import_react70 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
// node_modules/ahooks/es/useThrottleFn/index.js
var import_throttle2 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)(require_throttle());
var import_react69 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useThrottleFn(fn, options) {
    var _a;
    if (isDev_default) {
        if (!isFunction(fn)) {
            console.error("useThrottleFn expected parameter is a function, got ".concat(typeof fn));
        }
    }
    var fnRef = useLatest_default(fn);
    var wait = (_a = options === null || options === void 0 ? void 0 : options.wait) !== null && _a !== void 0 ? _a : 1e3;
    var throttled = (0, import_react69.useMemo)(function() {
        return (0, import_throttle2.default)(function() {
            var args = [];
            for(var _i = 0; _i < arguments.length; _i++){
                args[_i] = arguments[_i];
            }
            return fnRef.current.apply(fnRef, __spreadArray([], __read(args), false));
        }, wait, options);
    }, []);
    useUnmount_default(function() {
        throttled.cancel();
    });
    return {
        run: throttled,
        cancel: throttled.cancel,
        flush: throttled.flush
    };
}
var useThrottleFn_default = useThrottleFn;
// node_modules/ahooks/es/useThrottle/index.js
function useThrottle(value, options) {
    var _a = __read((0, import_react70.useState)(value), 2), throttled = _a[0], setThrottled = _a[1];
    var run = useThrottleFn_default(function() {
        setThrottled(value);
    }, options).run;
    (0, import_react70.useEffect)(function() {
        run();
    }, [
        value
    ]);
    return throttled;
}
var useThrottle_default = useThrottle;
// node_modules/ahooks/es/useThrottleEffect/index.js
var import_react71 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useThrottleEffect(effect, deps, options) {
    var _a = __read((0, import_react71.useState)({}), 2), flag = _a[0], setFlag = _a[1];
    var run = useThrottleFn_default(function() {
        setFlag({});
    }, options).run;
    (0, import_react71.useEffect)(function() {
        return run();
    }, deps);
    useUpdateEffect_default(effect, [
        flag
    ]);
}
var useThrottleEffect_default = useThrottleEffect;
// node_modules/ahooks/es/useTimeout/index.js
var import_react72 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useTimeout = function(fn, delay) {
    var timerCallback = useMemoizedFn_default(fn);
    var timerRef = (0, import_react72.useRef)(null);
    var clear = (0, import_react72.useCallback)(function() {
        if (timerRef.current) {
            clearTimeout(timerRef.current);
        }
    }, []);
    (0, import_react72.useEffect)(function() {
        if (!isNumber(delay) || delay < 0) {
            return;
        }
        timerRef.current = setTimeout(timerCallback, delay);
        return clear;
    }, [
        delay
    ]);
    return clear;
};
var useTimeout_default = useTimeout;
// node_modules/ahooks/es/useTitle/index.js
var import_react73 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var DEFAULT_OPTIONS = {
    restoreOnUnmount: false
};
function useTitle(title, options) {
    if (options === void 0) {
        options = DEFAULT_OPTIONS;
    }
    var titleRef = (0, import_react73.useRef)(isBrowser_default ? document.title : "");
    (0, import_react73.useEffect)(function() {
        document.title = title;
    }, [
        title
    ]);
    useUnmount_default(function() {
        if (options.restoreOnUnmount) {
            document.title = titleRef.current;
        }
    });
}
var useTitle_default = useTitle;
// node_modules/ahooks/es/useTrackedEffect/index.js
var import_react74 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var diffTwoDeps = function(deps1, deps2) {
    return deps1 ? deps1.map(function(_ele, idx) {
        return !Object.is(deps1[idx], deps2 === null || deps2 === void 0 ? void 0 : deps2[idx]) ? idx : -1;
    }).filter(function(ele) {
        return ele >= 0;
    }) : deps2 ? deps2.map(function(_ele, idx) {
        return idx;
    }) : [];
};
var useTrackedEffect = function(effect, deps) {
    var previousDepsRef = (0, import_react74.useRef)();
    (0, import_react74.useEffect)(function() {
        var changes = diffTwoDeps(previousDepsRef.current, deps);
        var previousDeps = previousDepsRef.current;
        previousDepsRef.current = deps;
        return effect(changes, previousDeps, deps);
    }, deps);
};
var useTrackedEffect_default = useTrackedEffect;
// node_modules/ahooks/es/useUpdateLayoutEffect/index.js
var import_react75 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useUpdateLayoutEffect_default = createUpdateEffect(import_react75.useLayoutEffect);
// node_modules/ahooks/es/useVirtualList/index.js
var import_react76 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var useVirtualList = function(list, options) {
    var containerTarget = options.containerTarget, wrapperTarget = options.wrapperTarget, itemHeight = options.itemHeight, _a = options.overscan, overscan = _a === void 0 ? 5 : _a;
    var itemHeightRef = useLatest_default(itemHeight);
    var size = useSize_default(containerTarget);
    var scrollTriggerByScrollToFunc = (0, import_react76.useRef)(false);
    var _b = __read((0, import_react76.useState)([]), 2), targetList = _b[0], setTargetList = _b[1];
    var _c = __read((0, import_react76.useState)({}), 2), wrapperStyle = _c[0], setWrapperStyle = _c[1];
    var getVisibleCount = function(containerHeight, fromIndex) {
        if (isNumber(itemHeightRef.current)) {
            return Math.ceil(containerHeight / itemHeightRef.current);
        }
        var sum = 0;
        var endIndex = 0;
        for(var i = fromIndex; i < list.length; i++){
            var height = itemHeightRef.current(i, list[i]);
            sum += height;
            endIndex = i;
            if (sum >= containerHeight) {
                break;
            }
        }
        return endIndex - fromIndex;
    };
    var getOffset = function(scrollTop) {
        if (isNumber(itemHeightRef.current)) {
            return Math.floor(scrollTop / itemHeightRef.current) + 1;
        }
        var sum = 0;
        var offset = 0;
        for(var i = 0; i < list.length; i++){
            var height = itemHeightRef.current(i, list[i]);
            sum += height;
            if (sum >= scrollTop) {
                offset = i;
                break;
            }
        }
        return offset + 1;
    };
    var getDistanceTop = function(index2) {
        if (isNumber(itemHeightRef.current)) {
            var height_1 = index2 * itemHeightRef.current;
            return height_1;
        }
        var height = list.slice(0, index2).reduce(function(sum, _, i) {
            return sum + itemHeightRef.current(i, list[i]);
        }, 0);
        return height;
    };
    var totalHeight = (0, import_react76.useMemo)(function() {
        if (isNumber(itemHeightRef.current)) {
            return list.length * itemHeightRef.current;
        }
        return list.reduce(function(sum, _, index2) {
            return sum + itemHeightRef.current(index2, list[index2]);
        }, 0);
    }, [
        list
    ]);
    var calculateRange = function() {
        var container = getTargetElement(containerTarget);
        if (container) {
            var scrollTop = container.scrollTop, clientHeight = container.clientHeight;
            var offset = getOffset(scrollTop);
            var visibleCount = getVisibleCount(clientHeight, offset);
            var start_1 = Math.max(0, offset - overscan);
            var end = Math.min(list.length, offset + visibleCount + overscan);
            var offsetTop = getDistanceTop(start_1);
            setWrapperStyle({
                height: totalHeight - offsetTop + "px",
                marginTop: offsetTop + "px"
            });
            setTargetList(list.slice(start_1, end).map(function(ele, index2) {
                return {
                    data: ele,
                    index: index2 + start_1
                };
            }));
        }
    };
    useUpdateEffect_default(function() {
        var wrapper = getTargetElement(wrapperTarget);
        if (wrapper) {
            Object.keys(wrapperStyle).forEach(function(key) {
                return wrapper.style[key] = wrapperStyle[key];
            });
        }
    }, [
        wrapperStyle
    ]);
    (0, import_react76.useEffect)(function() {
        if (!(size === null || size === void 0 ? void 0 : size.width) || !(size === null || size === void 0 ? void 0 : size.height)) {
            return;
        }
        calculateRange();
    }, [
        size === null || size === void 0 ? void 0 : size.width,
        size === null || size === void 0 ? void 0 : size.height,
        list
    ]);
    useEventListener_default("scroll", function(e) {
        if (scrollTriggerByScrollToFunc.current) {
            scrollTriggerByScrollToFunc.current = false;
            return;
        }
        e.preventDefault();
        calculateRange();
    }, {
        target: containerTarget
    });
    var scrollTo = function(index2) {
        var container = getTargetElement(containerTarget);
        if (container) {
            scrollTriggerByScrollToFunc.current = true;
            container.scrollTop = getDistanceTop(index2);
            calculateRange();
        }
    };
    return [
        targetList,
        useMemoizedFn_default(scrollTo)
    ];
};
var useVirtualList_default = useVirtualList;
// node_modules/ahooks/es/useWebSocket/index.js
var import_react77 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
var ReadyState;
(function(ReadyState2) {
    ReadyState2[ReadyState2["Connecting"] = 0] = "Connecting";
    ReadyState2[ReadyState2["Open"] = 1] = "Open";
    ReadyState2[ReadyState2["Closing"] = 2] = "Closing";
    ReadyState2[ReadyState2["Closed"] = 3] = "Closed";
})(ReadyState || (ReadyState = {}));
function useWebSocket(socketUrl, options) {
    if (options === void 0) {
        options = {};
    }
    var _a = options.reconnectLimit, reconnectLimit = _a === void 0 ? 3 : _a, _b = options.reconnectInterval, reconnectInterval = _b === void 0 ? 3 * 1e3 : _b, _c = options.manual, manual = _c === void 0 ? false : _c, onOpen = options.onOpen, onClose = options.onClose, onMessage = options.onMessage, onError = options.onError, protocols = options.protocols;
    var onOpenRef = useLatest_default(onOpen);
    var onCloseRef = useLatest_default(onClose);
    var onMessageRef = useLatest_default(onMessage);
    var onErrorRef = useLatest_default(onError);
    var reconnectTimesRef = (0, import_react77.useRef)(0);
    var reconnectTimerRef = (0, import_react77.useRef)();
    var websocketRef = (0, import_react77.useRef)();
    var _d = __read((0, import_react77.useState)(), 2), latestMessage = _d[0], setLatestMessage = _d[1];
    var _e = __read((0, import_react77.useState)(ReadyState.Closed), 2), readyState = _e[0], setReadyState = _e[1];
    var reconnect = function() {
        var _a2;
        if (reconnectTimesRef.current < reconnectLimit && ((_a2 = websocketRef.current) === null || _a2 === void 0 ? void 0 : _a2.readyState) !== ReadyState.Open) {
            if (reconnectTimerRef.current) {
                clearTimeout(reconnectTimerRef.current);
            }
            reconnectTimerRef.current = setTimeout(function() {
                connectWs();
                reconnectTimesRef.current++;
            }, reconnectInterval);
        }
    };
    var connectWs = function() {
        if (reconnectTimerRef.current) {
            clearTimeout(reconnectTimerRef.current);
        }
        if (websocketRef.current) {
            websocketRef.current.close();
        }
        var ws = new WebSocket(socketUrl, protocols);
        setReadyState(ReadyState.Connecting);
        ws.onerror = function(event) {
            var _a2;
            if (websocketRef.current !== ws) {
                return;
            }
            reconnect();
            (_a2 = onErrorRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(onErrorRef, event, ws);
            setReadyState(ws.readyState || ReadyState.Closed);
        };
        ws.onopen = function(event) {
            var _a2;
            if (websocketRef.current !== ws) {
                return;
            }
            (_a2 = onOpenRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(onOpenRef, event, ws);
            reconnectTimesRef.current = 0;
            setReadyState(ws.readyState || ReadyState.Open);
        };
        ws.onmessage = function(message) {
            var _a2;
            if (websocketRef.current !== ws) {
                return;
            }
            (_a2 = onMessageRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(onMessageRef, message, ws);
            setLatestMessage(message);
        };
        ws.onclose = function(event) {
            var _a2;
            (_a2 = onCloseRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(onCloseRef, event, ws);
            if (websocketRef.current === ws) {
                reconnect();
            }
            if (!websocketRef.current || websocketRef.current === ws) {
                setReadyState(ws.readyState || ReadyState.Closed);
            }
        };
        websocketRef.current = ws;
    };
    var sendMessage = function(message) {
        var _a2;
        if (readyState === ReadyState.Open) {
            (_a2 = websocketRef.current) === null || _a2 === void 0 ? void 0 : _a2.send(message);
        } else {
            throw new Error("WebSocket disconnected");
        }
    };
    var connect = function() {
        reconnectTimesRef.current = 0;
        connectWs();
    };
    var disconnect = function() {
        var _a2;
        if (reconnectTimerRef.current) {
            clearTimeout(reconnectTimerRef.current);
        }
        reconnectTimesRef.current = reconnectLimit;
        (_a2 = websocketRef.current) === null || _a2 === void 0 ? void 0 : _a2.close();
        websocketRef.current = void 0;
    };
    (0, import_react77.useEffect)(function() {
        if (!manual && socketUrl) {
            connect();
        }
    }, [
        socketUrl,
        manual
    ]);
    useUnmount_default(function() {
        disconnect();
    });
    return {
        latestMessage,
        sendMessage: useMemoizedFn_default(sendMessage),
        connect: useMemoizedFn_default(connect),
        disconnect: useMemoizedFn_default(disconnect),
        readyState,
        webSocketIns: websocketRef.current
    };
}
// node_modules/ahooks/es/useWhyDidYouUpdate/index.js
var import_react78 = (0,_chunk_3RWA6CQF_js__WEBPACK_IMPORTED_MODULE_1__.__toESM)((0,_chunk_GKRHZ5RF_js__WEBPACK_IMPORTED_MODULE_0__.require_react_production_min)());
function useWhyDidYouUpdate(componentName, props) {
    var prevProps = (0, import_react78.useRef)({});
    (0, import_react78.useEffect)(function() {
        if (prevProps.current) {
            var allKeys = Object.keys(__assign(__assign({}, prevProps.current), props));
            var changedProps_1 = {};
            allKeys.forEach(function(key) {
                if (!Object.is(prevProps.current[key], props[key])) {
                    changedProps_1[key] = {
                        from: prevProps.current[key],
                        to: props[key]
                    };
                }
            });
            if (Object.keys(changedProps_1).length) {
                console.log("[why-did-you-update]", componentName, changedProps_1);
            }
        }
        prevProps.current = props;
    });
}
// node_modules/ahooks/es/useMutationObserver/index.js
var useMutationObserver = function(callback, target, options) {
    if (options === void 0) {
        options = {};
    }
    var callbackRef = useLatest_default(callback);
    useDeepCompareWithTarget_default(function() {
        var element = getTargetElement(target);
        if (!element) {
            return;
        }
        var observer2 = new MutationObserver(callbackRef.current);
        observer2.observe(element, options);
        return function() {
            observer2 === null || observer2 === void 0 ? void 0 : observer2.disconnect();
        };
    }, [
        options
    ], target);
};
var useMutationObserver_default = useMutationObserver;
 /*! Bundled license information:

js-cookie/src/js.cookie.js:
  (*!
   * JavaScript Cookie v2.2.1
   * https://github.com/js-cookie/js-cookie
   *
   * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
   * Released under the MIT license
   *)

screenfull/dist/screenfull.js:
  (*!
  * screenfull
  * v5.2.0 - 2021-11-03
  * (c) Sindre Sorhus; MIT License
  *)
*/ 


/***/ })

}]);